/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={7332:(e,n,t)=>{"use strict";e.exports=t.p+"images/cocktail-panel.jpg"},1983:(e,n,t)=>{"use strict";t(6266),t(990),t(911),t(4160),t(6197),t(6728),t(4039),t(3568),t(8051),t(8250),t(5434),t(4952),t(6337),t(5666)},9669:(e,n,t)=>{e.exports=t(1609)},5448:(e,n,t)=>{"use strict";var r=t(4867),o=t(6026),i=t(4372),a=t(5327),l=t(4097),c=t(4109),s=t(7985),A=t(5061);e.exports=function(e){return new Promise((function(n,t){var u=e.data,d=e.headers;r.isFormData(u)&&delete d["Content-Type"];var f=new XMLHttpRequest;if(e.auth){var p=e.auth.username||"",h=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(p+":"+h)}var C=l(e.baseURL,e.url);if(f.open(e.method.toUpperCase(),a(C,e.params,e.paramsSerializer),!0),f.timeout=e.timeout,f.onreadystatechange=function(){if(f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in f?c(f.getAllResponseHeaders()):null,i={data:e.responseType&&"text"!==e.responseType?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:r,config:e,request:f};o(n,t,i),f=null}},f.onabort=function(){f&&(t(A("Request aborted",e,"ECONNABORTED",f)),f=null)},f.onerror=function(){t(A("Network Error",e,null,f)),f=null},f.ontimeout=function(){var n="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),t(A(n,e,"ECONNABORTED",f)),f=null},r.isStandardBrowserEnv()){var m=(e.withCredentials||s(C))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;m&&(d[e.xsrfHeaderName]=m)}if("setRequestHeader"in f&&r.forEach(d,(function(e,n){void 0===u&&"content-type"===n.toLowerCase()?delete d[n]:f.setRequestHeader(n,e)})),r.isUndefined(e.withCredentials)||(f.withCredentials=!!e.withCredentials),e.responseType)try{f.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&f.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){f&&(f.abort(),t(e),f=null)})),u||(u=null),f.send(u)}))}},1609:(e,n,t)=>{"use strict";var r=t(4867),o=t(1849),i=t(321),a=t(7185);function l(e){var n=new i(e),t=o(i.prototype.request,n);return r.extend(t,i.prototype,n),r.extend(t,n),t}var c=l(t(5655));c.Axios=i,c.create=function(e){return l(a(c.defaults,e))},c.Cancel=t(5263),c.CancelToken=t(4972),c.isCancel=t(6502),c.all=function(e){return Promise.all(e)},c.spread=t(8713),c.isAxiosError=t(6268),e.exports=c,e.exports.default=c},5263:e=>{"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},4972:(e,n,t)=>{"use strict";var r=t(5263);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;e((function(e){t.reason||(t.reason=new r(e),n(t.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(n){e=n})),cancel:e}},e.exports=o},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,n,t)=>{"use strict";var r=t(4867),o=t(5327),i=t(782),a=t(3572),l=t(7185);function c(e){this.defaults=e,this.interceptors={request:new i,response:new i}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var n=[a,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){n.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){n.push(e.fulfilled,e.rejected)}));n.length;)t=t.then(n.shift(),n.shift());return t},c.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(n,t){return this.request(l(t||{},{method:e,url:n,data:(t||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(n,t,r){return this.request(l(r||{},{method:e,url:n,data:t}))}})),e.exports=c},782:(e,n,t)=>{"use strict";var r=t(4867);function o(){this.handlers=[]}o.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=o},4097:(e,n,t)=>{"use strict";var r=t(1793),o=t(7303);e.exports=function(e,n){return e&&!r(n)?o(e,n):n}},5061:(e,n,t)=>{"use strict";var r=t(481);e.exports=function(e,n,t,o,i){var a=new Error(e);return r(a,n,t,o,i)}},3572:(e,n,t)=>{"use strict";var r=t(4867),o=t(8527),i=t(6502),a=t(5655);function l(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return l(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||a.adapter)(e).then((function(n){return l(e),n.data=o(n.data,n.headers,e.transformResponse),n}),(function(n){return i(n)||(l(e),n&&n.response&&(n.response.data=o(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},481:e=>{"use strict";e.exports=function(e,n,t,r,o){return e.config=n,t&&(e.code=t),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},7185:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e,n){n=n||{};var t={},o=["url","method","data"],i=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],l=["validateStatus"];function c(e,n){return r.isPlainObject(e)&&r.isPlainObject(n)?r.merge(e,n):r.isPlainObject(n)?r.merge({},n):r.isArray(n)?n.slice():n}function s(o){r.isUndefined(n[o])?r.isUndefined(e[o])||(t[o]=c(void 0,e[o])):t[o]=c(e[o],n[o])}r.forEach(o,(function(e){r.isUndefined(n[e])||(t[e]=c(void 0,n[e]))})),r.forEach(i,s),r.forEach(a,(function(o){r.isUndefined(n[o])?r.isUndefined(e[o])||(t[o]=c(void 0,e[o])):t[o]=c(void 0,n[o])})),r.forEach(l,(function(r){r in n?t[r]=c(e[r],n[r]):r in e&&(t[r]=c(void 0,e[r]))}));var A=o.concat(i).concat(a).concat(l),u=Object.keys(e).concat(Object.keys(n)).filter((function(e){return-1===A.indexOf(e)}));return r.forEach(u,s),t}},6026:(e,n,t)=>{"use strict";var r=t(5061);e.exports=function(e,n,t){var o=t.config.validateStatus;t.status&&o&&!o(t.status)?n(r("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},8527:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e,n,t){return r.forEach(t,(function(t){e=t(e,n)})),e}},5655:(e,n,t)=>{"use strict";var r=t(4867),o=t(6016),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,n){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var l,c={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(l=t(5448)),l),transformRequest:[function(e,n){return o(n,"Accept"),o(n,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){c.headers[e]=r.merge(i)})),e.exports=c},1849:e=>{"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];return e.apply(n,t)}}},5327:(e,n,t)=>{"use strict";var r=t(4867);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var i;if(t)i=t(n);else if(r.isURLSearchParams(n))i=n.toString();else{var a=[];r.forEach(n,(function(e,n){null!=e&&(r.isArray(e)?n+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(n)+"="+o(e))})))})),i=a.join("&")}if(i){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},7303:e=>{"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},4372:(e,n,t)=>{"use strict";var r=t(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,n,t,o,i,a){var l=[];l.push(e+"="+encodeURIComponent(n)),r.isNumber(t)&&l.push("expires="+new Date(t).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(i)&&l.push("domain="+i),!0===a&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},6268:e=>{"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},7985:(e,n,t)=>{"use strict";var r=t(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function o(e){var r=e;return n&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=o(window.location.href),function(n){var t=r.isString(n)?o(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},6016:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e,n){r.forEach(e,(function(t,r){r!==n&&r.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[r])}))}},4109:(e,n,t)=>{"use strict";var r=t(4867),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),n=r.trim(e.substr(0,i)).toLowerCase(),t=r.trim(e.substr(i+1)),n){if(a[n]&&o.indexOf(n)>=0)return;a[n]="set-cookie"===n?(a[n]?a[n]:[]).concat([t]):a[n]?a[n]+", "+t:t}})),a):a}},8713:e=>{"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},4867:(e,n,t)=>{"use strict";var r=t(1849),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function a(e){return void 0===e}function l(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==o.call(e))return!1;var n=Object.getPrototypeOf(e);return null===n||n===Object.prototype}function s(e){return"[object Function]"===o.call(e)}function A(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var t=0,r=e.length;t<r;t++)n.call(null,e[t],t,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&n.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isPlainObject:c,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:s,isStream:function(e){return l(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:A,merge:function e(){var n={};function t(t,r){c(n[r])&&c(t)?n[r]=e(n[r],t):c(t)?n[r]=e({},t):i(t)?n[r]=t.slice():n[r]=t}for(var r=0,o=arguments.length;r<o;r++)A(arguments[r],t);return n},extend:function(e,n,t){return A(n,(function(n,o){e[o]=t&&"function"==typeof n?r(n,t):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},6266:(e,n,t)=>{t(5767),t(8132),t(8388),t(7470),t(4882),t(1520),t(7476),t(9622),t(9375),t(3533),t(4672),t(4157),t(5095),t(9892),t(5115),t(9176),t(8838),t(6253),t(9730),t(6059),t(8377),t(1084),t(4299),t(1246),t(726),t(1901),t(5972),t(3403),t(2516),t(9371),t(6479),t(1736),t(1889),t(5177),t(6943),t(6503),t(6786),t(932),t(7526),t(1591),t(9073),t(347),t(579),t(4669),t(7710),t(5789),t(3514),t(9978),t(8472),t(6946),t(5068),t(413),t(191),t(8306),t(4564),t(9115),t(9539),t(6620),t(2850),t(823),t(7732),t(856),t(703),t(1539),t(5292),t(6629),t(3694),t(7648),t(7795),t(4531),t(3605),t(6780),t(9937),t(511),t(1822),t(9977),t(1031),t(6331),t(1560),t(774),t(522),t(8295),t(7842),t(110),t(75),t(4336),t(1802),t(8837),t(6773),t(5745),t(3057),t(3750),t(3369),t(9564),t(2e3),t(8977),t(2310),t(4899),t(1842),t(6997),t(3946),t(8269),t(6108),t(6774),t(1466),t(9357),t(6142),t(1876),t(851),t(8416),t(8184),t(147),t(9192),t(142),t(1786),t(5368),t(6964),t(2152),t(4821),t(9103),t(1303),t(3318),t(162),t(3834),t(1572),t(2139),t(685),t(5535),t(7347),t(3049),t(6633),t(8989),t(8270),t(4510),t(3984),t(5769),t(55),t(6014),e.exports=t(5645)},911:(e,n,t)=>{t(1268),e.exports=t(5645).Array.flatMap},990:(e,n,t)=>{t(2773),e.exports=t(5645).Array.includes},5434:(e,n,t)=>{t(3276),e.exports=t(5645).Object.entries},8051:(e,n,t)=>{t(8351),e.exports=t(5645).Object.getOwnPropertyDescriptors},8250:(e,n,t)=>{t(6409),e.exports=t(5645).Object.values},4952:(e,n,t)=>{"use strict";t(851),t(9865),e.exports=t(5645).Promise.finally},6197:(e,n,t)=>{t(2770),e.exports=t(5645).String.padEnd},4160:(e,n,t)=>{t(1784),e.exports=t(5645).String.padStart},4039:(e,n,t)=>{t(4325),e.exports=t(5645).String.trimRight},6728:(e,n,t)=>{t(5869),e.exports=t(5645).String.trimLeft},3568:(e,n,t)=>{t(9665),e.exports=t(8787).f("asyncIterator")},115:(e,n,t)=>{t(4579),e.exports=t(1327).global},5663:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},2159:(e,n,t)=>{var r=t(6727);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},1327:e=>{var n=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=n)},9216:(e,n,t)=>{var r=t(5663);e.exports=function(e,n,t){if(r(e),void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 2:return function(t,r){return e.call(n,t,r)};case 3:return function(t,r,o){return e.call(n,t,r,o)}}return function(){return e.apply(n,arguments)}}},9666:(e,n,t)=>{e.exports=!t(7929)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},7467:(e,n,t)=>{var r=t(6727),o=t(3938).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},3856:(e,n,t)=>{var r=t(3938),o=t(1327),i=t(9216),a=t(1818),l=t(7069),c=function(e,n,t){var s,A,u,d=e&c.F,f=e&c.G,p=e&c.S,h=e&c.P,C=e&c.B,m=e&c.W,w=f?o:o[n]||(o[n]={}),g=w.prototype,y=f?r:p?r[n]:(r[n]||{}).prototype;for(s in f&&(t=n),t)(A=!d&&y&&void 0!==y[s])&&l(w,s)||(u=A?y[s]:t[s],w[s]=f&&"function"!=typeof y[s]?t[s]:C&&A?i(u,r):m&&y[s]==u?function(e){var n=function(n,t,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(n);case 2:return new e(n,t)}return new e(n,t,r)}return e.apply(this,arguments)};return n.prototype=e.prototype,n}(u):h&&"function"==typeof u?i(Function.call,u):u,h&&((w.virtual||(w.virtual={}))[s]=u,e&c.R&&g&&!g[s]&&a(g,s,u)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},7929:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},3938:e=>{var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},7069:e=>{var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},1818:(e,n,t)=>{var r=t(4743),o=t(3101);e.exports=t(9666)?function(e,n,t){return r.f(e,n,o(1,t))}:function(e,n,t){return e[n]=t,e}},3758:(e,n,t)=>{e.exports=!t(9666)&&!t(7929)((function(){return 7!=Object.defineProperty(t(7467)("div"),"a",{get:function(){return 7}}).a}))},6727:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},4743:(e,n,t)=>{var r=t(2159),o=t(3758),i=t(3206),a=Object.defineProperty;n.f=t(9666)?Object.defineProperty:function(e,n,t){if(r(e),n=i(n,!0),r(t),o)try{return a(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[n]=t.value),e}},3101:e=>{e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},3206:(e,n,t)=>{var r=t(6727);e.exports=function(e,n){if(!r(e))return e;var t,o;if(n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;if("function"==typeof(t=e.valueOf)&&!r(o=t.call(e)))return o;if(!n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},4579:(e,n,t)=>{var r=t(3856);r(r.G,{global:t(3938)})},4963:e=>{e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},3365:(e,n,t)=>{var r=t(2032);e.exports=function(e,n){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(n);return+e}},7722:(e,n,t)=>{var r=t(6314)("unscopables"),o=Array.prototype;null==o[r]&&t(7728)(o,r,{}),e.exports=function(e){o[r][e]=!0}},6793:(e,n,t)=>{"use strict";var r=t(4496)(!0);e.exports=function(e,n,t){return n+(t?r(e,n).length:1)}},3328:e=>{e.exports=function(e,n,t,r){if(!(e instanceof n)||void 0!==r&&r in e)throw TypeError(t+": incorrect invocation!");return e}},7007:(e,n,t)=>{var r=t(5286);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},5216:(e,n,t)=>{"use strict";var r=t(508),o=t(2337),i=t(875);e.exports=[].copyWithin||function(e,n){var t=r(this),a=i(t.length),l=o(e,a),c=o(n,a),s=arguments.length>2?arguments[2]:void 0,A=Math.min((void 0===s?a:o(s,a))-c,a-l),u=1;for(c<l&&l<c+A&&(u=-1,c+=A-1,l+=A-1);A-- >0;)c in t?t[l]=t[c]:delete t[l],l+=u,c+=u;return t}},6852:(e,n,t)=>{"use strict";var r=t(508),o=t(2337),i=t(875);e.exports=function(e){for(var n=r(this),t=i(n.length),a=arguments.length,l=o(a>1?arguments[1]:void 0,t),c=a>2?arguments[2]:void 0,s=void 0===c?t:o(c,t);s>l;)n[l++]=e;return n}},9315:(e,n,t)=>{var r=t(2110),o=t(875),i=t(2337);e.exports=function(e){return function(n,t,a){var l,c=r(n),s=o(c.length),A=i(a,s);if(e&&t!=t){for(;s>A;)if((l=c[A++])!=l)return!0}else for(;s>A;A++)if((e||A in c)&&c[A]===t)return e||A||0;return!e&&-1}}},50:(e,n,t)=>{var r=t(741),o=t(9797),i=t(508),a=t(875),l=t(6886);e.exports=function(e,n){var t=1==e,c=2==e,s=3==e,A=4==e,u=6==e,d=5==e||u,f=n||l;return function(n,l,p){for(var h,C,m=i(n),w=o(m),g=r(l,p,3),y=a(w.length),b=0,v=t?f(n,y):c?f(n,0):void 0;y>b;b++)if((d||b in w)&&(C=g(h=w[b],b,m),e))if(t)v[b]=C;else if(C)switch(e){case 3:return!0;case 5:return h;case 6:return b;case 2:v.push(h)}else if(A)return!1;return u?-1:s||A?A:v}}},7628:(e,n,t)=>{var r=t(4963),o=t(508),i=t(9797),a=t(875);e.exports=function(e,n,t,l,c){r(n);var s=o(e),A=i(s),u=a(s.length),d=c?u-1:0,f=c?-1:1;if(t<2)for(;;){if(d in A){l=A[d],d+=f;break}if(d+=f,c?d<0:u<=d)throw TypeError("Reduce of empty array with no initial value")}for(;c?d>=0:u>d;d+=f)d in A&&(l=n(l,A[d],d,s));return l}},2736:(e,n,t)=>{var r=t(5286),o=t(4302),i=t(6314)("species");e.exports=function(e){var n;return o(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!o(n.prototype)||(n=void 0),r(n)&&null===(n=n[i])&&(n=void 0)),void 0===n?Array:n}},6886:(e,n,t)=>{var r=t(2736);e.exports=function(e,n){return new(r(e))(n)}},4398:(e,n,t)=>{"use strict";var r=t(4963),o=t(5286),i=t(7242),a=[].slice,l={},c=function(e,n,t){if(!(n in l)){for(var r=[],o=0;o<n;o++)r[o]="a["+o+"]";l[n]=Function("F,a","return new F("+r.join(",")+")")}return l[n](e,t)};e.exports=Function.bind||function(e){var n=r(this),t=a.call(arguments,1),l=function(){var r=t.concat(a.call(arguments));return this instanceof l?c(n,r.length,r):i(n,r,e)};return o(n.prototype)&&(l.prototype=n.prototype),l}},1488:(e,n,t)=>{var r=t(2032),o=t(6314)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var n,t,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),o))?t:i?r(n):"Object"==(a=r(n))&&"function"==typeof n.callee?"Arguments":a}},2032:e=>{var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},9824:(e,n,t)=>{"use strict";var r=t(9275).f,o=t(2503),i=t(4408),a=t(741),l=t(3328),c=t(3531),s=t(2923),A=t(5436),u=t(2974),d=t(7057),f=t(4728).fastKey,p=t(1616),h=d?"_s":"size",C=function(e,n){var t,r=f(n);if("F"!==r)return e._i[r];for(t=e._f;t;t=t.n)if(t.k==n)return t};e.exports={getConstructor:function(e,n,t,s){var A=e((function(e,r){l(e,A,n,"_i"),e._t=n,e._i=o(null),e._f=void 0,e._l=void 0,e[h]=0,null!=r&&c(r,t,e[s],e)}));return i(A.prototype,{clear:function(){for(var e=p(this,n),t=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete t[r.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var t=p(this,n),r=C(t,e);if(r){var o=r.n,i=r.p;delete t._i[r.i],r.r=!0,i&&(i.n=o),o&&(o.p=i),t._f==r&&(t._f=o),t._l==r&&(t._l=i),t[h]--}return!!r},forEach:function(e){p(this,n);for(var t,r=a(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.n:this._f;)for(r(t.v,t.k,this);t&&t.r;)t=t.p},has:function(e){return!!C(p(this,n),e)}}),d&&r(A.prototype,"size",{get:function(){return p(this,n)[h]}}),A},def:function(e,n,t){var r,o,i=C(e,n);return i?i.v=t:(e._l=i={i:o=f(n,!0),k:n,v:t,p:r=e._l,n:void 0,r:!1},e._f||(e._f=i),r&&(r.n=i),e[h]++,"F"!==o&&(e._i[o]=i)),e},getEntry:C,setStrong:function(e,n,t){s(e,n,(function(e,t){this._t=p(e,n),this._k=t,this._l=void 0}),(function(){for(var e=this,n=e._k,t=e._l;t&&t.r;)t=t.p;return e._t&&(e._l=t=t?t.n:e._t._f)?A(0,"keys"==n?t.k:"values"==n?t.v:[t.k,t.v]):(e._t=void 0,A(1))}),t?"entries":"values",!t,!0),u(n)}}},3657:(e,n,t)=>{"use strict";var r=t(4408),o=t(4728).getWeak,i=t(7007),a=t(5286),l=t(3328),c=t(3531),s=t(50),A=t(9181),u=t(1616),d=s(5),f=s(6),p=0,h=function(e){return e._l||(e._l=new C)},C=function(){this.a=[]},m=function(e,n){return d(e.a,(function(e){return e[0]===n}))};C.prototype={get:function(e){var n=m(this,e);if(n)return n[1]},has:function(e){return!!m(this,e)},set:function(e,n){var t=m(this,e);t?t[1]=n:this.a.push([e,n])},delete:function(e){var n=f(this.a,(function(n){return n[0]===e}));return~n&&this.a.splice(n,1),!!~n}},e.exports={getConstructor:function(e,n,t,i){var s=e((function(e,r){l(e,s,n,"_i"),e._t=n,e._i=p++,e._l=void 0,null!=r&&c(r,t,e[i],e)}));return r(s.prototype,{delete:function(e){if(!a(e))return!1;var t=o(e);return!0===t?h(u(this,n)).delete(e):t&&A(t,this._i)&&delete t[this._i]},has:function(e){if(!a(e))return!1;var t=o(e);return!0===t?h(u(this,n)).has(e):t&&A(t,this._i)}}),s},def:function(e,n,t){var r=o(i(n),!0);return!0===r?h(e).set(n,t):r[e._i]=t,e},ufstore:h}},5795:(e,n,t)=>{"use strict";var r=t(3816),o=t(2985),i=t(7234),a=t(4408),l=t(4728),c=t(3531),s=t(3328),A=t(5286),u=t(4253),d=t(7462),f=t(2943),p=t(266);e.exports=function(e,n,t,h,C,m){var w=r[e],g=w,y=C?"set":"add",b=g&&g.prototype,v={},x=function(e){var n=b[e];i(b,e,"delete"==e||"has"==e?function(e){return!(m&&!A(e))&&n.call(this,0===e?0:e)}:"get"==e?function(e){return m&&!A(e)?void 0:n.call(this,0===e?0:e)}:"add"==e?function(e){return n.call(this,0===e?0:e),this}:function(e,t){return n.call(this,0===e?0:e,t),this})};if("function"==typeof g&&(m||b.forEach&&!u((function(){(new g).entries().next()})))){var I=new g,B=I[y](m?{}:-0,1)!=I,k=u((function(){I.has(1)})),S=d((function(e){new g(e)})),_=!m&&u((function(){for(var e=new g,n=5;n--;)e[y](n,n);return!e.has(-0)}));S||((g=n((function(n,t){s(n,g,e);var r=p(new w,n,g);return null!=t&&c(t,C,r[y],r),r}))).prototype=b,b.constructor=g),(k||_)&&(x("delete"),x("has"),C&&x("get")),(_||B)&&x(y),m&&b.clear&&delete b.clear}else g=h.getConstructor(n,e,C,y),a(g.prototype,t),l.NEED=!0;return f(g,e),v[e]=g,o(o.G+o.W+o.F*(g!=w),v),m||h.setStrong(g,e,C),g}},5645:e=>{var n=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=n)},2811:(e,n,t)=>{"use strict";var r=t(9275),o=t(681);e.exports=function(e,n,t){n in e?r.f(e,n,o(0,t)):e[n]=t}},741:(e,n,t)=>{var r=t(4963);e.exports=function(e,n,t){if(r(e),void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 2:return function(t,r){return e.call(n,t,r)};case 3:return function(t,r,o){return e.call(n,t,r,o)}}return function(){return e.apply(n,arguments)}}},3537:(e,n,t)=>{"use strict";var r=t(4253),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-50000000000001))}))||!r((function(){i.call(new Date(NaN))}))?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,n=e.getUTCFullYear(),t=e.getUTCMilliseconds(),r=n<0?"-":n>9999?"+":"";return r+("00000"+Math.abs(n)).slice(r?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(t>99?t:"0"+a(t))+"Z"}:i},870:(e,n,t)=>{"use strict";var r=t(7007),o=t(1689),i="number";e.exports=function(e){if("string"!==e&&e!==i&&"default"!==e)throw TypeError("Incorrect hint");return o(r(this),e!=i)}},1355:e=>{e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},7057:(e,n,t)=>{e.exports=!t(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:(e,n,t)=>{var r=t(5286),o=t(3816).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},4430:e=>{e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},5541:(e,n,t)=>{var r=t(7184),o=t(4548),i=t(4682);e.exports=function(e){var n=r(e),t=o.f;if(t)for(var a,l=t(e),c=i.f,s=0;l.length>s;)c.call(e,a=l[s++])&&n.push(a);return n}},2985:(e,n,t)=>{var r=t(3816),o=t(5645),i=t(7728),a=t(7234),l=t(741),c=function(e,n,t){var s,A,u,d,f=e&c.F,p=e&c.G,h=e&c.S,C=e&c.P,m=e&c.B,w=p?r:h?r[n]||(r[n]={}):(r[n]||{}).prototype,g=p?o:o[n]||(o[n]={}),y=g.prototype||(g.prototype={});for(s in p&&(t=n),t)u=((A=!f&&w&&void 0!==w[s])?w:t)[s],d=m&&A?l(u,r):C&&"function"==typeof u?l(Function.call,u):u,w&&a(w,s,u,e&c.U),g[s]!=u&&i(g,s,d),C&&y[s]!=u&&(y[s]=u)};r.core=o,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},8852:(e,n,t)=>{var r=t(6314)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[r]=!1,!"/./"[e](n)}catch(e){}}return!0}},4253:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},8082:(e,n,t)=>{"use strict";t(8269);var r=t(7234),o=t(7728),i=t(4253),a=t(1355),l=t(6314),c=t(1165),s=l("species"),A=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u=function(){var e=/(?:)/,n=e.exec;e.exec=function(){return n.apply(this,arguments)};var t="ab".split(e);return 2===t.length&&"a"===t[0]&&"b"===t[1]}();e.exports=function(e,n,t){var d=l(e),f=!i((function(){var n={};return n[d]=function(){return 7},7!=""[e](n)})),p=f?!i((function(){var n=!1,t=/a/;return t.exec=function(){return n=!0,null},"split"===e&&(t.constructor={},t.constructor[s]=function(){return t}),t[d](""),!n})):void 0;if(!f||!p||"replace"===e&&!A||"split"===e&&!u){var h=/./[d],C=t(a,d,""[e],(function(e,n,t,r,o){return n.exec===c?f&&!o?{done:!0,value:h.call(n,t,r)}:{done:!0,value:e.call(t,n,r)}:{done:!1}})),m=C[0],w=C[1];r(String.prototype,e,m),o(RegExp.prototype,d,2==n?function(e,n){return w.call(e,this,n)}:function(e){return w.call(e,this)})}}},3218:(e,n,t)=>{"use strict";var r=t(7007);e.exports=function(){var e=r(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},3325:(e,n,t)=>{"use strict";var r=t(4302),o=t(5286),i=t(875),a=t(741),l=t(6314)("isConcatSpreadable");e.exports=function e(n,t,c,s,A,u,d,f){for(var p,h,C=A,m=0,w=!!d&&a(d,f,3);m<s;){if(m in c){if(p=w?w(c[m],m,t):c[m],h=!1,o(p)&&(h=void 0!==(h=p[l])?!!h:r(p)),h&&u>0)C=e(n,t,p,i(p.length),C,u-1)-1;else{if(C>=9007199254740991)throw TypeError();n[C]=p}C++}m++}return C}},3531:(e,n,t)=>{var r=t(741),o=t(8851),i=t(6555),a=t(7007),l=t(875),c=t(9002),s={},A={},u=e.exports=function(e,n,t,u,d){var f,p,h,C,m=d?function(){return e}:c(e),w=r(t,u,n?2:1),g=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(i(m)){for(f=l(e.length);f>g;g++)if((C=n?w(a(p=e[g])[0],p[1]):w(e[g]))===s||C===A)return C}else for(h=m.call(e);!(p=h.next()).done;)if((C=o(h,w,p.value,n))===s||C===A)return C};u.BREAK=s,u.RETURN=A},18:(e,n,t)=>{e.exports=t(3825)("native-function-to-string",Function.toString)},3816:e=>{var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},9181:e=>{var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},7728:(e,n,t)=>{var r=t(9275),o=t(681);e.exports=t(7057)?function(e,n,t){return r.f(e,n,o(1,t))}:function(e,n,t){return e[n]=t,e}},639:(e,n,t)=>{var r=t(3816).document;e.exports=r&&r.documentElement},1734:(e,n,t)=>{e.exports=!t(7057)&&!t(4253)((function(){return 7!=Object.defineProperty(t(2457)("div"),"a",{get:function(){return 7}}).a}))},266:(e,n,t)=>{var r=t(5286),o=t(7375).set;e.exports=function(e,n,t){var i,a=n.constructor;return a!==t&&"function"==typeof a&&(i=a.prototype)!==t.prototype&&r(i)&&o&&o(e,i),e}},7242:e=>{e.exports=function(e,n,t){var r=void 0===t;switch(n.length){case 0:return r?e():e.call(t);case 1:return r?e(n[0]):e.call(t,n[0]);case 2:return r?e(n[0],n[1]):e.call(t,n[0],n[1]);case 3:return r?e(n[0],n[1],n[2]):e.call(t,n[0],n[1],n[2]);case 4:return r?e(n[0],n[1],n[2],n[3]):e.call(t,n[0],n[1],n[2],n[3])}return e.apply(t,n)}},9797:(e,n,t)=>{var r=t(2032);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},6555:(e,n,t)=>{var r=t(2803),o=t(6314)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},4302:(e,n,t)=>{var r=t(2032);e.exports=Array.isArray||function(e){return"Array"==r(e)}},8367:(e,n,t)=>{var r=t(5286),o=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&o(e)===e}},5286:e=>{e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},5364:(e,n,t)=>{var r=t(5286),o=t(2032),i=t(6314)("match");e.exports=function(e){var n;return r(e)&&(void 0!==(n=e[i])?!!n:"RegExp"==o(e))}},8851:(e,n,t)=>{var r=t(7007);e.exports=function(e,n,t,o){try{return o?n(r(t)[0],t[1]):n(t)}catch(n){var i=e.return;throw void 0!==i&&r(i.call(e)),n}}},9988:(e,n,t)=>{"use strict";var r=t(2503),o=t(681),i=t(2943),a={};t(7728)(a,t(6314)("iterator"),(function(){return this})),e.exports=function(e,n,t){e.prototype=r(a,{next:o(1,t)}),i(e,n+" Iterator")}},2923:(e,n,t)=>{"use strict";var r=t(4461),o=t(2985),i=t(7234),a=t(7728),l=t(2803),c=t(9988),s=t(2943),A=t(468),u=t(6314)("iterator"),d=!([].keys&&"next"in[].keys()),f="keys",p="values",h=function(){return this};e.exports=function(e,n,t,C,m,w,g){c(t,n,C);var y,b,v,x=function(e){if(!d&&e in S)return S[e];switch(e){case f:case p:return function(){return new t(this,e)}}return function(){return new t(this,e)}},I=n+" Iterator",B=m==p,k=!1,S=e.prototype,_=S[u]||S["@@iterator"]||m&&S[m],D=_||x(m),E=m?B?x("entries"):D:void 0,J="Array"==n&&S.entries||_;if(J&&(v=A(J.call(new e)))!==Object.prototype&&v.next&&(s(v,I,!0),r||"function"==typeof v[u]||a(v,u,h)),B&&_&&_.name!==p&&(k=!0,D=function(){return _.call(this)}),r&&!g||!d&&!k&&S[u]||a(S,u,D),l[n]=D,l[I]=h,m)if(y={values:B?D:x(p),keys:w?D:x(f),entries:E},g)for(b in y)b in S||i(S,b,y[b]);else o(o.P+o.F*(d||k),n,y);return y}},7462:(e,n,t)=>{var r=t(6314)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!o)return!1;var t=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:t=!0}},i[r]=function(){return a},e(i)}catch(e){}return t}},5436:e=>{e.exports=function(e,n){return{value:n,done:!!e}}},2803:e=>{e.exports={}},4461:e=>{e.exports=!1},3086:e=>{var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},4934:(e,n,t)=>{var r=t(1801),o=Math.pow,i=o(2,-52),a=o(2,-23),l=o(2,127)*(2-a),c=o(2,-126);e.exports=Math.fround||function(e){var n,t,o=Math.abs(e),s=r(e);return o<c?s*(o/c/a+1/i-1/i)*c*a:(t=(n=(1+a/i)*o)-(n-o))>l||t!=t?s*(1/0):s*t}},6206:e=>{e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},1801:e=>{e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},4728:(e,n,t)=>{var r=t(3953)("meta"),o=t(5286),i=t(9181),a=t(9275).f,l=0,c=Object.isExtensible||function(){return!0},s=!t(4253)((function(){return c(Object.preventExtensions({}))})),A=function(e){a(e,r,{value:{i:"O"+ ++l,w:{}}})},u=e.exports={KEY:r,NEED:!1,fastKey:function(e,n){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!c(e))return"F";if(!n)return"E";A(e)}return e[r].i},getWeak:function(e,n){if(!i(e,r)){if(!c(e))return!0;if(!n)return!1;A(e)}return e[r].w},onFreeze:function(e){return s&&u.NEED&&c(e)&&!i(e,r)&&A(e),e}}},4351:(e,n,t)=>{var r=t(3816),o=t(4193).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,l=r.Promise,c="process"==t(2032)(a);e.exports=function(){var e,n,t,s=function(){var r,o;for(c&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?t():n=void 0,r}}n=void 0,r&&r.enter()};if(c)t=function(){a.nextTick(s)};else if(!i||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var A=l.resolve(void 0);t=function(){A.then(s)}}else t=function(){o.call(r,s)};else{var u=!0,d=document.createTextNode("");new i(s).observe(d,{characterData:!0}),t=function(){d.data=u=!u}}return function(r){var o={fn:r,next:void 0};n&&(n.next=o),e||(e=o,t()),n=o}}},3499:(e,n,t)=>{"use strict";var r=t(4963);function o(e){var n,t;this.promise=new e((function(e,r){if(void 0!==n||void 0!==t)throw TypeError("Bad Promise constructor");n=e,t=r})),this.resolve=r(n),this.reject=r(t)}e.exports.f=function(e){return new o(e)}},5345:(e,n,t)=>{"use strict";var r=t(7057),o=t(7184),i=t(4548),a=t(4682),l=t(508),c=t(9797),s=Object.assign;e.exports=!s||t(4253)((function(){var e={},n={},t=Symbol(),r="abcdefghijklmnopqrst";return e[t]=7,r.split("").forEach((function(e){n[e]=e})),7!=s({},e)[t]||Object.keys(s({},n)).join("")!=r}))?function(e,n){for(var t=l(e),s=arguments.length,A=1,u=i.f,d=a.f;s>A;)for(var f,p=c(arguments[A++]),h=u?o(p).concat(u(p)):o(p),C=h.length,m=0;C>m;)f=h[m++],r&&!d.call(p,f)||(t[f]=p[f]);return t}:s},2503:(e,n,t)=>{var r=t(7007),o=t(5588),i=t(4430),a=t(9335)("IE_PROTO"),l=function(){},c=function(){var e,n=t(2457)("iframe"),r=i.length;for(n.style.display="none",t(639).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;r--;)delete c.prototype[i[r]];return c()};e.exports=Object.create||function(e,n){var t;return null!==e?(l.prototype=r(e),t=new l,l.prototype=null,t[a]=e):t=c(),void 0===n?t:o(t,n)}},9275:(e,n,t)=>{var r=t(7007),o=t(1734),i=t(1689),a=Object.defineProperty;n.f=t(7057)?Object.defineProperty:function(e,n,t){if(r(e),n=i(n,!0),r(t),o)try{return a(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[n]=t.value),e}},5588:(e,n,t)=>{var r=t(9275),o=t(7007),i=t(7184);e.exports=t(7057)?Object.defineProperties:function(e,n){o(e);for(var t,a=i(n),l=a.length,c=0;l>c;)r.f(e,t=a[c++],n[t]);return e}},8693:(e,n,t)=>{var r=t(4682),o=t(681),i=t(2110),a=t(1689),l=t(9181),c=t(1734),s=Object.getOwnPropertyDescriptor;n.f=t(7057)?s:function(e,n){if(e=i(e),n=a(n,!0),c)try{return s(e,n)}catch(e){}if(l(e,n))return o(!r.f.call(e,n),e[n])}},9327:(e,n,t)=>{var r=t(2110),o=t(616).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},616:(e,n,t)=>{var r=t(189),o=t(4430).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},4548:(e,n)=>{n.f=Object.getOwnPropertySymbols},468:(e,n,t)=>{var r=t(9181),o=t(508),i=t(9335)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},189:(e,n,t)=>{var r=t(9181),o=t(2110),i=t(9315)(!1),a=t(9335)("IE_PROTO");e.exports=function(e,n){var t,l=o(e),c=0,s=[];for(t in l)t!=a&&r(l,t)&&s.push(t);for(;n.length>c;)r(l,t=n[c++])&&(~i(s,t)||s.push(t));return s}},7184:(e,n,t)=>{var r=t(189),o=t(4430);e.exports=Object.keys||function(e){return r(e,o)}},4682:(e,n)=>{n.f={}.propertyIsEnumerable},3160:(e,n,t)=>{var r=t(2985),o=t(5645),i=t(4253);e.exports=function(e,n){var t=(o.Object||{})[e]||Object[e],a={};a[e]=n(t),r(r.S+r.F*i((function(){t(1)})),"Object",a)}},1131:(e,n,t)=>{var r=t(7057),o=t(7184),i=t(2110),a=t(4682).f;e.exports=function(e){return function(n){for(var t,l=i(n),c=o(l),s=c.length,A=0,u=[];s>A;)t=c[A++],r&&!a.call(l,t)||u.push(e?[t,l[t]]:l[t]);return u}}},7643:(e,n,t)=>{var r=t(616),o=t(4548),i=t(7007),a=t(3816).Reflect;e.exports=a&&a.ownKeys||function(e){var n=r.f(i(e)),t=o.f;return t?n.concat(t(e)):n}},7743:(e,n,t)=>{var r=t(3816).parseFloat,o=t(9599).trim;e.exports=1/r(t(4644)+"-0")!=-1/0?function(e){var n=o(String(e),3),t=r(n);return 0===t&&"-"==n.charAt(0)?-0:t}:r},5960:(e,n,t)=>{var r=t(3816).parseInt,o=t(9599).trim,i=t(4644),a=/^[-+]?0[xX]/;e.exports=8!==r(i+"08")||22!==r(i+"0x16")?function(e,n){var t=o(String(e),3);return r(t,n>>>0||(a.test(t)?16:10))}:r},188:e=>{e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},94:(e,n,t)=>{var r=t(7007),o=t(5286),i=t(3499);e.exports=function(e,n){if(r(e),o(n)&&n.constructor===e)return n;var t=i.f(e);return(0,t.resolve)(n),t.promise}},681:e=>{e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},4408:(e,n,t)=>{var r=t(7234);e.exports=function(e,n,t){for(var o in n)r(e,o,n[o],t);return e}},7234:(e,n,t)=>{var r=t(3816),o=t(7728),i=t(9181),a=t(3953)("src"),l=t(18),c="toString",s=(""+l).split(c);t(5645).inspectSource=function(e){return l.call(e)},(e.exports=function(e,n,t,l){var c="function"==typeof t;c&&(i(t,"name")||o(t,"name",n)),e[n]!==t&&(c&&(i(t,a)||o(t,a,e[n]?""+e[n]:s.join(String(n)))),e===r?e[n]=t:l?e[n]?e[n]=t:o(e,n,t):(delete e[n],o(e,n,t)))})(Function.prototype,c,(function(){return"function"==typeof this&&this[a]||l.call(this)}))},7787:(e,n,t)=>{"use strict";var r=t(1488),o=RegExp.prototype.exec;e.exports=function(e,n){var t=e.exec;if("function"==typeof t){var i=t.call(e,n);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,n)}},1165:(e,n,t)=>{"use strict";var r,o,i=t(3218),a=RegExp.prototype.exec,l=String.prototype.replace,c=a,s=(r=/a/,o=/b*/g,a.call(r,"a"),a.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),A=void 0!==/()??/.exec("")[1];(s||A)&&(c=function(e){var n,t,r,o,c=this;return A&&(t=new RegExp("^"+c.source+"$(?!\\s)",i.call(c))),s&&(n=c.lastIndex),r=a.call(c,e),s&&r&&(c.lastIndex=c.global?r.index+r[0].length:n),A&&r&&r.length>1&&l.call(r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=c},7195:e=>{e.exports=Object.is||function(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n}},7375:(e,n,t)=>{var r=t(5286),o=t(7007),i=function(e,n){if(o(e),!r(n)&&null!==n)throw TypeError(n+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,n,r){try{(r=t(741)(Function.call,t(8693).f(Object.prototype,"__proto__").set,2))(e,[]),n=!(e instanceof Array)}catch(e){n=!0}return function(e,t){return i(e,t),n?e.__proto__=t:r(e,t),e}}({},!1):void 0),check:i}},2974:(e,n,t)=>{"use strict";var r=t(3816),o=t(9275),i=t(7057),a=t(6314)("species");e.exports=function(e){var n=r[e];i&&n&&!n[a]&&o.f(n,a,{configurable:!0,get:function(){return this}})}},2943:(e,n,t)=>{var r=t(9275).f,o=t(9181),i=t(6314)("toStringTag");e.exports=function(e,n,t){e&&!o(e=t?e:e.prototype,i)&&r(e,i,{configurable:!0,value:n})}},9335:(e,n,t)=>{var r=t(3825)("keys"),o=t(3953);e.exports=function(e){return r[e]||(r[e]=o(e))}},3825:(e,n,t)=>{var r=t(5645),o=t(3816),i="__core-js_shared__",a=o[i]||(o[i]={});(e.exports=function(e,n){return a[e]||(a[e]=void 0!==n?n:{})})("versions",[]).push({version:r.version,mode:t(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},8364:(e,n,t)=>{var r=t(7007),o=t(4963),i=t(6314)("species");e.exports=function(e,n){var t,a=r(e).constructor;return void 0===a||null==(t=r(a)[i])?n:o(t)}},7717:(e,n,t)=>{"use strict";var r=t(4253);e.exports=function(e,n){return!!e&&r((function(){n?e.call(null,(function(){}),1):e.call(null)}))}},4496:(e,n,t)=>{var r=t(1467),o=t(1355);e.exports=function(e){return function(n,t){var i,a,l=String(o(n)),c=r(t),s=l.length;return c<0||c>=s?e?"":void 0:(i=l.charCodeAt(c))<55296||i>56319||c+1===s||(a=l.charCodeAt(c+1))<56320||a>57343?e?l.charAt(c):i:e?l.slice(c,c+2):a-56320+(i-55296<<10)+65536}}},2094:(e,n,t)=>{var r=t(5364),o=t(1355);e.exports=function(e,n,t){if(r(n))throw TypeError("String#"+t+" doesn't accept regex!");return String(o(e))}},9395:(e,n,t)=>{var r=t(2985),o=t(4253),i=t(1355),a=/"/g,l=function(e,n,t,r){var o=String(i(e)),l="<"+n;return""!==t&&(l+=" "+t+'="'+String(r).replace(a,"&quot;")+'"'),l+">"+o+"</"+n+">"};e.exports=function(e,n){var t={};t[e]=n(l),r(r.P+r.F*o((function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3})),"String",t)}},5442:(e,n,t)=>{var r=t(875),o=t(8595),i=t(1355);e.exports=function(e,n,t,a){var l=String(i(e)),c=l.length,s=void 0===t?" ":String(t),A=r(n);if(A<=c||""==s)return l;var u=A-c,d=o.call(s,Math.ceil(u/s.length));return d.length>u&&(d=d.slice(0,u)),a?d+l:l+d}},8595:(e,n,t)=>{"use strict";var r=t(1467),o=t(1355);e.exports=function(e){var n=String(o(this)),t="",i=r(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(n+=n))1&i&&(t+=n);return t}},9599:(e,n,t)=>{var r=t(2985),o=t(1355),i=t(4253),a=t(4644),l="["+a+"]",c=RegExp("^"+l+l+"*"),s=RegExp(l+l+"*$"),A=function(e,n,t){var o={},l=i((function(){return!!a[e]()||"​"!="​"[e]()})),c=o[e]=l?n(u):a[e];t&&(o[t]=c),r(r.P+r.F*l,"String",o)},u=A.trim=function(e,n){return e=String(o(e)),1&n&&(e=e.replace(c,"")),2&n&&(e=e.replace(s,"")),e};e.exports=A},4644:e=>{e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},4193:(e,n,t)=>{var r,o,i,a=t(741),l=t(7242),c=t(639),s=t(2457),A=t(3816),u=A.process,d=A.setImmediate,f=A.clearImmediate,p=A.MessageChannel,h=A.Dispatch,C=0,m={},w=function(){var e=+this;if(m.hasOwnProperty(e)){var n=m[e];delete m[e],n()}},g=function(e){w.call(e.data)};d&&f||(d=function(e){for(var n=[],t=1;arguments.length>t;)n.push(arguments[t++]);return m[++C]=function(){l("function"==typeof e?e:Function(e),n)},r(C),C},f=function(e){delete m[e]},"process"==t(2032)(u)?r=function(e){u.nextTick(a(w,e,1))}:h&&h.now?r=function(e){h.now(a(w,e,1))}:p?(i=(o=new p).port2,o.port1.onmessage=g,r=a(i.postMessage,i,1)):A.addEventListener&&"function"==typeof postMessage&&!A.importScripts?(r=function(e){A.postMessage(e+"","*")},A.addEventListener("message",g,!1)):r="onreadystatechange"in s("script")?function(e){c.appendChild(s("script")).onreadystatechange=function(){c.removeChild(this),w.call(e)}}:function(e){setTimeout(a(w,e,1),0)}),e.exports={set:d,clear:f}},2337:(e,n,t)=>{var r=t(1467),o=Math.max,i=Math.min;e.exports=function(e,n){return(e=r(e))<0?o(e+n,0):i(e,n)}},4843:(e,n,t)=>{var r=t(1467),o=t(875);e.exports=function(e){if(void 0===e)return 0;var n=r(e),t=o(n);if(n!==t)throw RangeError("Wrong length!");return t}},1467:e=>{var n=Math.ceil,t=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?t:n)(e)}},2110:(e,n,t)=>{var r=t(9797),o=t(1355);e.exports=function(e){return r(o(e))}},875:(e,n,t)=>{var r=t(1467),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},508:(e,n,t)=>{var r=t(1355);e.exports=function(e){return Object(r(e))}},1689:(e,n,t)=>{var r=t(5286);e.exports=function(e,n){if(!r(e))return e;var t,o;if(n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;if("function"==typeof(t=e.valueOf)&&!r(o=t.call(e)))return o;if(!n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},8440:(e,n,t)=>{"use strict";if(t(7057)){var r=t(4461),o=t(3816),i=t(4253),a=t(2985),l=t(9383),c=t(1125),s=t(741),A=t(3328),u=t(681),d=t(7728),f=t(4408),p=t(1467),h=t(875),C=t(4843),m=t(2337),w=t(1689),g=t(9181),y=t(1488),b=t(5286),v=t(508),x=t(6555),I=t(2503),B=t(468),k=t(616).f,S=t(9002),_=t(3953),D=t(6314),E=t(50),J=t(9315),O=t(8364),$=t(6997),P=t(2803),R=t(7462),z=t(2974),N=t(6852),M=t(5216),T=t(9275),j=t(8693),F=T.f,L=j.f,Y=o.RangeError,U=o.TypeError,q=o.Uint8Array,G="ArrayBuffer",Q="SharedArrayBuffer",W="BYTES_PER_ELEMENT",V=Array.prototype,H=c.ArrayBuffer,K=c.DataView,Z=E(0),X=E(2),ee=E(3),ne=E(4),te=E(5),re=E(6),oe=J(!0),ie=J(!1),ae=$.values,le=$.keys,ce=$.entries,se=V.lastIndexOf,Ae=V.reduce,ue=V.reduceRight,de=V.join,fe=V.sort,pe=V.slice,he=V.toString,Ce=V.toLocaleString,me=D("iterator"),we=D("toStringTag"),ge=_("typed_constructor"),ye=_("def_constructor"),be=l.CONSTR,ve=l.TYPED,xe=l.VIEW,Ie="Wrong length!",Be=E(1,(function(e,n){return Ee(O(e,e[ye]),n)})),ke=i((function(){return 1===new q(new Uint16Array([1]).buffer)[0]})),Se=!!q&&!!q.prototype.set&&i((function(){new q(1).set({})})),_e=function(e,n){var t=p(e);if(t<0||t%n)throw Y("Wrong offset!");return t},De=function(e){if(b(e)&&ve in e)return e;throw U(e+" is not a typed array!")},Ee=function(e,n){if(!b(e)||!(ge in e))throw U("It is not a typed array constructor!");return new e(n)},Je=function(e,n){return Oe(O(e,e[ye]),n)},Oe=function(e,n){for(var t=0,r=n.length,o=Ee(e,r);r>t;)o[t]=n[t++];return o},$e=function(e,n,t){F(e,n,{get:function(){return this._d[t]}})},Pe=function(e){var n,t,r,o,i,a,l=v(e),c=arguments.length,A=c>1?arguments[1]:void 0,u=void 0!==A,d=S(l);if(null!=d&&!x(d)){for(a=d.call(l),r=[],n=0;!(i=a.next()).done;n++)r.push(i.value);l=r}for(u&&c>2&&(A=s(A,arguments[2],2)),n=0,t=h(l.length),o=Ee(this,t);t>n;n++)o[n]=u?A(l[n],n):l[n];return o},Re=function(){for(var e=0,n=arguments.length,t=Ee(this,n);n>e;)t[e]=arguments[e++];return t},ze=!!q&&i((function(){Ce.call(new q(1))})),Ne=function(){return Ce.apply(ze?pe.call(De(this)):De(this),arguments)},Me={copyWithin:function(e,n){return M.call(De(this),e,n,arguments.length>2?arguments[2]:void 0)},every:function(e){return ne(De(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return N.apply(De(this),arguments)},filter:function(e){return Je(this,X(De(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return te(De(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return re(De(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Z(De(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ie(De(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return oe(De(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return de.apply(De(this),arguments)},lastIndexOf:function(e){return se.apply(De(this),arguments)},map:function(e){return Be(De(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return Ae.apply(De(this),arguments)},reduceRight:function(e){return ue.apply(De(this),arguments)},reverse:function(){for(var e,n=this,t=De(n).length,r=Math.floor(t/2),o=0;o<r;)e=n[o],n[o++]=n[--t],n[t]=e;return n},some:function(e){return ee(De(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return fe.call(De(this),e)},subarray:function(e,n){var t=De(this),r=t.length,o=m(e,r);return new(O(t,t[ye]))(t.buffer,t.byteOffset+o*t.BYTES_PER_ELEMENT,h((void 0===n?r:m(n,r))-o))}},Te=function(e,n){return Je(this,pe.call(De(this),e,n))},je=function(e){De(this);var n=_e(arguments[1],1),t=this.length,r=v(e),o=h(r.length),i=0;if(o+n>t)throw Y(Ie);for(;i<o;)this[n+i]=r[i++]},Fe={entries:function(){return ce.call(De(this))},keys:function(){return le.call(De(this))},values:function(){return ae.call(De(this))}},Le=function(e,n){return b(e)&&e[ve]&&"symbol"!=typeof n&&n in e&&String(+n)==String(n)},Ye=function(e,n){return Le(e,n=w(n,!0))?u(2,e[n]):L(e,n)},Ue=function(e,n,t){return!(Le(e,n=w(n,!0))&&b(t)&&g(t,"value"))||g(t,"get")||g(t,"set")||t.configurable||g(t,"writable")&&!t.writable||g(t,"enumerable")&&!t.enumerable?F(e,n,t):(e[n]=t.value,e)};be||(j.f=Ye,T.f=Ue),a(a.S+a.F*!be,"Object",{getOwnPropertyDescriptor:Ye,defineProperty:Ue}),i((function(){he.call({})}))&&(he=Ce=function(){return de.call(this)});var qe=f({},Me);f(qe,Fe),d(qe,me,Fe.values),f(qe,{slice:Te,set:je,constructor:function(){},toString:he,toLocaleString:Ne}),$e(qe,"buffer","b"),$e(qe,"byteOffset","o"),$e(qe,"byteLength","l"),$e(qe,"length","e"),F(qe,we,{get:function(){return this[ve]}}),e.exports=function(e,n,t,c){var s=e+((c=!!c)?"Clamped":"")+"Array",u="get"+e,f="set"+e,p=o[s],m=p||{},w=p&&B(p),g=!p||!l.ABV,v={},x=p&&p.prototype,S=function(e,t){F(e,t,{get:function(){return function(e,t){var r=e._d;return r.v[u](t*n+r.o,ke)}(this,t)},set:function(e){return function(e,t,r){var o=e._d;c&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),o.v[f](t*n+o.o,r,ke)}(this,t,e)},enumerable:!0})};g?(p=t((function(e,t,r,o){A(e,p,s,"_d");var i,a,l,c,u=0,f=0;if(b(t)){if(!(t instanceof H||(c=y(t))==G||c==Q))return ve in t?Oe(p,t):Pe.call(p,t);i=t,f=_e(r,n);var m=t.byteLength;if(void 0===o){if(m%n)throw Y(Ie);if((a=m-f)<0)throw Y(Ie)}else if((a=h(o)*n)+f>m)throw Y(Ie);l=a/n}else l=C(t),i=new H(a=l*n);for(d(e,"_d",{b:i,o:f,l:a,e:l,v:new K(i)});u<l;)S(e,u++)})),x=p.prototype=I(qe),d(x,"constructor",p)):i((function(){p(1)}))&&i((function(){new p(-1)}))&&R((function(e){new p,new p(null),new p(1.5),new p(e)}),!0)||(p=t((function(e,t,r,o){var i;return A(e,p,s),b(t)?t instanceof H||(i=y(t))==G||i==Q?void 0!==o?new m(t,_e(r,n),o):void 0!==r?new m(t,_e(r,n)):new m(t):ve in t?Oe(p,t):Pe.call(p,t):new m(C(t))})),Z(w!==Function.prototype?k(m).concat(k(w)):k(m),(function(e){e in p||d(p,e,m[e])})),p.prototype=x,r||(x.constructor=p));var _=x[me],D=!!_&&("values"==_.name||null==_.name),E=Fe.values;d(p,ge,!0),d(x,ve,s),d(x,xe,!0),d(x,ye,p),(c?new p(1)[we]==s:we in x)||F(x,we,{get:function(){return s}}),v[s]=p,a(a.G+a.W+a.F*(p!=m),v),a(a.S,s,{BYTES_PER_ELEMENT:n}),a(a.S+a.F*i((function(){m.of.call(p,1)})),s,{from:Pe,of:Re}),W in x||d(x,W,n),a(a.P,s,Me),z(s),a(a.P+a.F*Se,s,{set:je}),a(a.P+a.F*!D,s,Fe),r||x.toString==he||(x.toString=he),a(a.P+a.F*i((function(){new p(1).slice()})),s,{slice:Te}),a(a.P+a.F*(i((function(){return[1,2].toLocaleString()!=new p([1,2]).toLocaleString()}))||!i((function(){x.toLocaleString.call([1,2])}))),s,{toLocaleString:Ne}),P[s]=D?_:E,r||D||d(x,me,E)}}else e.exports=function(){}},1125:(e,n,t)=>{"use strict";var r=t(3816),o=t(7057),i=t(4461),a=t(9383),l=t(7728),c=t(4408),s=t(4253),A=t(3328),u=t(1467),d=t(875),f=t(4843),p=t(616).f,h=t(9275).f,C=t(6852),m=t(2943),w="ArrayBuffer",g="DataView",y="Wrong index!",b=r.ArrayBuffer,v=r.DataView,x=r.Math,I=r.RangeError,B=r.Infinity,k=b,S=x.abs,_=x.pow,D=x.floor,E=x.log,J=x.LN2,O="buffer",$="byteLength",P="byteOffset",R=o?"_b":O,z=o?"_l":$,N=o?"_o":P;function M(e,n,t){var r,o,i,a=new Array(t),l=8*t-n-1,c=(1<<l)-1,s=c>>1,A=23===n?_(2,-24)-_(2,-77):0,u=0,d=e<0||0===e&&1/e<0?1:0;for((e=S(e))!=e||e===B?(o=e!=e?1:0,r=c):(r=D(E(e)/J),e*(i=_(2,-r))<1&&(r--,i*=2),(e+=r+s>=1?A/i:A*_(2,1-s))*i>=2&&(r++,i/=2),r+s>=c?(o=0,r=c):r+s>=1?(o=(e*i-1)*_(2,n),r+=s):(o=e*_(2,s-1)*_(2,n),r=0));n>=8;a[u++]=255&o,o/=256,n-=8);for(r=r<<n|o,l+=n;l>0;a[u++]=255&r,r/=256,l-=8);return a[--u]|=128*d,a}function T(e,n,t){var r,o=8*t-n-1,i=(1<<o)-1,a=i>>1,l=o-7,c=t-1,s=e[c--],A=127&s;for(s>>=7;l>0;A=256*A+e[c],c--,l-=8);for(r=A&(1<<-l)-1,A>>=-l,l+=n;l>0;r=256*r+e[c],c--,l-=8);if(0===A)A=1-a;else{if(A===i)return r?NaN:s?-B:B;r+=_(2,n),A-=a}return(s?-1:1)*r*_(2,A-n)}function j(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function F(e){return[255&e]}function L(e){return[255&e,e>>8&255]}function Y(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function U(e){return M(e,52,8)}function q(e){return M(e,23,4)}function G(e,n,t){h(e.prototype,n,{get:function(){return this[t]}})}function Q(e,n,t,r){var o=f(+t);if(o+n>e[z])throw I(y);var i=e[R]._b,a=o+e[N],l=i.slice(a,a+n);return r?l:l.reverse()}function W(e,n,t,r,o,i){var a=f(+t);if(a+n>e[z])throw I(y);for(var l=e[R]._b,c=a+e[N],s=r(+o),A=0;A<n;A++)l[c+A]=s[i?A:n-A-1]}if(a.ABV){if(!s((function(){b(1)}))||!s((function(){new b(-1)}))||s((function(){return new b,new b(1.5),new b(NaN),b.name!=w}))){for(var V,H=(b=function(e){return A(this,b),new k(f(e))}).prototype=k.prototype,K=p(k),Z=0;K.length>Z;)(V=K[Z++])in b||l(b,V,k[V]);i||(H.constructor=b)}var X=new v(new b(2)),ee=v.prototype.setInt8;X.setInt8(0,2147483648),X.setInt8(1,2147483649),!X.getInt8(0)&&X.getInt8(1)||c(v.prototype,{setInt8:function(e,n){ee.call(this,e,n<<24>>24)},setUint8:function(e,n){ee.call(this,e,n<<24>>24)}},!0)}else b=function(e){A(this,b,w);var n=f(e);this._b=C.call(new Array(n),0),this[z]=n},v=function(e,n,t){A(this,v,g),A(e,b,g);var r=e[z],o=u(n);if(o<0||o>r)throw I("Wrong offset!");if(o+(t=void 0===t?r-o:d(t))>r)throw I("Wrong length!");this[R]=e,this[N]=o,this[z]=t},o&&(G(b,$,"_l"),G(v,O,"_b"),G(v,$,"_l"),G(v,P,"_o")),c(v.prototype,{getInt8:function(e){return Q(this,1,e)[0]<<24>>24},getUint8:function(e){return Q(this,1,e)[0]},getInt16:function(e){var n=Q(this,2,e,arguments[1]);return(n[1]<<8|n[0])<<16>>16},getUint16:function(e){var n=Q(this,2,e,arguments[1]);return n[1]<<8|n[0]},getInt32:function(e){return j(Q(this,4,e,arguments[1]))},getUint32:function(e){return j(Q(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return T(Q(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return T(Q(this,8,e,arguments[1]),52,8)},setInt8:function(e,n){W(this,1,e,F,n)},setUint8:function(e,n){W(this,1,e,F,n)},setInt16:function(e,n){W(this,2,e,L,n,arguments[2])},setUint16:function(e,n){W(this,2,e,L,n,arguments[2])},setInt32:function(e,n){W(this,4,e,Y,n,arguments[2])},setUint32:function(e,n){W(this,4,e,Y,n,arguments[2])},setFloat32:function(e,n){W(this,4,e,q,n,arguments[2])},setFloat64:function(e,n){W(this,8,e,U,n,arguments[2])}});m(b,w),m(v,g),l(v.prototype,a.VIEW,!0),n.ArrayBuffer=b,n.DataView=v},9383:(e,n,t)=>{for(var r,o=t(3816),i=t(7728),a=t(3953),l=a("typed_array"),c=a("view"),s=!(!o.ArrayBuffer||!o.DataView),A=s,u=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");u<9;)(r=o[d[u++]])?(i(r.prototype,l,!0),i(r.prototype,c,!0)):A=!1;e.exports={ABV:s,CONSTR:A,TYPED:l,VIEW:c}},3953:e=>{var n=0,t=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+t).toString(36))}},575:(e,n,t)=>{var r=t(3816).navigator;e.exports=r&&r.userAgent||""},1616:(e,n,t)=>{var r=t(5286);e.exports=function(e,n){if(!r(e)||e._t!==n)throw TypeError("Incompatible receiver, "+n+" required!");return e}},6074:(e,n,t)=>{var r=t(3816),o=t(5645),i=t(4461),a=t(8787),l=t(9275).f;e.exports=function(e){var n=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in n||l(n,e,{value:a.f(e)})}},8787:(e,n,t)=>{n.f=t(6314)},6314:(e,n,t)=>{var r=t(3825)("wks"),o=t(3953),i=t(3816).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},9002:(e,n,t)=>{var r=t(1488),o=t(6314)("iterator"),i=t(2803);e.exports=t(5645).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},2e3:(e,n,t)=>{var r=t(2985);r(r.P,"Array",{copyWithin:t(5216)}),t(7722)("copyWithin")},5745:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(4);r(r.P+r.F*!t(7717)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},8977:(e,n,t)=>{var r=t(2985);r(r.P,"Array",{fill:t(6852)}),t(7722)("fill")},8837:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(2);r(r.P+r.F*!t(7717)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},4899:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(6),i="findIndex",a=!0;i in[]&&Array(1)[i]((function(){a=!1})),r(r.P+r.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),t(7722)(i)},2310:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(5),i="find",a=!0;i in[]&&Array(1).find((function(){a=!1})),r(r.P+r.F*a,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),t(7722)(i)},4336:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(0),i=t(7717)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},522:(e,n,t)=>{"use strict";var r=t(741),o=t(2985),i=t(508),a=t(8851),l=t(6555),c=t(875),s=t(2811),A=t(9002);o(o.S+o.F*!t(7462)((function(e){Array.from(e)})),"Array",{from:function(e){var n,t,o,u,d=i(e),f="function"==typeof this?this:Array,p=arguments.length,h=p>1?arguments[1]:void 0,C=void 0!==h,m=0,w=A(d);if(C&&(h=r(h,p>2?arguments[2]:void 0,2)),null==w||f==Array&&l(w))for(t=new f(n=c(d.length));n>m;m++)s(t,m,C?h(d[m],m):d[m]);else for(u=w.call(d),t=new f;!(o=u.next()).done;m++)s(t,m,C?a(u,h,[o.value,m],!0):o.value);return t.length=m,t}})},3369:(e,n,t)=>{"use strict";var r=t(2985),o=t(9315)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!t(7717)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},774:(e,n,t)=>{var r=t(2985);r(r.S,"Array",{isArray:t(4302)})},6997:(e,n,t)=>{"use strict";var r=t(7722),o=t(5436),i=t(2803),a=t(2110);e.exports=t(2923)(Array,"Array",(function(e,n){this._t=a(e),this._i=0,this._k=n}),(function(){var e=this._t,n=this._k,t=this._i++;return!e||t>=e.length?(this._t=void 0,o(1)):o(0,"keys"==n?t:"values"==n?e[t]:[t,e[t]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},7842:(e,n,t)=>{"use strict";var r=t(2985),o=t(2110),i=[].join;r(r.P+r.F*(t(9797)!=Object||!t(7717)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},9564:(e,n,t)=>{"use strict";var r=t(2985),o=t(2110),i=t(1467),a=t(875),l=[].lastIndexOf,c=!!l&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(c||!t(7717)(l)),"Array",{lastIndexOf:function(e){if(c)return l.apply(this,arguments)||0;var n=o(this),t=a(n.length),r=t-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=t+r);r>=0;r--)if(r in n&&n[r]===e)return r||0;return-1}})},1802:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(1);r(r.P+r.F*!t(7717)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},8295:(e,n,t)=>{"use strict";var r=t(2985),o=t(2811);r(r.S+r.F*t(4253)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,n=arguments.length,t=new("function"==typeof this?this:Array)(n);n>e;)o(t,e,arguments[e++]);return t.length=n,t}})},3750:(e,n,t)=>{"use strict";var r=t(2985),o=t(7628);r(r.P+r.F*!t(7717)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},3057:(e,n,t)=>{"use strict";var r=t(2985),o=t(7628);r(r.P+r.F*!t(7717)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},110:(e,n,t)=>{"use strict";var r=t(2985),o=t(639),i=t(2032),a=t(2337),l=t(875),c=[].slice;r(r.P+r.F*t(4253)((function(){o&&c.call(o)})),"Array",{slice:function(e,n){var t=l(this.length),r=i(this);if(n=void 0===n?t:n,"Array"==r)return c.call(this,e,n);for(var o=a(e,t),s=a(n,t),A=l(s-o),u=new Array(A),d=0;d<A;d++)u[d]="String"==r?this.charAt(o+d):this[o+d];return u}})},6773:(e,n,t)=>{"use strict";var r=t(2985),o=t(50)(3);r(r.P+r.F*!t(7717)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},75:(e,n,t)=>{"use strict";var r=t(2985),o=t(4963),i=t(508),a=t(4253),l=[].sort,c=[1,2,3];r(r.P+r.F*(a((function(){c.sort(void 0)}))||!a((function(){c.sort(null)}))||!t(7717)(l)),"Array",{sort:function(e){return void 0===e?l.call(i(this)):l.call(i(this),o(e))}})},1842:(e,n,t)=>{t(2974)("Array")},1822:(e,n,t)=>{var r=t(2985);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},1031:(e,n,t)=>{var r=t(2985),o=t(3537);r(r.P+r.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},9977:(e,n,t)=>{"use strict";var r=t(2985),o=t(508),i=t(1689);r(r.P+r.F*t(4253)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var n=o(this),t=i(n);return"number"!=typeof t||isFinite(t)?n.toISOString():null}})},1560:(e,n,t)=>{var r=t(6314)("toPrimitive"),o=Date.prototype;r in o||t(7728)(o,r,t(870))},6331:(e,n,t)=>{var r=Date.prototype,o="Invalid Date",i=r.toString,a=r.getTime;new Date(NaN)+""!=o&&t(7234)(r,"toString",(function(){var e=a.call(this);return e==e?i.call(this):o}))},9730:(e,n,t)=>{var r=t(2985);r(r.P,"Function",{bind:t(4398)})},8377:(e,n,t)=>{"use strict";var r=t(5286),o=t(468),i=t(6314)("hasInstance"),a=Function.prototype;i in a||t(9275).f(a,i,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},6059:(e,n,t)=>{var r=t(9275).f,o=Function.prototype,i=/^\s*function ([^ (]*)/,a="name";a in o||t(7057)&&r(o,a,{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},8416:(e,n,t)=>{"use strict";var r=t(9824),o=t(1616),i="Map";e.exports=t(5795)(i,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var n=r.getEntry(o(this,i),e);return n&&n.v},set:function(e,n){return r.def(o(this,i),0===e?0:e,n)}},r,!0)},6503:(e,n,t)=>{var r=t(2985),o=t(6206),i=Math.sqrt,a=Math.acosh;r(r.S+r.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},6786:(e,n,t)=>{var r=t(2985),o=Math.asinh;r(r.S+r.F*!(o&&1/o(0)>0),"Math",{asinh:function e(n){return isFinite(n=+n)&&0!=n?n<0?-e(-n):Math.log(n+Math.sqrt(n*n+1)):n}})},932:(e,n,t)=>{var r=t(2985),o=Math.atanh;r(r.S+r.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},7526:(e,n,t)=>{var r=t(2985),o=t(1801);r(r.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},1591:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},9073:(e,n,t)=>{var r=t(2985),o=Math.exp;r(r.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},347:(e,n,t)=>{var r=t(2985),o=t(3086);r(r.S+r.F*(o!=Math.expm1),"Math",{expm1:o})},579:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{fround:t(4934)})},4669:(e,n,t)=>{var r=t(2985),o=Math.abs;r(r.S,"Math",{hypot:function(e,n){for(var t,r,i=0,a=0,l=arguments.length,c=0;a<l;)c<(t=o(arguments[a++]))?(i=i*(r=c/t)*r+1,c=t):i+=t>0?(r=t/c)*r:t;return c===1/0?1/0:c*Math.sqrt(i)}})},7710:(e,n,t)=>{var r=t(2985),o=Math.imul;r(r.S+r.F*t(4253)((function(){return-5!=o(4294967295,5)||2!=o.length})),"Math",{imul:function(e,n){var t=65535,r=+e,o=+n,i=t&r,a=t&o;return 0|i*a+((t&r>>>16)*a+i*(t&o>>>16)<<16>>>0)}})},5789:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},3514:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{log1p:t(6206)})},9978:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},8472:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{sign:t(1801)})},6946:(e,n,t)=>{var r=t(2985),o=t(3086),i=Math.exp;r(r.S+r.F*t(4253)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},5068:(e,n,t)=>{var r=t(2985),o=t(3086),i=Math.exp;r(r.S,"Math",{tanh:function(e){var n=o(e=+e),t=o(-e);return n==1/0?1:t==1/0?-1:(n-t)/(i(e)+i(-e))}})},413:(e,n,t)=>{var r=t(2985);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},1246:(e,n,t)=>{"use strict";var r=t(3816),o=t(9181),i=t(2032),a=t(266),l=t(1689),c=t(4253),s=t(616).f,A=t(8693).f,u=t(9275).f,d=t(9599).trim,f="Number",p=r.Number,h=p,C=p.prototype,m=i(t(2503)(C))==f,w="trim"in String.prototype,g=function(e){var n=l(e,!1);if("string"==typeof n&&n.length>2){var t,r,o,i=(n=w?n.trim():d(n,3)).charCodeAt(0);if(43===i||45===i){if(88===(t=n.charCodeAt(2))||120===t)return NaN}else if(48===i){switch(n.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+n}for(var a,c=n.slice(2),s=0,A=c.length;s<A;s++)if((a=c.charCodeAt(s))<48||a>o)return NaN;return parseInt(c,r)}}return+n};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var n=arguments.length<1?0:e,t=this;return t instanceof p&&(m?c((function(){C.valueOf.call(t)})):i(t)!=f)?a(new h(g(n)),t,p):g(n)};for(var y,b=t(7057)?s(h):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),v=0;b.length>v;v++)o(h,y=b[v])&&!o(p,y)&&u(p,y,A(h,y));p.prototype=C,C.constructor=p,t(7234)(r,f,p)}},5972:(e,n,t)=>{var r=t(2985);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},3403:(e,n,t)=>{var r=t(2985),o=t(3816).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},2516:(e,n,t)=>{var r=t(2985);r(r.S,"Number",{isInteger:t(8367)})},9371:(e,n,t)=>{var r=t(2985);r(r.S,"Number",{isNaN:function(e){return e!=e}})},6479:(e,n,t)=>{var r=t(2985),o=t(8367),i=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},1736:(e,n,t)=>{var r=t(2985);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},1889:(e,n,t)=>{var r=t(2985);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},5177:(e,n,t)=>{var r=t(2985),o=t(7743);r(r.S+r.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},6943:(e,n,t)=>{var r=t(2985),o=t(5960);r(r.S+r.F*(Number.parseInt!=o),"Number",{parseInt:o})},726:(e,n,t)=>{"use strict";var r=t(2985),o=t(1467),i=t(3365),a=t(8595),l=1..toFixed,c=Math.floor,s=[0,0,0,0,0,0],A="Number.toFixed: incorrect invocation!",u="0",d=function(e,n){for(var t=-1,r=n;++t<6;)r+=e*s[t],s[t]=r%1e7,r=c(r/1e7)},f=function(e){for(var n=6,t=0;--n>=0;)t+=s[n],s[n]=c(t/e),t=t%e*1e7},p=function(){for(var e=6,n="";--e>=0;)if(""!==n||0===e||0!==s[e]){var t=String(s[e]);n=""===n?t:n+a.call(u,7-t.length)+t}return n},h=function(e,n,t){return 0===n?t:n%2==1?h(e,n-1,t*e):h(e*e,n/2,t)};r(r.P+r.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!t(4253)((function(){l.call({})}))),"Number",{toFixed:function(e){var n,t,r,l,c=i(this,A),s=o(e),C="",m=u;if(s<0||s>20)throw RangeError(A);if(c!=c)return"NaN";if(c<=-1e21||c>=1e21)return String(c);if(c<0&&(C="-",c=-c),c>1e-21)if(t=(n=function(e){for(var n=0,t=e;t>=4096;)n+=12,t/=4096;for(;t>=2;)n+=1,t/=2;return n}(c*h(2,69,1))-69)<0?c*h(2,-n,1):c/h(2,n,1),t*=4503599627370496,(n=52-n)>0){for(d(0,t),r=s;r>=7;)d(1e7,0),r-=7;for(d(h(10,r,1),0),r=n-1;r>=23;)f(1<<23),r-=23;f(1<<r),d(1,1),f(2),m=p()}else d(0,t),d(1<<-n,0),m=p()+a.call(u,s);return s>0?C+((l=m.length)<=s?"0."+a.call(u,s-l)+m:m.slice(0,l-s)+"."+m.slice(l-s)):C+m}})},1901:(e,n,t)=>{"use strict";var r=t(2985),o=t(4253),i=t(3365),a=1..toPrecision;r(r.P+r.F*(o((function(){return"1"!==a.call(1,void 0)}))||!o((function(){a.call({})}))),"Number",{toPrecision:function(e){var n=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(n):a.call(n,e)}})},5115:(e,n,t)=>{var r=t(2985);r(r.S+r.F,"Object",{assign:t(5345)})},8132:(e,n,t)=>{var r=t(2985);r(r.S,"Object",{create:t(2503)})},7470:(e,n,t)=>{var r=t(2985);r(r.S+r.F*!t(7057),"Object",{defineProperties:t(5588)})},8388:(e,n,t)=>{var r=t(2985);r(r.S+r.F*!t(7057),"Object",{defineProperty:t(9275).f})},9375:(e,n,t)=>{var r=t(5286),o=t(4728).onFreeze;t(3160)("freeze",(function(e){return function(n){return e&&r(n)?e(o(n)):n}}))},4882:(e,n,t)=>{var r=t(2110),o=t(8693).f;t(3160)("getOwnPropertyDescriptor",(function(){return function(e,n){return o(r(e),n)}}))},9622:(e,n,t)=>{t(3160)("getOwnPropertyNames",(function(){return t(9327).f}))},1520:(e,n,t)=>{var r=t(508),o=t(468);t(3160)("getPrototypeOf",(function(){return function(e){return o(r(e))}}))},9892:(e,n,t)=>{var r=t(5286);t(3160)("isExtensible",(function(e){return function(n){return!!r(n)&&(!e||e(n))}}))},4157:(e,n,t)=>{var r=t(5286);t(3160)("isFrozen",(function(e){return function(n){return!r(n)||!!e&&e(n)}}))},5095:(e,n,t)=>{var r=t(5286);t(3160)("isSealed",(function(e){return function(n){return!r(n)||!!e&&e(n)}}))},9176:(e,n,t)=>{var r=t(2985);r(r.S,"Object",{is:t(7195)})},7476:(e,n,t)=>{var r=t(508),o=t(7184);t(3160)("keys",(function(){return function(e){return o(r(e))}}))},4672:(e,n,t)=>{var r=t(5286),o=t(4728).onFreeze;t(3160)("preventExtensions",(function(e){return function(n){return e&&r(n)?e(o(n)):n}}))},3533:(e,n,t)=>{var r=t(5286),o=t(4728).onFreeze;t(3160)("seal",(function(e){return function(n){return e&&r(n)?e(o(n)):n}}))},8838:(e,n,t)=>{var r=t(2985);r(r.S,"Object",{setPrototypeOf:t(7375).set})},6253:(e,n,t)=>{"use strict";var r=t(1488),o={};o[t(6314)("toStringTag")]="z",o+""!="[object z]"&&t(7234)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},4299:(e,n,t)=>{var r=t(2985),o=t(7743);r(r.G+r.F*(parseFloat!=o),{parseFloat:o})},1084:(e,n,t)=>{var r=t(2985),o=t(5960);r(r.G+r.F*(parseInt!=o),{parseInt:o})},851:(e,n,t)=>{"use strict";var r,o,i,a,l=t(4461),c=t(3816),s=t(741),A=t(1488),u=t(2985),d=t(5286),f=t(4963),p=t(3328),h=t(3531),C=t(8364),m=t(4193).set,w=t(4351)(),g=t(3499),y=t(188),b=t(575),v=t(94),x="Promise",I=c.TypeError,B=c.process,k=B&&B.versions,S=k&&k.v8||"",_=c.Promise,D="process"==A(B),E=function(){},J=o=g.f,O=!!function(){try{var e=_.resolve(1),n=(e.constructor={})[t(6314)("species")]=function(e){e(E,E)};return(D||"function"==typeof PromiseRejectionEvent)&&e.then(E)instanceof n&&0!==S.indexOf("6.6")&&-1===b.indexOf("Chrome/66")}catch(e){}}(),$=function(e){var n;return!(!d(e)||"function"!=typeof(n=e.then))&&n},P=function(e,n){if(!e._n){e._n=!0;var t=e._c;w((function(){for(var r=e._v,o=1==e._s,i=0,a=function(n){var t,i,a,l=o?n.ok:n.fail,c=n.resolve,s=n.reject,A=n.domain;try{l?(o||(2==e._h&&N(e),e._h=1),!0===l?t=r:(A&&A.enter(),t=l(r),A&&(A.exit(),a=!0)),t===n.promise?s(I("Promise-chain cycle")):(i=$(t))?i.call(t,c,s):c(t)):s(r)}catch(e){A&&!a&&A.exit(),s(e)}};t.length>i;)a(t[i++]);e._c=[],e._n=!1,n&&!e._h&&R(e)}))}},R=function(e){m.call(c,(function(){var n,t,r,o=e._v,i=z(e);if(i&&(n=y((function(){D?B.emit("unhandledRejection",o,e):(t=c.onunhandledrejection)?t({promise:e,reason:o}):(r=c.console)&&r.error&&r.error("Unhandled promise rejection",o)})),e._h=D||z(e)?2:1),e._a=void 0,i&&n.e)throw n.v}))},z=function(e){return 1!==e._h&&0===(e._a||e._c).length},N=function(e){m.call(c,(function(){var n;D?B.emit("rejectionHandled",e):(n=c.onrejectionhandled)&&n({promise:e,reason:e._v})}))},M=function(e){var n=this;n._d||(n._d=!0,(n=n._w||n)._v=e,n._s=2,n._a||(n._a=n._c.slice()),P(n,!0))},T=function(e){var n,t=this;if(!t._d){t._d=!0,t=t._w||t;try{if(t===e)throw I("Promise can't be resolved itself");(n=$(e))?w((function(){var r={_w:t,_d:!1};try{n.call(e,s(T,r,1),s(M,r,1))}catch(e){M.call(r,e)}})):(t._v=e,t._s=1,P(t,!1))}catch(e){M.call({_w:t,_d:!1},e)}}};O||(_=function(e){p(this,_,x,"_h"),f(e),r.call(this);try{e(s(T,this,1),s(M,this,1))}catch(e){M.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=t(4408)(_.prototype,{then:function(e,n){var t=J(C(this,_));return t.ok="function"!=typeof e||e,t.fail="function"==typeof n&&n,t.domain=D?B.domain:void 0,this._c.push(t),this._a&&this._a.push(t),this._s&&P(this,!1),t.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=s(T,e,1),this.reject=s(M,e,1)},g.f=J=function(e){return e===_||e===a?new i(e):o(e)}),u(u.G+u.W+u.F*!O,{Promise:_}),t(2943)(_,x),t(2974)(x),a=t(5645).Promise,u(u.S+u.F*!O,x,{reject:function(e){var n=J(this);return(0,n.reject)(e),n.promise}}),u(u.S+u.F*(l||!O),x,{resolve:function(e){return v(l&&this===a?_:this,e)}}),u(u.S+u.F*!(O&&t(7462)((function(e){_.all(e).catch(E)}))),x,{all:function(e){var n=this,t=J(n),r=t.resolve,o=t.reject,i=y((function(){var t=[],i=0,a=1;h(e,!1,(function(e){var l=i++,c=!1;t.push(void 0),a++,n.resolve(e).then((function(e){c||(c=!0,t[l]=e,--a||r(t))}),o)})),--a||r(t)}));return i.e&&o(i.v),t.promise},race:function(e){var n=this,t=J(n),r=t.reject,o=y((function(){h(e,!1,(function(e){n.resolve(e).then(t.resolve,r)}))}));return o.e&&r(o.v),t.promise}})},1572:(e,n,t)=>{var r=t(2985),o=t(4963),i=t(7007),a=(t(3816).Reflect||{}).apply,l=Function.apply;r(r.S+r.F*!t(4253)((function(){a((function(){}))})),"Reflect",{apply:function(e,n,t){var r=o(e),c=i(t);return a?a(r,n,c):l.call(r,n,c)}})},2139:(e,n,t)=>{var r=t(2985),o=t(2503),i=t(4963),a=t(7007),l=t(5286),c=t(4253),s=t(4398),A=(t(3816).Reflect||{}).construct,u=c((function(){function e(){}return!(A((function(){}),[],e)instanceof e)})),d=!c((function(){A((function(){}))}));r(r.S+r.F*(u||d),"Reflect",{construct:function(e,n){i(e),a(n);var t=arguments.length<3?e:i(arguments[2]);if(d&&!u)return A(e,n,t);if(e==t){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var r=[null];return r.push.apply(r,n),new(s.apply(e,r))}var c=t.prototype,f=o(l(c)?c:Object.prototype),p=Function.apply.call(e,f,n);return l(p)?p:f}})},685:(e,n,t)=>{var r=t(9275),o=t(2985),i=t(7007),a=t(1689);o(o.S+o.F*t(4253)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,n,t){i(e),n=a(n,!0),i(t);try{return r.f(e,n,t),!0}catch(e){return!1}}})},5535:(e,n,t)=>{var r=t(2985),o=t(8693).f,i=t(7007);r(r.S,"Reflect",{deleteProperty:function(e,n){var t=o(i(e),n);return!(t&&!t.configurable)&&delete e[n]}})},7347:(e,n,t)=>{"use strict";var r=t(2985),o=t(7007),i=function(e){this._t=o(e),this._i=0;var n,t=this._k=[];for(n in e)t.push(n)};t(9988)(i,"Object",(function(){var e,n=this,t=n._k;do{if(n._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[n._i++])in n._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new i(e)}})},6633:(e,n,t)=>{var r=t(8693),o=t(2985),i=t(7007);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,n){return r.f(i(e),n)}})},8989:(e,n,t)=>{var r=t(2985),o=t(468),i=t(7007);r(r.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},3049:(e,n,t)=>{var r=t(8693),o=t(468),i=t(9181),a=t(2985),l=t(5286),c=t(7007);a(a.S,"Reflect",{get:function e(n,t){var a,s,A=arguments.length<3?n:arguments[2];return c(n)===A?n[t]:(a=r.f(n,t))?i(a,"value")?a.value:void 0!==a.get?a.get.call(A):void 0:l(s=o(n))?e(s,t,A):void 0}})},8270:(e,n,t)=>{var r=t(2985);r(r.S,"Reflect",{has:function(e,n){return n in e}})},4510:(e,n,t)=>{var r=t(2985),o=t(7007),i=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},3984:(e,n,t)=>{var r=t(2985);r(r.S,"Reflect",{ownKeys:t(7643)})},5769:(e,n,t)=>{var r=t(2985),o=t(7007),i=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},6014:(e,n,t)=>{var r=t(2985),o=t(7375);o&&r(r.S,"Reflect",{setPrototypeOf:function(e,n){o.check(e,n);try{return o.set(e,n),!0}catch(e){return!1}}})},55:(e,n,t)=>{var r=t(9275),o=t(8693),i=t(468),a=t(9181),l=t(2985),c=t(681),s=t(7007),A=t(5286);l(l.S,"Reflect",{set:function e(n,t,l){var u,d,f=arguments.length<4?n:arguments[3],p=o.f(s(n),t);if(!p){if(A(d=i(n)))return e(d,t,l,f);p=c(0)}if(a(p,"value")){if(!1===p.writable||!A(f))return!1;if(u=o.f(f,t)){if(u.get||u.set||!1===u.writable)return!1;u.value=l,r.f(f,t,u)}else r.f(f,t,c(0,l));return!0}return void 0!==p.set&&(p.set.call(f,l),!0)}})},3946:(e,n,t)=>{var r=t(3816),o=t(266),i=t(9275).f,a=t(616).f,l=t(5364),c=t(3218),s=r.RegExp,A=s,u=s.prototype,d=/a/g,f=/a/g,p=new s(d)!==d;if(t(7057)&&(!p||t(4253)((function(){return f[t(6314)("match")]=!1,s(d)!=d||s(f)==f||"/a/i"!=s(d,"i")})))){s=function(e,n){var t=this instanceof s,r=l(e),i=void 0===n;return!t&&r&&e.constructor===s&&i?e:o(p?new A(r&&!i?e.source:e,n):A((r=e instanceof s)?e.source:e,r&&i?c.call(e):n),t?this:u,s)};for(var h=function(e){e in s||i(s,e,{configurable:!0,get:function(){return A[e]},set:function(n){A[e]=n}})},C=a(A),m=0;C.length>m;)h(C[m++]);u.constructor=s,s.prototype=u,t(7234)(r,"RegExp",s)}t(2974)("RegExp")},8269:(e,n,t)=>{"use strict";var r=t(1165);t(2985)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},6774:(e,n,t)=>{t(7057)&&"g"!=/./g.flags&&t(9275).f(RegExp.prototype,"flags",{configurable:!0,get:t(3218)})},1466:(e,n,t)=>{"use strict";var r=t(7007),o=t(875),i=t(6793),a=t(7787);t(8082)("match",1,(function(e,n,t,l){return[function(t){var r=e(this),o=null==t?void 0:t[n];return void 0!==o?o.call(t,r):new RegExp(t)[n](String(r))},function(e){var n=l(t,e,this);if(n.done)return n.value;var c=r(e),s=String(this);if(!c.global)return a(c,s);var A=c.unicode;c.lastIndex=0;for(var u,d=[],f=0;null!==(u=a(c,s));){var p=String(u[0]);d[f]=p,""===p&&(c.lastIndex=i(s,o(c.lastIndex),A)),f++}return 0===f?null:d}]}))},9357:(e,n,t)=>{"use strict";var r=t(7007),o=t(508),i=t(875),a=t(1467),l=t(6793),c=t(7787),s=Math.max,A=Math.min,u=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,f=/\$([$&`']|\d\d?)/g;t(8082)("replace",2,(function(e,n,t,p){return[function(r,o){var i=e(this),a=null==r?void 0:r[n];return void 0!==a?a.call(r,i,o):t.call(String(i),r,o)},function(e,n){var o=p(t,e,this,n);if(o.done)return o.value;var u=r(e),d=String(this),f="function"==typeof n;f||(n=String(n));var C=u.global;if(C){var m=u.unicode;u.lastIndex=0}for(var w=[];;){var g=c(u,d);if(null===g)break;if(w.push(g),!C)break;""===String(g[0])&&(u.lastIndex=l(d,i(u.lastIndex),m))}for(var y,b="",v=0,x=0;x<w.length;x++){g=w[x];for(var I=String(g[0]),B=s(A(a(g.index),d.length),0),k=[],S=1;S<g.length;S++)k.push(void 0===(y=g[S])?y:String(y));var _=g.groups;if(f){var D=[I].concat(k,B,d);void 0!==_&&D.push(_);var E=String(n.apply(void 0,D))}else E=h(I,d,B,k,_,n);B>=v&&(b+=d.slice(v,B)+E,v=B+I.length)}return b+d.slice(v)}];function h(e,n,r,i,a,l){var c=r+e.length,s=i.length,A=f;return void 0!==a&&(a=o(a),A=d),t.call(l,A,(function(t,o){var l;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,r);case"'":return n.slice(c);case"<":l=a[o.slice(1,-1)];break;default:var A=+o;if(0===A)return t;if(A>s){var d=u(A/10);return 0===d?t:d<=s?void 0===i[d-1]?o.charAt(1):i[d-1]+o.charAt(1):t}l=i[A-1]}return void 0===l?"":l}))}}))},6142:(e,n,t)=>{"use strict";var r=t(7007),o=t(7195),i=t(7787);t(8082)("search",1,(function(e,n,t,a){return[function(t){var r=e(this),o=null==t?void 0:t[n];return void 0!==o?o.call(t,r):new RegExp(t)[n](String(r))},function(e){var n=a(t,e,this);if(n.done)return n.value;var l=r(e),c=String(this),s=l.lastIndex;o(s,0)||(l.lastIndex=0);var A=i(l,c);return o(l.lastIndex,s)||(l.lastIndex=s),null===A?-1:A.index}]}))},1876:(e,n,t)=>{"use strict";var r=t(5364),o=t(7007),i=t(8364),a=t(6793),l=t(875),c=t(7787),s=t(1165),A=t(4253),u=Math.min,d=[].push,f=4294967295,p=!A((function(){RegExp(f,"y")}));t(8082)("split",2,(function(e,n,t,A){var h;return h="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var o=String(this);if(void 0===e&&0===n)return[];if(!r(e))return t.call(o,e,n);for(var i,a,l,c=[],A=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),u=0,p=void 0===n?f:n>>>0,h=new RegExp(e.source,A+"g");(i=s.call(h,o))&&!((a=h.lastIndex)>u&&(c.push(o.slice(u,i.index)),i.length>1&&i.index<o.length&&d.apply(c,i.slice(1)),l=i[0].length,u=a,c.length>=p));)h.lastIndex===i.index&&h.lastIndex++;return u===o.length?!l&&h.test("")||c.push(""):c.push(o.slice(u)),c.length>p?c.slice(0,p):c}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,r){var o=e(this),i=null==t?void 0:t[n];return void 0!==i?i.call(t,o,r):h.call(String(o),t,r)},function(e,n){var r=A(h,e,this,n,h!==t);if(r.done)return r.value;var s=o(e),d=String(this),C=i(s,RegExp),m=s.unicode,w=(s.ignoreCase?"i":"")+(s.multiline?"m":"")+(s.unicode?"u":"")+(p?"y":"g"),g=new C(p?s:"^(?:"+s.source+")",w),y=void 0===n?f:n>>>0;if(0===y)return[];if(0===d.length)return null===c(g,d)?[d]:[];for(var b=0,v=0,x=[];v<d.length;){g.lastIndex=p?v:0;var I,B=c(g,p?d:d.slice(v));if(null===B||(I=u(l(g.lastIndex+(p?0:v)),d.length))===b)v=a(d,v,m);else{if(x.push(d.slice(b,v)),x.length===y)return x;for(var k=1;k<=B.length-1;k++)if(x.push(B[k]),x.length===y)return x;v=b=I}}return x.push(d.slice(b)),x}]}))},6108:(e,n,t)=>{"use strict";t(6774);var r=t(7007),o=t(3218),i=t(7057),a="toString",l=/./.toString,c=function(e){t(7234)(RegExp.prototype,a,e,!0)};t(4253)((function(){return"/a/b"!=l.call({source:"a",flags:"b"})}))?c((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)})):l.name!=a&&c((function(){return l.call(this)}))},8184:(e,n,t)=>{"use strict";var r=t(9824),o=t(1616);e.exports=t(5795)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"Set"),e=0===e?0:e,e)}},r)},856:(e,n,t)=>{"use strict";t(9395)("anchor",(function(e){return function(n){return e(this,"a","name",n)}}))},703:(e,n,t)=>{"use strict";t(9395)("big",(function(e){return function(){return e(this,"big","","")}}))},1539:(e,n,t)=>{"use strict";t(9395)("blink",(function(e){return function(){return e(this,"blink","","")}}))},5292:(e,n,t)=>{"use strict";t(9395)("bold",(function(e){return function(){return e(this,"b","","")}}))},9539:(e,n,t)=>{"use strict";var r=t(2985),o=t(4496)(!1);r(r.P,"String",{codePointAt:function(e){return o(this,e)}})},6620:(e,n,t)=>{"use strict";var r=t(2985),o=t(875),i=t(2094),a="endsWith",l="".endsWith;r(r.P+r.F*t(8852)(a),"String",{endsWith:function(e){var n=i(this,e,a),t=arguments.length>1?arguments[1]:void 0,r=o(n.length),c=void 0===t?r:Math.min(o(t),r),s=String(e);return l?l.call(n,s,c):n.slice(c-s.length,c)===s}})},6629:(e,n,t)=>{"use strict";t(9395)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},3694:(e,n,t)=>{"use strict";t(9395)("fontcolor",(function(e){return function(n){return e(this,"font","color",n)}}))},7648:(e,n,t)=>{"use strict";t(9395)("fontsize",(function(e){return function(n){return e(this,"font","size",n)}}))},191:(e,n,t)=>{var r=t(2985),o=t(2337),i=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var n,t=[],r=arguments.length,a=0;r>a;){if(n=+arguments[a++],o(n,1114111)!==n)throw RangeError(n+" is not a valid code point");t.push(n<65536?i(n):i(55296+((n-=65536)>>10),n%1024+56320))}return t.join("")}})},2850:(e,n,t)=>{"use strict";var r=t(2985),o=t(2094),i="includes";r(r.P+r.F*t(8852)(i),"String",{includes:function(e){return!!~o(this,e,i).indexOf(e,arguments.length>1?arguments[1]:void 0)}})},7795:(e,n,t)=>{"use strict";t(9395)("italics",(function(e){return function(){return e(this,"i","","")}}))},9115:(e,n,t)=>{"use strict";var r=t(4496)(!0);t(2923)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,n=this._t,t=this._i;return t>=n.length?{value:void 0,done:!0}:(e=r(n,t),this._i+=e.length,{value:e,done:!1})}))},4531:(e,n,t)=>{"use strict";t(9395)("link",(function(e){return function(n){return e(this,"a","href",n)}}))},8306:(e,n,t)=>{var r=t(2985),o=t(2110),i=t(875);r(r.S,"String",{raw:function(e){for(var n=o(e.raw),t=i(n.length),r=arguments.length,a=[],l=0;t>l;)a.push(String(n[l++])),l<r&&a.push(String(arguments[l]));return a.join("")}})},823:(e,n,t)=>{var r=t(2985);r(r.P,"String",{repeat:t(8595)})},3605:(e,n,t)=>{"use strict";t(9395)("small",(function(e){return function(){return e(this,"small","","")}}))},7732:(e,n,t)=>{"use strict";var r=t(2985),o=t(875),i=t(2094),a="startsWith",l="".startsWith;r(r.P+r.F*t(8852)(a),"String",{startsWith:function(e){var n=i(this,e,a),t=o(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),r=String(e);return l?l.call(n,r,t):n.slice(t,t+r.length)===r}})},6780:(e,n,t)=>{"use strict";t(9395)("strike",(function(e){return function(){return e(this,"strike","","")}}))},9937:(e,n,t)=>{"use strict";t(9395)("sub",(function(e){return function(){return e(this,"sub","","")}}))},511:(e,n,t)=>{"use strict";t(9395)("sup",(function(e){return function(){return e(this,"sup","","")}}))},4564:(e,n,t)=>{"use strict";t(9599)("trim",(function(e){return function(){return e(this,3)}}))},5767:(e,n,t)=>{"use strict";var r=t(3816),o=t(9181),i=t(7057),a=t(2985),l=t(7234),c=t(4728).KEY,s=t(4253),A=t(3825),u=t(2943),d=t(3953),f=t(6314),p=t(8787),h=t(6074),C=t(5541),m=t(4302),w=t(7007),g=t(5286),y=t(508),b=t(2110),v=t(1689),x=t(681),I=t(2503),B=t(9327),k=t(8693),S=t(4548),_=t(9275),D=t(7184),E=k.f,J=_.f,O=B.f,$=r.Symbol,P=r.JSON,R=P&&P.stringify,z=f("_hidden"),N=f("toPrimitive"),M={}.propertyIsEnumerable,T=A("symbol-registry"),j=A("symbols"),F=A("op-symbols"),L=Object.prototype,Y="function"==typeof $&&!!S.f,U=r.QObject,q=!U||!U.prototype||!U.prototype.findChild,G=i&&s((function(){return 7!=I(J({},"a",{get:function(){return J(this,"a",{value:7}).a}})).a}))?function(e,n,t){var r=E(L,n);r&&delete L[n],J(e,n,t),r&&e!==L&&J(L,n,r)}:J,Q=function(e){var n=j[e]=I($.prototype);return n._k=e,n},W=Y&&"symbol"==typeof $.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof $},V=function(e,n,t){return e===L&&V(F,n,t),w(e),n=v(n,!0),w(t),o(j,n)?(t.enumerable?(o(e,z)&&e[z][n]&&(e[z][n]=!1),t=I(t,{enumerable:x(0,!1)})):(o(e,z)||J(e,z,x(1,{})),e[z][n]=!0),G(e,n,t)):J(e,n,t)},H=function(e,n){w(e);for(var t,r=C(n=b(n)),o=0,i=r.length;i>o;)V(e,t=r[o++],n[t]);return e},K=function(e){var n=M.call(this,e=v(e,!0));return!(this===L&&o(j,e)&&!o(F,e))&&(!(n||!o(this,e)||!o(j,e)||o(this,z)&&this[z][e])||n)},Z=function(e,n){if(e=b(e),n=v(n,!0),e!==L||!o(j,n)||o(F,n)){var t=E(e,n);return!t||!o(j,n)||o(e,z)&&e[z][n]||(t.enumerable=!0),t}},X=function(e){for(var n,t=O(b(e)),r=[],i=0;t.length>i;)o(j,n=t[i++])||n==z||n==c||r.push(n);return r},ee=function(e){for(var n,t=e===L,r=O(t?F:b(e)),i=[],a=0;r.length>a;)!o(j,n=r[a++])||t&&!o(L,n)||i.push(j[n]);return i};Y||(l(($=function(){if(this instanceof $)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),n=function(t){this===L&&n.call(F,t),o(this,z)&&o(this[z],e)&&(this[z][e]=!1),G(this,e,x(1,t))};return i&&q&&G(L,e,{configurable:!0,set:n}),Q(e)}).prototype,"toString",(function(){return this._k})),k.f=Z,_.f=V,t(616).f=B.f=X,t(4682).f=K,S.f=ee,i&&!t(4461)&&l(L,"propertyIsEnumerable",K,!0),p.f=function(e){return Q(f(e))}),a(a.G+a.W+a.F*!Y,{Symbol:$});for(var ne="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ne.length>te;)f(ne[te++]);for(var re=D(f.store),oe=0;re.length>oe;)h(re[oe++]);a(a.S+a.F*!Y,"Symbol",{for:function(e){return o(T,e+="")?T[e]:T[e]=$(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var n in T)if(T[n]===e)return n},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!Y,"Object",{create:function(e,n){return void 0===n?I(e):H(I(e),n)},defineProperty:V,defineProperties:H,getOwnPropertyDescriptor:Z,getOwnPropertyNames:X,getOwnPropertySymbols:ee});var ie=s((function(){S.f(1)}));a(a.S+a.F*ie,"Object",{getOwnPropertySymbols:function(e){return S.f(y(e))}}),P&&a(a.S+a.F*(!Y||s((function(){var e=$();return"[null]"!=R([e])||"{}"!=R({a:e})||"{}"!=R(Object(e))}))),"JSON",{stringify:function(e){for(var n,t,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(t=n=r[1],(g(n)||void 0!==e)&&!W(e))return m(n)||(n=function(e,n){if("function"==typeof t&&(n=t.call(this,e,n)),!W(n))return n}),r[1]=n,R.apply(P,r)}}),$.prototype[N]||t(7728)($.prototype,N,$.prototype.valueOf),u($,"Symbol"),u(Math,"Math",!0),u(r.JSON,"JSON",!0)},142:(e,n,t)=>{"use strict";var r=t(2985),o=t(9383),i=t(1125),a=t(7007),l=t(2337),c=t(875),s=t(5286),A=t(3816).ArrayBuffer,u=t(8364),d=i.ArrayBuffer,f=i.DataView,p=o.ABV&&A.isView,h=d.prototype.slice,C=o.VIEW,m="ArrayBuffer";r(r.G+r.W+r.F*(A!==d),{ArrayBuffer:d}),r(r.S+r.F*!o.CONSTR,m,{isView:function(e){return p&&p(e)||s(e)&&C in e}}),r(r.P+r.U+r.F*t(4253)((function(){return!new d(2).slice(1,void 0).byteLength})),m,{slice:function(e,n){if(void 0!==h&&void 0===n)return h.call(a(this),e);for(var t=a(this).byteLength,r=l(e,t),o=l(void 0===n?t:n,t),i=new(u(this,d))(c(o-r)),s=new f(this),A=new f(i),p=0;r<o;)A.setUint8(p++,s.getUint8(r++));return i}}),t(2974)(m)},1786:(e,n,t)=>{var r=t(2985);r(r.G+r.W+r.F*!t(9383).ABV,{DataView:t(1125).DataView})},162:(e,n,t)=>{t(8440)("Float32",4,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},3834:(e,n,t)=>{t(8440)("Float64",8,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},4821:(e,n,t)=>{t(8440)("Int16",2,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},1303:(e,n,t)=>{t(8440)("Int32",4,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},5368:(e,n,t)=>{t(8440)("Int8",1,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},9103:(e,n,t)=>{t(8440)("Uint16",2,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},3318:(e,n,t)=>{t(8440)("Uint32",4,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},6964:(e,n,t)=>{t(8440)("Uint8",1,(function(e){return function(n,t,r){return e(this,n,t,r)}}))},2152:(e,n,t)=>{t(8440)("Uint8",1,(function(e){return function(n,t,r){return e(this,n,t,r)}}),!0)},147:(e,n,t)=>{"use strict";var r,o=t(3816),i=t(50)(0),a=t(7234),l=t(4728),c=t(5345),s=t(3657),A=t(5286),u=t(1616),d=t(1616),f=!o.ActiveXObject&&"ActiveXObject"in o,p="WeakMap",h=l.getWeak,C=Object.isExtensible,m=s.ufstore,w=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},g={get:function(e){if(A(e)){var n=h(e);return!0===n?m(u(this,p)).get(e):n?n[this._i]:void 0}},set:function(e,n){return s.def(u(this,p),e,n)}},y=e.exports=t(5795)(p,w,g,s,!0,!0);d&&f&&(c((r=s.getConstructor(w,p)).prototype,g),l.NEED=!0,i(["delete","has","get","set"],(function(e){var n=y.prototype,t=n[e];a(n,e,(function(n,o){if(A(n)&&!C(n)){this._f||(this._f=new r);var i=this._f[e](n,o);return"set"==e?this:i}return t.call(this,n,o)}))})))},9192:(e,n,t)=>{"use strict";var r=t(3657),o=t(1616),i="WeakSet";t(5795)(i,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,i),e,!0)}},r,!1,!0)},1268:(e,n,t)=>{"use strict";var r=t(2985),o=t(3325),i=t(508),a=t(875),l=t(4963),c=t(6886);r(r.P,"Array",{flatMap:function(e){var n,t,r=i(this);return l(e),n=a(r.length),t=c(r,0),o(t,r,r,n,0,1,e,arguments[1]),t}}),t(7722)("flatMap")},2773:(e,n,t)=>{"use strict";var r=t(2985),o=t(9315)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),t(7722)("includes")},3276:(e,n,t)=>{var r=t(2985),o=t(1131)(!0);r(r.S,"Object",{entries:function(e){return o(e)}})},8351:(e,n,t)=>{var r=t(2985),o=t(7643),i=t(2110),a=t(8693),l=t(2811);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var n,t,r=i(e),c=a.f,s=o(r),A={},u=0;s.length>u;)void 0!==(t=c(r,n=s[u++]))&&l(A,n,t);return A}})},6409:(e,n,t)=>{var r=t(2985),o=t(1131)(!1);r(r.S,"Object",{values:function(e){return o(e)}})},9865:(e,n,t)=>{"use strict";var r=t(2985),o=t(5645),i=t(3816),a=t(8364),l=t(94);r(r.P+r.R,"Promise",{finally:function(e){var n=a(this,o.Promise||i.Promise),t="function"==typeof e;return this.then(t?function(t){return l(n,e()).then((function(){return t}))}:e,t?function(t){return l(n,e()).then((function(){throw t}))}:e)}})},2770:(e,n,t)=>{"use strict";var r=t(2985),o=t(5442),i=t(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},1784:(e,n,t)=>{"use strict";var r=t(2985),o=t(5442),i=t(575),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},5869:(e,n,t)=>{"use strict";t(9599)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},4325:(e,n,t)=>{"use strict";t(9599)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},9665:(e,n,t)=>{t(6074)("asyncIterator")},1181:(e,n,t)=>{for(var r=t(6997),o=t(7184),i=t(7234),a=t(3816),l=t(7728),c=t(2803),s=t(6314),A=s("iterator"),u=s("toStringTag"),d=c.Array,f={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},p=o(f),h=0;h<p.length;h++){var C,m=p[h],w=f[m],g=a[m],y=g&&g.prototype;if(y&&(y[A]||l(y,A,d),y[u]||l(y,u,m),c[m]=d,w))for(C in r)y[C]||i(y,C,r[C],!0)}},4633:(e,n,t)=>{var r=t(2985),o=t(4193);r(r.G+r.B,{setImmediate:o.set,clearImmediate:o.clear})},2564:(e,n,t)=>{var r=t(3816),o=t(2985),i=t(575),a=[].slice,l=/MSIE .\./.test(i),c=function(e){return function(n,t){var r=arguments.length>2,o=!!r&&a.call(arguments,2);return e(r?function(){("function"==typeof n?n:Function(n)).apply(this,o)}:n,t)}};o(o.G+o.B+o.F*l,{setTimeout:c(r.setTimeout),setInterval:c(r.setInterval)})},6337:(e,n,t)=>{t(2564),t(4633),t(1181),e.exports=t(5645)},4861:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.app{max-width:1240px;margin:0 auto;position:relative}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/app/App.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,KACI,gBJckB,CIblB,aAAA,CACA,iBAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../style.scss";\n\n.app {\n    max-width: $container-max-width;\n    margin: 0 auto;\n    position: relative;\n  }'],sourceRoot:""}]);const l=a},1249:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.header{display:flex;justify-content:space-between;align-items:center;position:fixed;z-index:99;min-height:50px;width:100%;max-width:1240px;left:50%;transform:translate(-50%);background:#00cecb;padding:0 10px}@media screen and (min-width: 768px){.header{min-height:70px}}.header__logo{display:flex;align-items:center}.header__icon{display:flex;align-items:center;font-size:1.5rem;margin-right:5px}@media screen and (min-width: 768px){.header__icon{font-size:2rem}}.header__text{font-size:1.5rem;text-transform:uppercase;font-weight:400;letter-spacing:.2rem}@media screen and (min-width: 768px){.header__text{font-size:2rem}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/header/Header.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,QACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,cAAA,CACA,UAAA,CACA,eAAA,CACA,UAAA,CACA,gBAAA,CACA,QAAA,CACA,yBAAA,CACA,kBAAA,CACA,cAAA,CFTI,qCEHR,QAeM,eAAA,CAAA,CAGF,cACE,YAAA,CACA,kBAAA,CAGF,cACE,YAAA,CACA,kBAAA,CACA,gBAAA,CACA,gBAAA,CFxBE,qCEoBJ,cAOI,cAAA,CAAA,CAIJ,cACE,gBAAA,CACA,wBAAA,CACA,eAAA,CACA,oBAAA,CFnCE,qCE+BJ,cAOI,cAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../style.scss";\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    z-index: 99;\n    min-height: 50px;\n    width: 100%;\n    max-width: 1240px;\n    left: 50%;\n    transform: translate(-50%);\n    background: $secondary-color;\n    padding: 0 10px;\n \n    @include breakpoint(md) {\n      min-height: 70px;\n    }\n  \n    &__logo {\n      display: flex;\n      align-items: center;\n    }\n  \n    &__icon {\n      display: flex;\n      align-items: center;\n      font-size: 1.5rem;\n      margin-right: 5px;\n  \n      @include breakpoint(md) {\n        font-size: 2rem;\n      }\n    }\n  \n    &__text {\n      font-size: 1.5rem;\n      text-transform: uppercase;\n      font-weight: 400;\n      letter-spacing: 0.2rem;\n  \n      @include breakpoint(md) {\n        font-size: 2rem;\n      }\n    }\n  }'],sourceRoot:""}]);const l=a},8569:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.burger-menu{position:relative;width:20px;height:20px}@media screen and (min-width: 768px){.burger-menu{display:none}}.burger-menu:after{content:"";position:absolute;top:5px;height:2px;width:20px;background-color:#2d3436;transition:all .3s}.burger-menu:before{content:"";top:15px;position:absolute;height:2px;width:20px;background-color:#2d3436;transition:all .3s}.burger-menu span{display:block;position:absolute;top:10px;height:2px;width:20px;background-color:#2d3436}.burger-menu.active:after{transform:rotate(45deg);top:10px}.burger-menu.active:before{transform:rotate(-45deg);top:10px}.burger-menu.active span{transform:scale(0)}.menu{position:absolute;right:0;top:50px;background-color:#00cecb;width:80px;height:0px;opacity:0;transition:height .3s,opacity .3s;overflow:hidden;list-style:none;display:flex;flex-direction:column;align-items:center}.menu.active{height:80px;opacity:1}@media screen and (min-width: 768px){.menu.active{height:auto}}@media screen and (min-width: 768px){.menu{position:static;width:auto;height:auto;flex-direction:row;opacity:1}}.menu__link{text-decoration:none;color:#2d3436;font-size:1.5rem}@media screen and (min-width: 768px){.menu__link{transition:color .2s}.menu__link:hover{color:#636e72}}@media screen and (min-width: 768px){.menu__link{margin-right:20px}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/header/Menu/Menu.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,aACI,iBAAA,CACA,UAAA,CACA,WAAA,CAAA,qCAHJ,aAMQ,YAAA,CAAA,CAGJ,mBACI,UAAA,CACA,iBAAA,CACA,OAAA,CACA,UAAA,CACA,UAAA,CACA,wBJRK,CISL,kBAAA,CAGJ,oBACI,UAAA,CACA,QAAA,CACA,iBAAA,CACA,UAAA,CACA,UAAA,CACA,wBJlBK,CImBL,kBAAA,CAGJ,kBACI,aAAA,CACA,iBAAA,CACA,QAAA,CACA,UAAA,CACA,UAAA,CACA,wBJ5BK,CI+BT,0BACI,uBAAA,CACA,QAAA,CAGJ,2BACI,wBAAA,CACA,QAAA,CAGJ,yBACI,kBAAA,CAIR,MACI,iBAAA,CACA,OAAA,CACA,QAAA,CACA,wBJ9Cc,CI+Cd,UAAA,CACA,UAAA,CACA,SAAA,CACA,iCAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CAEA,aACI,WAAA,CACA,SAAA,CFnEA,qCEiEJ,aAKQ,WAAA,CAAA,CFtEJ,qCEkDR,MAyBQ,eAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,SAAA,CAAA,CAGJ,YACI,oBAAA,CACA,aJhFK,CIiFL,gBAAA,CFrFA,qCEkFJ,YAMQ,oBAAA,CACA,kBACI,aJrFM,CAAA,CELd,qCEkFJ,YAaQ,iBAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.burger-menu {\n    position: relative;\n    width: 20px;\n    height: 20px;\n\n    @include breakpoint(md) {\n        display: none;\n    }\n\n    &:after {\n        content: "";\n        position: absolute;\n        top: 5px;\n        height: 2px;\n        width: 20px;\n        background-color: $text-color;\n        transition: all 0.3s;\n    }\n\n    &:before {\n        content: "";\n        top: 15px;\n        position: absolute;\n        height: 2px;\n        width: 20px;\n        background-color: $text-color;\n        transition: all 0.3s;\n    }\n\n    span {\n        display: block;\n        position: absolute;\n        top: 10px;\n        height: 2px;\n        width: 20px;\n        background-color: $text-color;\n    }\n\n    &.active:after {\n        transform: rotate(45deg);\n        top: 10px;\n    }\n\n    &.active:before {\n        transform: rotate(-45deg);\n        top: 10px;\n    }\n\n    &.active span {\n        transform: scale(0);\n    }\n}\n\n.menu {\n    position: absolute;\n    right: 0;\n    top: 50px;\n    background-color: $secondary-color;\n    width: 80px;\n    height: 0px;\n    opacity: 0;\n    transition: height 0.3s, opacity 0.3s;\n    overflow: hidden;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &.active {\n        height: 80px;\n        opacity: 1;\n\n        @include breakpoint(md) {\n            height: auto;\n        }\n    }\n\n    @include breakpoint(md) {\n        position: static;\n        width: auto;\n        height: auto;\n        flex-direction: row;\n        opacity: 1;\n    }\n\n    &__link {\n        text-decoration: none;\n        color: $text-color;\n        font-size: 1.5rem;\n\n        @include breakpoint(md) {\n            transition: color 0.2s;\n            &:hover {\n                color: $text-color-selected;\n            }\n        }\n\n        @include breakpoint(md) {\n            margin-right: 20px;\n        }\n    }\n}'],sourceRoot:""}]);const l=a},8691:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.controls-panel{display:flex;justify-content:space-between;padding:0 10px}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/ControlsPanel/ControlsPanel.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,gBACI,YAAA,CACA,6BAAA,CACA,cAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.controls-panel {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 10px;\n}'],sourceRoot:""}]);const l=a},2817:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.controls-panel_desktop{display:none}@media screen and (min-width: 768px){.controls-panel_desktop{display:block}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/ControlsPanelDesktop/ControlsPanelDesktop.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,wBACI,YAAA,CFEI,qCEHR,wBAIQ,aAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.controls-panel_desktop {\n    display: none;\n\n    @include breakpoint(md) {\n        display: block;\n    }\n}'],sourceRoot:""}]);const l=a},2391:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.controls-panel_mobile{position:fixed;bottom:10px;width:100%;padding:0 10px}@media screen and (min-width: 768px){.controls-panel_mobile{display:none}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/ControlsPanelMobile/ControlsPanelMobile.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,uBACI,cAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CFDI,qCEHR,uBAOQ,YAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.controls-panel_mobile {\n    position: fixed;\n    bottom: 10px;\n    width: 100%;\n    padding: 0 10px;\n\n    @include breakpoint(md) {\n        display: none;\n    }\n}'],sourceRoot:""}]);const l=a},3467:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}@media screen and (min-width: 768px){.ingredients-grid{width:75%;margin-left:310px}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/IngredientsGrid/IngredientsGrid.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CDnEA,qCEFJ,kBACI,SAAA,CACA,iBAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n@include breakpoint(md) {\n    .ingredients-grid {\n        width: 75%;\n        margin-left: $container-max-width * 0.25;\n    }\n}\n'],sourceRoot:""}]);const l=a},4079:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.quiz-menu{flex-direction:column;justify-content:space-between;position:fixed;bottom:0px;top:50px;padding:20px 10px;background-color:#fab1a0;width:100vw;transition:transform ease-in-out .6s;transform-origin:39px 39px}@media screen and (min-width: 768px){.quiz-menu{display:flex;width:310px}}.quiz-menu.collapsed{transform:scale(0)}.button.controls{font-size:1rem;letter-spacing:normal;padding:10px 15px}.button.controls__selected-counter{border-radius:50%;width:50px;height:50px;text-align:center;padding:10px 0;cursor:default !important}.button.controls__selected-counter:hover{background-color:#fab1a0}@media screen and (min-width: 768px){.button.controls__selected-counter{border-radius:5px;width:auto;height:auto;padding:10px 15px}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/QuizMenu/QuizMenu.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,WAMI,qBAAA,CACA,6BAAA,CACA,cAAA,CACA,UAAA,CACA,QAAA,CACA,iBAAA,CACA,wBJHY,CIIZ,WAAA,CACA,oCAAA,CACA,0BAAA,CFZI,qCEHR,WAEQ,YAAA,CACA,WAAA,CAAA,CAcJ,qBACI,kBAAA,CAIR,iBACI,cAAA,CACA,qBAAA,CACA,iBAAA,CAEA,mCACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,cAAA,CAEA,yBAAA,CACA,yCACI,wBJ3BI,CENR,qCEwBJ,mCAaQ,iBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.quiz-menu {\n    @include breakpoint(md) {\n        display: flex;\n        width: $container-max-width * 0.25;\n    }\n\n    flex-direction: column;\n    justify-content: space-between;\n    position: fixed;\n    bottom: 0px;\n    top: 50px;\n    padding: 20px 10px;\n    background-color: $primary-color;\n    width: 100vw;\n    transition: transform ease-in-out 0.6s;\n    transform-origin: 39px 39px;\n\n    &.collapsed {\n        transform: scale(0);\n    }\n}\n\n.button.controls {\n    font-size: 1rem;\n    letter-spacing: normal;\n    padding: 10px 15px;\n\n    &__selected-counter {\n        border-radius: 50%;\n        width: 50px;\n        height: 50px;\n        text-align: center;\n        padding: 10px 0;\n\n        cursor: default !important; //TODO: get rid of important modificator \n        &:hover {\n            background-color: $primary-color;\n        }\n\n        @include breakpoint(md) {\n            border-radius: 5px;\n            width: auto;\n            height: auto;\n            padding: 10px 15px;\n        }\n    }\n}\n'],sourceRoot:""}]);const l=a},130:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}@media screen and (min-width: 768px){.counter[animation="1"]{animation:.2s linear 4 alternate shake}@keyframes shake{from{transform:rotate(-45deg)}to{transform:rotate(45deg)}}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/SelectedIngredientsCounter/SelectedIngredientsCounter.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CDnEA,qCEFJ,wBACI,sCAAA,CAEA,iBACI,KACI,wBAAA,CAGJ,GACI,uBAAA,CAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n@include breakpoint(md) {\n    .counter[animation="1"] {\n        animation: 0.2s linear 4 alternate shake;\n    \n        @keyframes shake {\n            from {\n                transform: rotate(-45deg);\n            }\n    \n            to {\n                transform: rotate(45deg);\n            }\n        }\n    }\n}\n'],sourceRoot:""}]);const l=a},7233:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}button.task-description-button{position:fixed;top:70px;left:20px;letter-spacing:normal;border-radius:50%;font-size:1rem;width:38px;height:38px;z-index:3}@media screen and (min-width: 768px){button.task-description-button{display:none}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/ShowDescriptionButton/ShowDescriptionButton.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,+BACI,cAAA,CACA,QAAA,CACA,SAAA,CACA,qBAAA,CACA,iBAAA,CACA,cAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CFNI,qCEHR,+BAYQ,YAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\nbutton.task-description-button {\n    position: fixed;\n    top: 70px;\n    left: 20px;\n    letter-spacing: normal;\n    border-radius: 50%;\n    font-size: 1rem;\n    width: 38px;\n    height: 38px;\n    z-index: 3;\n\n    @include breakpoint(md) {\n        display: none;\n    }\n }\n'],sourceRoot:""}]);const l=a},4969:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.splash-screen{display:flex;justify-content:space-evenly;width:75%;margin:0 auto;padding-top:15px}.splash-screen__logo{display:none}@media screen and (min-width: 768px){.splash-screen__logo{display:inline-block;width:50%}.splash-screen__logo img{width:100%;height:100%}}.splash-screen__call-to-action{display:flex;justify-content:center;align-items:center;flex-direction:column;border:1px solid #fab1a0;border-radius:5px;padding:10px}@media screen and (min-width: 768px){.splash-screen__call-to-action{width:50%;border:none;padding:0}}.splash-screen__button{width:75%;padding:10px 20px}.splash-screen__text{padding:0 50px;margin-bottom:20px;font-weight:200;text-align:center}@media screen and (min-width: 768px){.splash-screen__text{font-size:1.5rem;line-height:2rem}}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/SplashScreen/SplashScreen.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,eACI,YAAA,CACA,4BAAA,CACA,SAAA,CACA,aAAA,CACA,gBAAA,CAEA,qBACI,YAAA,CFLA,qCEIJ,qBAIQ,oBAAA,CACA,SAAA,CAEA,yBACI,UAAA,CACA,WAAA,CAAA,CAKZ,+BACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,wBAAA,CACA,iBAAA,CACA,YAAA,CFzBA,qCEkBJ,+BAUQ,SAAA,CACA,WAAA,CACA,SAAA,CAAA,CAIR,uBACI,SAAA,CACA,iBAAA,CAGJ,qBACI,cAAA,CACA,kBAAA,CACA,eAAA,CACA,iBAAA,CF3CA,qCEuCJ,qBAOQ,gBAAA,CACA,gBAAA,CAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.splash-screen {\n    display: flex;\n    justify-content: space-evenly;\n    width: 75%;\n    margin: 0 auto;\n    padding-top: 15px;\n\n    &__logo {\n        display: none;\n\n        @include breakpoint(md) {\n            display: inline-block;\n            width: 50%;\n\n            img {\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n\n    &__call-to-action {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        border: 1px solid $primary-color;\n        border-radius: 5px;\n        padding: 10px;\n\n        @include breakpoint(md) {\n            width: 50%;\n            border: none;\n            padding: 0;\n        }\n    }\n\n    &__button {\n        width: 75%;\n        padding: 10px 20px;\n    }\n\n    &__text {\n        padding: 0 50px;\n        margin-bottom: 20px;\n        font-weight: 200;\n        text-align: center;\n\n        @include breakpoint(md) {\n            font-size: 1.5rem;\n            line-height: 2rem;\n        }\n    }\n}'],sourceRoot:""}]);const l=a},3940:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.title{font-weight:400;text-align:center;margin-bottom:20px}@media screen and (min-width: 768px){.title{margin-bottom:40px}}.cocktail-image{border-radius:50%;border:1px solid #00cecb;overflow:hidden;max-width:200px;max-height:200px;margin:0 auto 20px auto}.cocktail-image img{display:block;width:100%;height:auto}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/quiz/TaskDescription/TaskDescription.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,OACI,eAAA,CACA,iBAAA,CACA,kBAAA,CAAA,qCAHJ,OAMQ,kBAAA,CAAA,CAIR,gBACI,iBAAA,CACA,wBAAA,CACA,eAAA,CACA,eAAA,CACA,gBAAA,CACA,uBAAA,CAEA,oBACI,aAAA,CACA,UAAA,CACA,WAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../../style.scss";\n\n.title {\n    font-weight: 400;\n    text-align: center;\n    margin-bottom: 20px;\n\n    @include breakpoint(md) {\n        margin-bottom: 40px;\n    }\n}\n\n.cocktail-image {\n    border-radius: 50%;\n    border: 1px solid $secondary-color;\n    overflow: hidden;\n    max-width: 200px;\n    max-height: 200px;\n    margin: 0 auto 20px auto;\n\n    img {\n        display: block;\n        width: 100%;\n        height: auto;\n    }\n}\n\n'],sourceRoot:""}]);const l=a},111:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}.dimmer{display:none;position:fixed;width:100%;height:100%;background-color:#000000AA;z-index:100;top:0;left:0}.dimmer_active{display:block}.search{background:transparent;border:none;border-bottom:3px solid;outline:none;font-size:1.5rem;font-family:"Oswald",sans-serif;width:100%;padding:5px}.page{display:flex;flex-direction:column;align-items:center}.page__cocktails-list{margin-bottom:20px}.page__paggination{width:300px;margin-bottom:20px}.paggination{display:flex;justify-content:space-between;align-items:center}.paggination__pages{list-style:none;display:flex;justify-self:center}.paggination__pages li{text-align:center;width:25px;margin-right:20px;border-radius:2px}.paggination__pages li:last-child{margin-right:auto}.paggination__pages li:hover{cursor:pointer}.paggination__pages li.paggination__hellip:hover{cursor:default}.paggination__current-page{background:#fab1a0}.paggination_hidden{display:none}.paggination i:hover{cursor:pointer}.popup{display:none;background-color:#fab1a0;width:75%;height:75vh;position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);z-index:101;border-radius:5px;box-shadow:4px 4px 10px #000000cc}.popup__close-btn{position:absolute;right:0;top:0;border:none;box-shadow:none;background-color:transparent;font-size:1.5rem;padding:0 5px}.popup__close-btn:hover{background-color:transparent;color:#636e72;cursor:pointer}.popup_active{display:block}.scroll-blocked{overflow:hidden}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss","webpack://./src/components/wiki/Wiki.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA,CCtER,QACI,YAAA,CACA,cAAA,CACA,UAAA,CACA,WAAA,CACA,0BAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CAEA,eACI,aAAA,CAIR,QACI,sBAAA,CACA,WAAA,CACA,uBAAA,CACA,YAAA,CACA,gBAAA,CACA,+BJfS,CIgBT,UAAA,CACA,WAAA,CAGJ,MACI,YAAA,CACA,qBAAA,CACA,kBAAA,CAEA,sBACI,kBAAA,CAGJ,mBACI,WAAA,CACA,kBAAA,CAIR,aACI,YAAA,CACA,6BAAA,CACA,kBAAA,CAEA,oBACI,eAAA,CACA,YAAA,CACA,mBAAA,CAEA,uBACI,iBAAA,CACA,UAAA,CACA,iBAAA,CACA,iBAAA,CAEA,kCACI,iBAAA,CAGJ,6BACI,cAAA,CAGJ,iDACI,cAAA,CAKZ,2BACI,kBJ/DQ,CIkEZ,oBACI,YAAA,CAGJ,qBACI,cAAA,CAIR,OACI,YAAA,CACA,wBJ7EY,CI8EZ,SAAA,CACA,WAAA,CACA,cAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,WAAA,CACA,iBAAA,CACA,iCAAA,CAEA,kBACI,iBAAA,CACA,OAAA,CACA,KAAA,CACA,WAAA,CACA,eAAA,CACA,4BAAA,CACA,gBAAA,CACA,aAAA,CAEA,wBACI,4BAAA,CACA,aJrGU,CIsGV,cAAA,CAIR,cACG,aAAA,CAIP,gBACI,eAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n','@import "../../style.scss";\n\n.dimmer {\n    display: none;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: #000000AA;\n    z-index: 100;\n    top: 0;\n    left: 0;\n\n    &_active {\n        display: block;\n    }\n}\n\n.search {\n    background: transparent;\n    border: none;\n    border-bottom: 3px solid;\n    outline: none;\n    font-size: 1.5rem;\n    font-family: $font-stack;\n    width: 100%;\n    padding: 5px;\n}\n\n.page {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__cocktails-list {\n        margin-bottom: 20px;\n    }\n\n    &__paggination {\n        width: 300px;\n        margin-bottom: 20px;\n    }\n}\n\n.paggination {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__pages {\n        list-style: none;\n        display: flex;\n        justify-self: center;\n\n        li {\n            text-align: center;\n            width: 25px;\n            margin-right: 20px;\n            border-radius: 2px;\n\n            &:last-child {\n                margin-right: auto;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n\n            &.paggination__hellip:hover {\n                cursor: default;\n            }\n        }\n    }\n\n    &__current-page {\n        background: $primary-color;\n    }\n\n    &_hidden {\n        display: none;\n    }\n\n    i:hover {\n        cursor: pointer;\n    }\n}\n\n.popup {\n    display: none;\n    background-color: $primary-color;\n    width: 75%;\n    height: 75vh;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 101;\n    border-radius: 5px;\n    box-shadow: 4px 4px 10px #000000cc;\n\n    &__close-btn {\n        position: absolute;\n        right: 0;\n        top: 0;\n        border: none;\n        box-shadow: none;\n        background-color: transparent;\n        font-size: 1.5rem;\n        padding: 0 5px;\n\n        &:hover {\n            background-color: transparent;\n            color: $text-color-selected;\n            cursor: pointer;\n        }\n    }\n\n    &_active {\n       display: block; \n    }\n}\n\n.scroll-blocked {\n    overflow: hidden;\n  }\n'],sourceRoot:""}]);const l=a},7192:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(4015),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap);"]),a.push([e.id,'.row{width:100%;padding:0 10px;display:flex;margin:0 auto;justify-content:space-between}.row .col-1{width:8.3333333333%}.row .col-2{width:16.6666666667%}.row .col-3{width:25%}.row .col-4{width:33.3333333333%}.row .col-5{width:41.6666666667%}.row .col-6{width:50%}.row .col-7{width:58.3333333333%}.row .col-8{width:66.6666666667%}.row .col-9{width:75%}.row .col-10{width:83.3333333333%}.row .col-11{width:91.6666666667%}.row .col-12{width:100%}@media screen and (min-width: 567px){.row .col-sm-1{width:8.3333333333%}.row .col-sm-2{width:16.6666666667%}.row .col-sm-3{width:25%}.row .col-sm-4{width:33.3333333333%}.row .col-sm-5{width:41.6666666667%}.row .col-sm-6{width:50%}.row .col-sm-7{width:58.3333333333%}.row .col-sm-8{width:66.6666666667%}.row .col-sm-9{width:75%}.row .col-sm-10{width:83.3333333333%}.row .col-sm-11{width:91.6666666667%}.row .col-sm-12{width:100%}}@media screen and (min-width: 768px){.row .col-md-1{width:8.3333333333%}.row .col-md-2{width:16.6666666667%}.row .col-md-3{width:25%}.row .col-md-4{width:33.3333333333%}.row .col-md-5{width:41.6666666667%}.row .col-md-6{width:50%}.row .col-md-7{width:58.3333333333%}.row .col-md-8{width:66.6666666667%}.row .col-md-9{width:75%}.row .col-md-10{width:83.3333333333%}.row .col-md-11{width:91.6666666667%}.row .col-md-12{width:100%}}@media screen and (min-width: 992px){.row .col-lg-1{width:8.3333333333%}.row .col-lg-2{width:16.6666666667%}.row .col-lg-3{width:25%}.row .col-lg-4{width:33.3333333333%}.row .col-lg-5{width:41.6666666667%}.row .col-lg-6{width:50%}.row .col-lg-7{width:58.3333333333%}.row .col-lg-8{width:66.6666666667%}.row .col-lg-9{width:75%}.row .col-lg-10{width:83.3333333333%}.row .col-lg-11{width:91.6666666667%}.row .col-lg-12{width:100%}}@media screen and (min-width: 1200px){.row .col-xl-1{width:8.3333333333%}.row .col-xl-2{width:16.6666666667%}.row .col-xl-3{width:25%}.row .col-xl-4{width:33.3333333333%}.row .col-xl-5{width:41.6666666667%}.row .col-xl-6{width:50%}.row .col-xl-7{width:58.3333333333%}.row .col-xl-8{width:66.6666666667%}.row .col-xl-9{width:75%}.row .col-xl-10{width:83.3333333333%}.row .col-xl-11{width:91.6666666667%}.row .col-xl-12{width:100%}}*{box-sizing:border-box;padding:0;margin:0}body{font-size:16px;font-family:"Oswald",sans-serif;color:#2d3436}main{padding-top:50px}@media screen and (min-width: 768px){main{padding-top:70px}}.button{border-radius:5px;border:1px solid #00cecb;box-shadow:2px 2px 10px #2d3436;text-align:center;background:#fab1a0;letter-spacing:.4rem;font-size:1.8rem;font-family:"Oswald",sans-serif;outline:none}@media screen and (min-width: 768px){.button{transition:background-color .2s}.button:hover{background-color:#f9a490;cursor:pointer}}.cards-list{list-style:none;display:flex;flex-wrap:wrap}.cards-list li{padding:5px 5px}.card{border:1px solid #2d3436;border-radius:5px;box-shadow:0px 5px 10px #5a57574f;transition:border .1s;background:#fff}.card_selected{border:3px solid #0984e3}.card_wrong{border:3px solid #d63031}.card_correct{border:3px solid #00b894}.card_grayedout .card__image{filter:grayscale(100%)}.card:hover{cursor:pointer}.card__image img{width:100%;height:100%}.card__name{text-align:center}',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/_grid.scss","webpack://./src/_mixins.scss","webpack://./src/_global.scss"],names:[],mappings:"AAAQ,KCCJ,UAAA,CACA,cAAA,CACA,YAAA,CACA,aAAA,CACA,6BAAA,CCYI,YACI,mBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,YACI,oBAAA,CADJ,YACI,oBAAA,CADJ,YACI,SAAA,CADJ,aACI,oBAAA,CADJ,aACI,oBAAA,CADJ,aACI,UAAA,CAhBJ,qCAeA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAbJ,qCAYA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAVJ,qCASA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CAPJ,sCAMA,eACI,mBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,eACI,oBAAA,CADJ,eACI,oBAAA,CADJ,eACI,SAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,oBAAA,CADJ,gBACI,UAAA,CAAA,CFIZ,EACE,qBAAA,CACA,SAAA,CACA,QAAA,CAGF,KACE,cAAA,CACA,+BAtBW,CAuBX,aAtBW,CAyBb,KACE,gBAAA,CE9BM,qCF6BR,KAII,gBAAA,CAAA,CGnCJ,QACI,iBAAA,CACA,wBAAA,CACA,+BAAA,CACA,iBAAA,CACA,kBHGY,CGFZ,oBAAA,CACA,gBAAA,CACA,+BAAA,CACA,YAAA,CDPI,qCCFR,QAYQ,+BAAA,CAEA,cACI,wBHNa,CGOb,cAAA,CAAA,CAQZ,YACI,eAAA,CACA,YAAA,CACA,cAAA,CAEA,eACI,eAAA,CAIR,MACI,wBAAA,CACA,iBAAA,CACA,iCAAA,CACA,qBAAA,CACA,eAAA,CAEA,eACI,wBAAA,CAGJ,YACI,wBAAA,CAGJ,cACI,wBAAA,CAGJ,6BACI,sBAAA,CAGJ,YACI,cAAA,CAIA,iBACI,UAAA,CACA,WAAA,CAIR,YACI,iBAAA",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;700&display=swap");\n\n@import "./_mixins.scss";\n@import "./_grid.scss";\n\n///////////////////////\n// VARIABLES\n///////////////////////\n$font-stack: "Oswald", sans-serif;\n$text-color: #2d3436;\n$text-color-selected: #636e72;\n$primary-color: #fab1a0;\n$primary-color-selected: #f9a490;\n$secondary-color: #00cecb;\n$selected-ingredient: #0984e3;\n$wrong-ingredient: #d63031;\n$correct-ingredient: #00b894;\n$container-max-width: 1240px;\n\n///////////////////////\n// GENERAL\n///////////////////////\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  font-size: 16px;\n  font-family: $font-stack;\n  color: $text-color;\n}\n\nmain {\n  padding-top: 50px;\n\n  @include breakpoint(md) {\n    padding-top: 70px;\n  }\n}\n\n@import "./_global.scss";\n',".row {\n    width: 100%;\n    padding: 0 10px;\n    display: flex;\n    margin: 0 auto;\n    justify-content: space-between;\n\n    @include grid-columns(col);\n    @include grid-colums-for(sm);\n    @include grid-colums-for(md);\n    @include grid-colums-for(lg);\n    @include grid-colums-for(xl);\n}\n","@mixin breakpoint($size) {\n    @if $size == sm {\n        @media screen and (min-width: 567px){@content;}\n    }\n    @else if $size == md {\n        @media screen and (min-width: 768px){@content;}\n    }\n    @else if $size == lg {\n        @media screen and (min-width: 992px){@content;}\n    }\n    @if $size == xl {\n        @media screen and (min-width: 1200px){@content;}\n    }\n}\n\n@mixin grid-columns($col-size) {\n    @for $i from 1 through 12 {\n        .#{$col-size}-#{$i} {\n            width: $i / 12 * 100%;\n        }\n    }\n}\n\n@mixin grid-colums-for($col-size) {\n    @include breakpoint($col-size) {\n        @include grid-columns(col-#{$col-size});\n    }\n}",'///////////////////////\n// COMPONENTS\n///////////////////////\n.button {\n    border-radius: 5px;\n    border: 1px solid #00cecb;\n    box-shadow: 2px 2px 10px #2d3436;\n    text-align: center;\n    background: $primary-color;\n    letter-spacing: 0.4rem;\n    font-size: 1.8rem;\n    font-family: "Oswald", sans-serif;\n    outline: none;\n\n    @include breakpoint(md) {\n        transition: background-color 0.2s;\n  \n        &:hover {\n            background-color: $primary-color-selected;\n            cursor: pointer;\n        }\n    }\n}\n\n///////////////////////\n// CARDS\n///////////////////////\n.cards-list {\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n        padding: 5px 5px;\n    }\n}\n\n.card {\n    border: 1px solid $text-color;\n    border-radius: 5px;\n    box-shadow: 0px 5px 10px #5a57574f;\n    transition: border 0.1s;\n    background: #fff;\n\n    &_selected {\n        border: 3px solid $selected-ingredient;\n    }\n\n    &_wrong {\n        border: 3px solid $wrong-ingredient;\n    }\n\n    &_correct {\n        border: 3px solid $correct-ingredient;\n    }\n\n    &_grayedout &__image {\n        filter: grayscale(100%);\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &__image {\n        img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    &__name {\n        text-align: center;\n    }\n}\n'],sourceRoot:""}]);const l=a},3645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&o[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),n.push(c))}},n}},4015:e=>{"use strict";function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),s="/*# ".concat(c," */"),A=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(A).concat([s]).join("\n")}return[i].join("\n")}},8679:(e,n,t)=>{"use strict";var r=t(9864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function c(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var s=Object.defineProperty,A=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,p=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(p){var o=f(t);o&&o!==p&&e(n,o,r)}var a=A(t);u&&(a=a.concat(u(t)));for(var l=c(n),h=c(t),C=0;C<a.length;++C){var m=a[C];if(!(i[m]||r&&r[m]||h&&h[m]||l&&l[m])){var w=d(t,m);try{s(n,m,w)}catch(e){}}}}return n}},7418:e=>{"use strict";var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,l,c=o(e),s=1;s<arguments.length;s++){for(var A in a=Object(arguments[s]))t.call(a,A)&&(c[A]=a[A]);if(n){l=n(a);for(var u=0;u<l.length;u++)r.call(a,l[u])&&(c[l[u]]=a[l[u]])}}return c}},2703:(e,n,t)=>{"use strict";var r=t(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:i,resetWarningCache:o};return t.PropTypes=t,t}},5697:(e,n,t)=>{e.exports=t(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,n,t)=>{"use strict";var r=t(7294),o=t(7418),i=t(3840);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=new Set,c={};function s(e,n){A(e,n),A(e+"Capture",n)}function A(e,n){for(c[e]=n,e=0;e<n.length;e++)l.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f=Object.prototype.hasOwnProperty,p={},h={};function C(e,n,t,r,o,i,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=i,this.removeEmptyString=a}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new C(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];m[n]=new C(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new C(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new C(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new C(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new C(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new C(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new C(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new C(e,5,!1,e.toLowerCase(),null,!1,!1)}));var w=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function y(e,n,t,r){var o=m.hasOwnProperty(n)?m[n]:null;(null!==o?0===o.type:!r&&2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1]))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(w,g);m[n]=new C(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(w,g);m[n]=new C(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(w,g);m[n]=new C(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new C(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new C("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new C(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,v=60103,x=60106,I=60107,B=60108,k=60114,S=60109,_=60110,D=60112,E=60113,J=60120,O=60115,$=60116,P=60121,R=60128,z=60129,N=60130,M=60131;if("function"==typeof Symbol&&Symbol.for){var T=Symbol.for;v=T("react.element"),x=T("react.portal"),I=T("react.fragment"),B=T("react.strict_mode"),k=T("react.profiler"),S=T("react.provider"),_=T("react.context"),D=T("react.forward_ref"),E=T("react.suspense"),J=T("react.suspense_list"),O=T("react.memo"),$=T("react.lazy"),P=T("react.block"),T("react.scope"),R=T("react.opaque.id"),z=T("react.debug_trace_mode"),N=T("react.offscreen"),M=T("react.legacy_hidden")}var j,F="function"==typeof Symbol&&Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}function Y(e){if(void 0===j)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);j=n&&n[1]||""}return"\n"+j+e}var U=!1;function q(e,n){if(!e||U)return"";U=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),i=r.stack.split("\n"),a=o.length-1,l=i.length-1;1<=a&&0<=l&&o[a]!==i[l];)l--;for(;1<=a&&0<=l;a--,l--)if(o[a]!==i[l]){if(1!==a||1!==l)do{if(a--,0>--l||o[a]!==i[l])return"\n"+o[a].replace(" at new "," at ")}while(1<=a&&0<=l);break}}}finally{U=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?Y(e):""}function G(e){switch(e.tag){case 5:return Y(e.type);case 16:return Y("Lazy");case 13:return Y("Suspense");case 19:return Y("SuspenseList");case 0:case 2:case 15:return q(e.type,!1);case 11:return q(e.type.render,!1);case 22:return q(e.type._render,!1);case 1:return q(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case I:return"Fragment";case x:return"Portal";case k:return"Profiler";case B:return"StrictMode";case E:return"Suspense";case J:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case S:return(e._context.displayName||"Context")+".Provider";case D:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case O:return Q(e.type);case P:return Q(e._render);case $:n=e._payload,e=e._init;try{return Q(e(n))}catch(e){}}return null}function W(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function V(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function H(e){e._valueTracker||(e._valueTracker=function(e){var n=V(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,i=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function K(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=V(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function X(e,n){var t=n.checked;return o({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function ee(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=W(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function ne(e,n){null!=(n=n.checked)&&y(e,"checked",n,!1)}function te(e,n){ne(e,n);var t=W(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?oe(e,n.type,t):n.hasOwnProperty("defaultValue")&&oe(e,n.type,W(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function re(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function oe(e,n,t){"number"===n&&Z(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function ie(e,n){return e=o({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function ae(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+W(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function le(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return o({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ce(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:W(t)}}function se(e,n){var t=W(n.value),r=W(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function Ae(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var ue="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function fe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?de(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var pe,he,Ce=(he=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((pe=pe||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=pe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return he(e,n)}))}:he);function me(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var we={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ge=["Webkit","ms","Moz","O"];function ye(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||we.hasOwnProperty(e)&&we[e]?(""+n).trim():n+"px"}function be(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=ye(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(we).forEach((function(e){ge.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),we[n]=we[e]}))}));var ve=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,n){if(n){if(ve[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62))}}function Ie(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Be(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,_e=null;function De(e){if(e=Zr(e)){if("function"!=typeof ke)throw Error(a(280));var n=e.stateNode;n&&(n=eo(n),ke(e.stateNode,e.type,n))}}function Ee(e){Se?_e?_e.push(e):_e=[e]:Se=e}function Je(){if(Se){var e=Se,n=_e;if(_e=Se=null,De(e),n)for(e=0;e<n.length;e++)De(n[e])}}function Oe(e,n){return e(n)}function $e(e,n,t,r,o){return e(n,t,r,o)}function Pe(){}var Re=Oe,ze=!1,Ne=!1;function Me(){null===Se&&null===_e||(Pe(),Je())}function Te(e,n){var t=e.stateNode;if(null===t)return null;var r=eo(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}var je=!1;if(u)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){je=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(he){je=!1}function Le(e,n,t,r,o,i,a,l,c){var s=Array.prototype.slice.call(arguments,3);try{n.apply(t,s)}catch(e){this.onError(e)}}var Ye=!1,Ue=null,qe=!1,Ge=null,Qe={onError:function(e){Ye=!0,Ue=e}};function We(e,n,t,r,o,i,a,l,c){Ye=!1,Ue=null,Le.apply(Qe,arguments)}function Ve(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function He(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ke(e){if(Ve(e)!==e)throw Error(a(188))}function Ze(e,n){for(var t=e.alternate;null!==n;){if(n===e||n===t)return!0;n=n.return}return!1}var Xe,en,nn,tn,rn=!1,on=[],an=null,ln=null,cn=null,sn=new Map,An=new Map,un=[],dn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function fn(e,n,t,r,o){return{blockedOn:e,domEventName:n,eventSystemFlags:16|t,nativeEvent:o,targetContainers:[r]}}function pn(e,n){switch(e){case"focusin":case"focusout":an=null;break;case"dragenter":case"dragleave":ln=null;break;case"mouseover":case"mouseout":cn=null;break;case"pointerover":case"pointerout":sn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":An.delete(n.pointerId)}}function hn(e,n,t,r,o,i){return null===e||e.nativeEvent!==i?(e=fn(n,t,r,o,i),null!==n&&null!==(n=Zr(n))&&en(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function Cn(e){var n=Kr(e.target);if(null!==n){var t=Ve(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=He(t)))return e.blockedOn=n,void tn(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){nn(t)}))}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function mn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Zn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=Zr(t))&&en(n),e.blockedOn=t,!1;n.shift()}return!0}function wn(e,n,t){mn(e)&&t.delete(n)}function gn(){for(rn=!1;0<on.length;){var e=on[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&Xe(e);break}for(var n=e.targetContainers;0<n.length;){var t=Zn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t){e.blockedOn=t;break}n.shift()}null===e.blockedOn&&on.shift()}null!==an&&mn(an)&&(an=null),null!==ln&&mn(ln)&&(ln=null),null!==cn&&mn(cn)&&(cn=null),sn.forEach(wn),An.forEach(wn)}function yn(e,n){e.blockedOn===n&&(e.blockedOn=null,rn||(rn=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,gn)))}function bn(e){function n(n){return yn(n,e)}if(0<on.length){yn(on[0],e);for(var t=1;t<on.length;t++){var r=on[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==an&&yn(an,e),null!==ln&&yn(ln,e),null!==cn&&yn(cn,e),sn.forEach(n),An.forEach(n),t=0;t<un.length;t++)(r=un[t]).blockedOn===e&&(r.blockedOn=null);for(;0<un.length&&null===(t=un[0]).blockedOn;)Cn(t),null===t.blockedOn&&un.shift()}function vn(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var xn={animationend:vn("Animation","AnimationEnd"),animationiteration:vn("Animation","AnimationIteration"),animationstart:vn("Animation","AnimationStart"),transitionend:vn("Transition","TransitionEnd")},In={},Bn={};function kn(e){if(In[e])return In[e];if(!xn[e])return e;var n,t=xn[e];for(n in t)if(t.hasOwnProperty(n)&&n in Bn)return In[e]=t[n];return e}u&&(Bn=document.createElement("div").style,"AnimationEvent"in window||(delete xn.animationend.animation,delete xn.animationiteration.animation,delete xn.animationstart.animation),"TransitionEvent"in window||delete xn.transitionend.transition);var Sn=kn("animationend"),_n=kn("animationiteration"),Dn=kn("animationstart"),En=kn("transitionend"),Jn=new Map,On=new Map,$n=["abort","abort",Sn,"animationEnd",_n,"animationIteration",Dn,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",En,"transitionEnd","waiting","waiting"];function Pn(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],o=e[t+1];o="on"+(o[0].toUpperCase()+o.slice(1)),On.set(r,n),Jn.set(r,o),s(o,[r])}}(0,i.unstable_now)();var Rn=8;function zn(e){if(0!=(1&e))return Rn=15,1;if(0!=(2&e))return Rn=14,2;if(0!=(4&e))return Rn=13,4;var n=24&e;return 0!==n?(Rn=12,n):0!=(32&e)?(Rn=11,32):0!=(n=192&e)?(Rn=10,n):0!=(256&e)?(Rn=9,256):0!=(n=3584&e)?(Rn=8,n):0!=(4096&e)?(Rn=7,4096):0!=(n=4186112&e)?(Rn=6,n):0!=(n=62914560&e)?(Rn=5,n):67108864&e?(Rn=4,67108864):0!=(134217728&e)?(Rn=3,134217728):0!=(n=805306368&e)?(Rn=2,n):0!=(1073741824&e)?(Rn=1,1073741824):(Rn=8,e)}function Nn(e,n){var t=e.pendingLanes;if(0===t)return Rn=0;var r=0,o=0,i=e.expiredLanes,a=e.suspendedLanes,l=e.pingedLanes;if(0!==i)r=i,o=Rn=15;else if(0!=(i=134217727&t)){var c=i&~a;0!==c?(r=zn(c),o=Rn):0!=(l&=i)&&(r=zn(l),o=Rn)}else 0!=(i=t&~a)?(r=zn(i),o=Rn):0!==l&&(r=zn(l),o=Rn);if(0===r)return 0;if(r=t&((0>(r=31-Yn(r))?0:1<<r)<<1)-1,0!==n&&n!==r&&0==(n&a)){if(zn(n),o<=Rn)return n;Rn=o}if(0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-Yn(n)),r|=e[t],n&=~o;return r}function Mn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Tn(e,n){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=jn(24&~n))?Tn(10,n):e;case 10:return 0===(e=jn(192&~n))?Tn(8,n):e;case 8:return 0===(e=jn(3584&~n))&&0===(e=jn(4186112&~n))&&(e=512),e;case 2:return 0===(n=jn(805306368&~n))&&(n=268435456),n}throw Error(a(358,e))}function jn(e){return e&-e}function Fn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function Ln(e,n,t){e.pendingLanes|=n;var r=n-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[n=31-Yn(n)]=t}var Yn=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Un(e)/qn|0)|0},Un=Math.log,qn=Math.LN2,Gn=i.unstable_UserBlockingPriority,Qn=i.unstable_runWithPriority,Wn=!0;function Vn(e,n,t,r){ze||Pe();var o=Kn,i=ze;ze=!0;try{$e(o,e,n,t,r)}finally{(ze=i)||Me()}}function Hn(e,n,t,r){Qn(Gn,Kn.bind(null,e,n,t,r))}function Kn(e,n,t,r){var o;if(Wn)if((o=0==(4&n))&&0<on.length&&-1<dn.indexOf(e))e=fn(null,e,n,t,r),on.push(e);else{var i=Zn(e,n,t,r);if(null===i)o&&pn(e,r);else{if(o){if(-1<dn.indexOf(e))return e=fn(i,e,n,t,r),void on.push(e);if(function(e,n,t,r,o){switch(n){case"focusin":return an=hn(an,e,n,t,r,o),!0;case"dragenter":return ln=hn(ln,e,n,t,r,o),!0;case"mouseover":return cn=hn(cn,e,n,t,r,o),!0;case"pointerover":var i=o.pointerId;return sn.set(i,hn(sn.get(i)||null,e,n,t,r,o)),!0;case"gotpointercapture":return i=o.pointerId,An.set(i,hn(An.get(i)||null,e,n,t,r,o)),!0}return!1}(i,e,n,t,r))return;pn(e,r)}Er(e,n,r,null,t)}}}function Zn(e,n,t,r){var o=Be(r);if(null!==(o=Kr(o))){var i=Ve(o);if(null===i)o=null;else{var a=i.tag;if(13===a){if(null!==(o=He(i)))return o;o=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;o=null}else i!==o&&(o=null)}}return Er(e,n,r,o,t),null}var Xn=null,et=null,nt=null;function tt(){if(nt)return nt;var e,n,t=et,r=t.length,o="value"in Xn?Xn.value:Xn.textContent,i=o.length;for(e=0;e<r&&t[e]===o[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===o[i-n];n++);return nt=o.slice(e,1<n?1-n:void 0)}function rt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function ot(){return!0}function it(){return!1}function at(e){function n(n,t,r,o,i){for(var a in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(a)&&(n=e[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ot:it,this.isPropagationStopped=it,this}return o(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ot)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ot)},persist:function(){},isPersistent:ot}),n}var lt,ct,st,At={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=at(At),dt=o({},At,{view:0,detail:0}),ft=at(dt),pt=o({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Bt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(lt=e.screenX-st.screenX,ct=e.screenY-st.screenY):ct=lt=0,st=e),lt)},movementY:function(e){return"movementY"in e?e.movementY:ct}}),ht=at(pt),Ct=at(o({},pt,{dataTransfer:0})),mt=at(o({},dt,{relatedTarget:0})),wt=at(o({},At,{animationName:0,elapsedTime:0,pseudoElement:0})),gt=at(o({},At,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),yt=at(o({},At,{data:0})),bt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},vt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function It(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=xt[e])&&!!n[e]}function Bt(){return It}var kt=at(o({},dt,{key:function(e){if(e.key){var n=bt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=rt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?vt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?rt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),St=at(o({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_t=at(o({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Bt})),Dt=at(o({},At,{propertyName:0,elapsedTime:0,pseudoElement:0})),Et=at(o({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Jt=[9,13,27,32],Ot=u&&"CompositionEvent"in window,$t=null;u&&"documentMode"in document&&($t=document.documentMode);var Pt=u&&"TextEvent"in window&&!$t,Rt=u&&(!Ot||$t&&8<$t&&11>=$t),zt=String.fromCharCode(32),Nt=!1;function Mt(e,n){switch(e){case"keyup":return-1!==Jt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Tt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jt=!1,Ft={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Lt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Ft[e.type]:"textarea"===n}function Yt(e,n,t,r){Ee(r),0<(n=Or(n,"onChange")).length&&(t=new ut("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Ut=null,qt=null;function Gt(e){Ir(e,0)}function Qt(e){if(K(Xr(e)))return e}function Wt(e,n){if("change"===e)return n}var Vt=!1;if(u){var Ht;if(u){var Kt="oninput"in document;if(!Kt){var Zt=document.createElement("div");Zt.setAttribute("oninput","return;"),Kt="function"==typeof Zt.oninput}Ht=Kt}else Ht=!1;Vt=Ht&&(!document.documentMode||9<document.documentMode)}function Xt(){Ut&&(Ut.detachEvent("onpropertychange",er),qt=Ut=null)}function er(e){if("value"===e.propertyName&&Qt(qt)){var n=[];if(Yt(n,qt,e,Be(e)),e=Gt,ze)e(n);else{ze=!0;try{Oe(e,n)}finally{ze=!1,Me()}}}}function nr(e,n,t){"focusin"===e?(Xt(),qt=t,(Ut=n).attachEvent("onpropertychange",er)):"focusout"===e&&Xt()}function tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qt(qt)}function rr(e,n){if("click"===e)return Qt(n)}function or(e,n){if("input"===e||"change"===e)return Qt(n)}var ir="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},ar=Object.prototype.hasOwnProperty;function lr(e,n){if(ir(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!ar.call(n,t[r])||!ir(e[t[r]],n[t[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function Ar(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?Ar(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function ur(){for(var e=window,n=Z();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=Z((e=n.contentWindow).document)}return n}function dr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var fr=u&&"documentMode"in document&&11>=document.documentMode,pr=null,hr=null,Cr=null,mr=!1;function wr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;mr||null==pr||pr!==Z(r)||(r="selectionStart"in(r=pr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Cr&&lr(Cr,r)||(Cr=r,0<(r=Or(hr,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=pr)))}Pn("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Pn("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Pn($n,2);for(var gr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),yr=0;yr<gr.length;yr++)On.set(gr[yr],0);A("onMouseEnter",["mouseout","mouseover"]),A("onMouseLeave",["mouseout","mouseover"]),A("onPointerEnter",["pointerout","pointerover"]),A("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var br="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),vr=new Set("cancel close invalid load scroll toggle".split(" ").concat(br));function xr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,i,l,c,s){if(We.apply(this,arguments),Ye){if(!Ye)throw Error(a(198));var A=Ue;Ye=!1,Ue=null,qe||(qe=!0,Ge=A)}}(r,n,void 0,e),e.currentTarget=null}function Ir(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var i=void 0;if(n)for(var a=r.length-1;0<=a;a--){var l=r[a],c=l.instance,s=l.currentTarget;if(l=l.listener,c!==i&&o.isPropagationStopped())break e;xr(o,l,s),i=c}else for(a=0;a<r.length;a++){if(c=(l=r[a]).instance,s=l.currentTarget,l=l.listener,c!==i&&o.isPropagationStopped())break e;xr(o,l,s),i=c}}}if(qe)throw e=Ge,qe=!1,Ge=null,e}function Br(e,n){var t=no(n),r=e+"__bubble";t.has(r)||(Dr(n,e,2,!1),t.add(r))}var kr="_reactListening"+Math.random().toString(36).slice(2);function Sr(e){e[kr]||(e[kr]=!0,l.forEach((function(n){vr.has(n)||_r(n,!1,e,null),_r(n,!0,e,null)})))}function _r(e,n,t,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=t;if("selectionchange"===e&&9!==t.nodeType&&(i=t.ownerDocument),null!==r&&!n&&vr.has(e)){if("scroll"!==e)return;o|=2,i=r}var a=no(i),l=e+"__"+(n?"capture":"bubble");a.has(l)||(n&&(o|=4),Dr(i,e,o,n),a.add(l))}function Dr(e,n,t,r){var o=On.get(n);switch(void 0===o?2:o){case 0:o=Vn;break;case 1:o=Hn;break;default:o=Kn}t=o.bind(null,n,t,e),o=void 0,!je||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function Er(e,n,t,r,o){var i=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===a)for(a=r.return;null!==a;){var c=a.tag;if((3===c||4===c)&&((c=a.stateNode.containerInfo)===o||8===c.nodeType&&c.parentNode===o))return;a=a.return}for(;null!==l;){if(null===(a=Kr(l)))return;if(5===(c=a.tag)||6===c){r=i=a;continue e}l=l.parentNode}}r=r.return}!function(e,n,t){if(Ne)return e();Ne=!0;try{Re(e,n,t)}finally{Ne=!1,Me()}}((function(){var r=i,o=Be(t),a=[];e:{var l=Jn.get(e);if(void 0!==l){var c=ut,s=e;switch(e){case"keypress":if(0===rt(t))break e;case"keydown":case"keyup":c=kt;break;case"focusin":s="focus",c=mt;break;case"focusout":s="blur",c=mt;break;case"beforeblur":case"afterblur":c=mt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=Ct;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=_t;break;case Sn:case _n:case Dn:c=wt;break;case En:c=Dt;break;case"scroll":c=ft;break;case"wheel":c=Et;break;case"copy":case"cut":case"paste":c=gt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=St}var A=0!=(4&n),u=!A&&"scroll"===e,d=A?null!==l?l+"Capture":null:l;A=[];for(var f,p=r;null!==p;){var h=(f=p).stateNode;if(5===f.tag&&null!==h&&(f=h,null!==d&&null!=(h=Te(p,d))&&A.push(Jr(p,h,f))),u)break;p=p.return}0<A.length&&(l=new c(l,s,null,t,o),a.push({event:l,listeners:A}))}}if(0==(7&n)){if(c="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&n)||!(s=t.relatedTarget||t.fromElement)||!Kr(s)&&!s[Vr])&&(c||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,c?(c=r,null!==(s=(s=t.relatedTarget||t.toElement)?Kr(s):null)&&(s!==(u=Ve(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(c=null,s=r),c!==s)){if(A=ht,h="onMouseLeave",d="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(A=St,h="onPointerLeave",d="onPointerEnter",p="pointer"),u=null==c?l:Xr(c),f=null==s?l:Xr(s),(l=new A(h,p+"leave",c,t,o)).target=u,l.relatedTarget=f,h=null,Kr(o)===r&&((A=new A(d,p+"enter",s,t,o)).target=f,A.relatedTarget=u,h=A),u=h,c&&s)e:{for(d=s,p=0,f=A=c;f;f=$r(f))p++;for(f=0,h=d;h;h=$r(h))f++;for(;0<p-f;)A=$r(A),p--;for(;0<f-p;)d=$r(d),f--;for(;p--;){if(A===d||null!==d&&A===d.alternate)break e;A=$r(A),d=$r(d)}A=null}else A=null;null!==c&&Pr(a,l,c,A,!1),null!==s&&null!==u&&Pr(a,u,s,A,!0)}if("select"===(c=(l=r?Xr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===c&&"file"===l.type)var C=Wt;else if(Lt(l))if(Vt)C=or;else{C=tr;var m=nr}else(c=l.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(C=rr);switch(C&&(C=C(e,r))?Yt(a,C,t,o):(m&&m(e,l,r),"focusout"===e&&(m=l._wrapperState)&&m.controlled&&"number"===l.type&&oe(l,"number",l.value)),m=r?Xr(r):window,e){case"focusin":(Lt(m)||"true"===m.contentEditable)&&(pr=m,hr=r,Cr=null);break;case"focusout":Cr=hr=pr=null;break;case"mousedown":mr=!0;break;case"contextmenu":case"mouseup":case"dragend":mr=!1,wr(a,t,o);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":wr(a,t,o)}var w;if(Ot)e:{switch(e){case"compositionstart":var g="onCompositionStart";break e;case"compositionend":g="onCompositionEnd";break e;case"compositionupdate":g="onCompositionUpdate";break e}g=void 0}else jt?Mt(e,t)&&(g="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(g="onCompositionStart");g&&(Rt&&"ko"!==t.locale&&(jt||"onCompositionStart"!==g?"onCompositionEnd"===g&&jt&&(w=tt()):(et="value"in(Xn=o)?Xn.value:Xn.textContent,jt=!0)),0<(m=Or(r,g)).length&&(g=new yt(g,e,null,t,o),a.push({event:g,listeners:m}),(w||null!==(w=Tt(t)))&&(g.data=w))),(w=Pt?function(e,n){switch(e){case"compositionend":return Tt(n);case"keypress":return 32!==n.which?null:(Nt=!0,zt);case"textInput":return(e=n.data)===zt&&Nt?null:e;default:return null}}(e,t):function(e,n){if(jt)return"compositionend"===e||!Ot&&Mt(e,n)?(e=tt(),nt=et=Xn=null,jt=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Rt&&"ko"!==n.locale?null:n.data;default:return null}}(e,t))&&0<(r=Or(r,"onBeforeInput")).length&&(o=new yt("onBeforeInput","beforeinput",null,t,o),a.push({event:o,listeners:r}),o.data=w)}Ir(a,n)}))}function Jr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Or(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,i=o.stateNode;5===o.tag&&null!==i&&(o=i,null!=(i=Te(e,t))&&r.unshift(Jr(e,i,o)),null!=(i=Te(e,n))&&r.push(Jr(e,i,o))),e=e.return}return r}function $r(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Pr(e,n,t,r,o){for(var i=n._reactName,a=[];null!==t&&t!==r;){var l=t,c=l.alternate,s=l.stateNode;if(null!==c&&c===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(c=Te(t,i))&&a.unshift(Jr(t,c,l)):o||null!=(c=Te(t,i))&&a.push(Jr(t,c,l))),t=t.return}0!==a.length&&e.push({event:n,listeners:a})}function Rr(){}var zr=null,Nr=null;function Mr(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Tr(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var jr="function"==typeof setTimeout?setTimeout:void 0,Fr="function"==typeof clearTimeout?clearTimeout:void 0;function Lr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Yr(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Ur(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var qr=0,Gr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+Gr,Wr="__reactProps$"+Gr,Vr="__reactContainer$"+Gr,Hr="__reactEvents$"+Gr;function Kr(e){var n=e[Qr];if(n)return n;for(var t=e.parentNode;t;){if(n=t[Vr]||t[Qr]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Ur(e);null!==e;){if(t=e[Qr])return t;e=Ur(e)}return n}t=(e=t).parentNode}return null}function Zr(e){return!(e=e[Qr]||e[Vr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function eo(e){return e[Wr]||null}function no(e){var n=e[Hr];return void 0===n&&(n=e[Hr]=new Set),n}var to=[],ro=-1;function oo(e){return{current:e}}function io(e){0>ro||(e.current=to[ro],to[ro]=null,ro--)}function ao(e,n){ro++,to[ro]=e.current,e.current=n}var lo={},co=oo(lo),so=oo(!1),Ao=lo;function uo(e,n){var t=e.type.contextTypes;if(!t)return lo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in t)i[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=i),i}function fo(e){return null!=e.childContextTypes}function po(){io(so),io(co)}function ho(e,n,t){if(co.current!==lo)throw Error(a(168));ao(co,n),ao(so,t)}function Co(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,Q(n)||"Unknown",i));return o({},t,r)}function mo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||lo,Ao=co.current,ao(co,e),ao(so,so.current),!0}function wo(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=Co(e,n,Ao),r.__reactInternalMemoizedMergedChildContext=e,io(so),io(co),ao(co,e)):io(so),ao(so,t)}var go=null,yo=null,bo=i.unstable_runWithPriority,vo=i.unstable_scheduleCallback,xo=i.unstable_cancelCallback,Io=i.unstable_shouldYield,Bo=i.unstable_requestPaint,ko=i.unstable_now,So=i.unstable_getCurrentPriorityLevel,_o=i.unstable_ImmediatePriority,Do=i.unstable_UserBlockingPriority,Eo=i.unstable_NormalPriority,Jo=i.unstable_LowPriority,Oo=i.unstable_IdlePriority,$o={},Po=void 0!==Bo?Bo:function(){},Ro=null,zo=null,No=!1,Mo=ko(),To=1e4>Mo?ko:function(){return ko()-Mo};function jo(){switch(So()){case _o:return 99;case Do:return 98;case Eo:return 97;case Jo:return 96;case Oo:return 95;default:throw Error(a(332))}}function Fo(e){switch(e){case 99:return _o;case 98:return Do;case 97:return Eo;case 96:return Jo;case 95:return Oo;default:throw Error(a(332))}}function Lo(e,n){return e=Fo(e),bo(e,n)}function Yo(e,n,t){return e=Fo(e),vo(e,n,t)}function Uo(){if(null!==zo){var e=zo;zo=null,xo(e)}qo()}function qo(){if(!No&&null!==Ro){No=!0;var e=0;try{var n=Ro;Lo(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),Ro=null}catch(n){throw null!==Ro&&(Ro=Ro.slice(e+1)),vo(_o,Uo),n}finally{No=!1}}}var Go=b.ReactCurrentBatchConfig;function Qo(e,n){if(e&&e.defaultProps){for(var t in n=o({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var Wo=oo(null),Vo=null,Ho=null,Ko=null;function Zo(){Ko=Ho=Vo=null}function Xo(e){var n=Wo.current;io(Wo),e.type._context._currentValue=n}function ei(e,n){for(;null!==e;){var t=e.alternate;if((e.childLanes&n)===n){if(null===t||(t.childLanes&n)===n)break;t.childLanes|=n}else e.childLanes|=n,null!==t&&(t.childLanes|=n);e=e.return}}function ni(e,n){Vo=e,Ko=Ho=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(Oa=!0),e.firstContext=null)}function ti(e,n){if(Ko!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(Ko=e,n=1073741823),n={context:e,observedBits:n,next:null},null===Ho){if(null===Vo)throw Error(a(308));Ho=n,Vo.dependencies={lanes:0,firstContext:n,responders:null}}else Ho=Ho.next=n;return e._currentValue}var ri=!1;function oi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ii(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ai(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function li(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function ci(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,i=null;if(null!==(t=t.firstBaseUpdate)){do{var a={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===i?o=i=a:i=i.next=a,t=t.next}while(null!==t);null===i?o=i=n:i=i.next=n}else o=i=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function si(e,n,t,r){var i=e.updateQueue;ri=!1;var a=i.firstBaseUpdate,l=i.lastBaseUpdate,c=i.shared.pending;if(null!==c){i.shared.pending=null;var s=c,A=s.next;s.next=null,null===l?a=A:l.next=A,l=s;var u=e.alternate;if(null!==u){var d=(u=u.updateQueue).lastBaseUpdate;d!==l&&(null===d?u.firstBaseUpdate=A:d.next=A,u.lastBaseUpdate=s)}}if(null!==a){for(d=i.baseState,l=0,u=A=s=null;;){c=a.lane;var f=a.eventTime;if((r&c)===c){null!==u&&(u=u.next={eventTime:f,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=e,h=a;switch(c=n,f=t,h.tag){case 1:if("function"==typeof(p=h.payload)){d=p.call(f,d,c);break e}d=p;break e;case 3:p.flags=-4097&p.flags|64;case 0:if(null==(c="function"==typeof(p=h.payload)?p.call(f,d,c):p))break e;d=o({},d,c);break e;case 2:ri=!0}}null!==a.callback&&(e.flags|=32,null===(c=i.effects)?i.effects=[a]:c.push(a))}else f={eventTime:f,lane:c,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===u?(A=u=f,s=d):u=u.next=f,l|=c;if(null===(a=a.next)){if(null===(c=i.shared.pending))break;a=c.next,c.next=null,i.lastBaseUpdate=c,i.shared.pending=null}}null===u&&(s=d),i.baseState=s,i.firstBaseUpdate=A,i.lastBaseUpdate=u,Pl|=l,e.lanes=l,e.memoizedState=d}}function Ai(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var ui=(new r.Component).refs;function di(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:o({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var fi={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ic(),o=ac(e),i=ai(r,o);i.payload=n,null!=t&&(i.callback=t),li(e,i),lc(e,o,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ic(),o=ac(e),i=ai(r,o);i.tag=1,i.payload=n,null!=t&&(i.callback=t),li(e,i),lc(e,o,r)},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ic(),r=ac(e),o=ai(t,r);o.tag=2,null!=n&&(o.callback=n),li(e,o),lc(e,r,t)}};function pi(e,n,t,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(n.prototype&&n.prototype.isPureReactComponent&&lr(t,r)&&lr(o,i))}function hi(e,n,t){var r=!1,o=lo,i=n.contextType;return"object"==typeof i&&null!==i?i=ti(i):(o=fo(n)?Ao:co.current,i=(r=null!=(r=n.contextTypes))?uo(e,o):lo),n=new n(t,i),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=fi,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),n}function Ci(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&fi.enqueueReplaceState(n,n.state,null)}function mi(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=ui,oi(e);var i=n.contextType;"object"==typeof i&&null!==i?o.context=ti(i):(i=fo(n)?Ao:co.current,o.context=uo(e,i)),si(e,t,o,r),o.state=e.memoizedState,"function"==typeof(i=n.getDerivedStateFromProps)&&(di(e,n,i,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&fi.enqueueReplaceState(o,o.state,null),si(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var wi=Array.isArray;function gi(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:((n=function(e){var n=r.refs;n===ui&&(n=r.refs={}),null===e?delete n[o]:n[o]=e})._stringRef=o,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function yi(e,n){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function bi(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.flags=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Nc(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags=2,t):r:(n.flags=2,t):t}function l(n){return e&&null===n.alternate&&(n.flags=2),n}function c(e,n,t,r){return null===n||6!==n.tag?((n=Fc(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function s(e,n,t,r){return null!==n&&n.elementType===t.type?((r=o(n,t.props)).ref=gi(e,n,t),r.return=e,r):((r=Mc(t.type,t.key,t.props,null,e.mode,r)).ref=gi(e,n,t),r.return=e,r)}function A(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Lc(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function u(e,n,t,r,i){return null===n||7!==n.tag?((n=Tc(t,e.mode,r,i)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=Fc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case v:return(t=Mc(n.type,n.key,n.props,null,e.mode,t)).ref=gi(e,null,n),t.return=e,t;case x:return(n=Lc(n,e.mode,t)).return=e,n}if(wi(n)||L(n))return(n=Tc(n,e.mode,t,null)).return=e,n;yi(e,n)}return null}function f(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==o?null:c(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case v:return t.key===o?t.type===I?u(e,n,t.props.children,r,o):s(e,n,t,r):null;case x:return t.key===o?A(e,n,t,r):null}if(wi(t)||L(t))return null!==o?null:u(e,n,t,r,null);yi(e,t)}return null}function p(e,n,t,r,o){if("string"==typeof r||"number"==typeof r)return c(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case v:return e=e.get(null===r.key?t:r.key)||null,r.type===I?u(n,e,r.props.children,o,r.key):s(n,e,r,o);case x:return A(n,e=e.get(null===r.key?t:r.key)||null,r,o)}if(wi(r)||L(r))return u(n,e=e.get(t)||null,r,o,null);yi(n,r)}return null}function h(o,a,l,c){for(var s=null,A=null,u=a,h=a=0,C=null;null!==u&&h<l.length;h++){u.index>h?(C=u,u=null):C=u.sibling;var m=f(o,u,l[h],c);if(null===m){null===u&&(u=C);break}e&&u&&null===m.alternate&&n(o,u),a=i(m,a,h),null===A?s=m:A.sibling=m,A=m,u=C}if(h===l.length)return t(o,u),s;if(null===u){for(;h<l.length;h++)null!==(u=d(o,l[h],c))&&(a=i(u,a,h),null===A?s=u:A.sibling=u,A=u);return s}for(u=r(o,u);h<l.length;h++)null!==(C=p(u,o,h,l[h],c))&&(e&&null!==C.alternate&&u.delete(null===C.key?h:C.key),a=i(C,a,h),null===A?s=C:A.sibling=C,A=C);return e&&u.forEach((function(e){return n(o,e)})),s}function C(o,l,c,s){var A=L(c);if("function"!=typeof A)throw Error(a(150));if(null==(c=A.call(c)))throw Error(a(151));for(var u=A=null,h=l,C=l=0,m=null,w=c.next();null!==h&&!w.done;C++,w=c.next()){h.index>C?(m=h,h=null):m=h.sibling;var g=f(o,h,w.value,s);if(null===g){null===h&&(h=m);break}e&&h&&null===g.alternate&&n(o,h),l=i(g,l,C),null===u?A=g:u.sibling=g,u=g,h=m}if(w.done)return t(o,h),A;if(null===h){for(;!w.done;C++,w=c.next())null!==(w=d(o,w.value,s))&&(l=i(w,l,C),null===u?A=w:u.sibling=w,u=w);return A}for(h=r(o,h);!w.done;C++,w=c.next())null!==(w=p(h,o,C,w.value,s))&&(e&&null!==w.alternate&&h.delete(null===w.key?C:w.key),l=i(w,l,C),null===u?A=w:u.sibling=w,u=w);return e&&h.forEach((function(e){return n(o,e)})),A}return function(e,r,i,c){var s="object"==typeof i&&null!==i&&i.type===I&&null===i.key;s&&(i=i.props.children);var A="object"==typeof i&&null!==i;if(A)switch(i.$$typeof){case v:e:{for(A=i.key,s=r;null!==s;){if(s.key===A){switch(s.tag){case 7:if(i.type===I){t(e,s.sibling),(r=o(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){t(e,s.sibling),(r=o(s,i.props)).ref=gi(e,s,i),r.return=e,e=r;break e}}t(e,s);break}n(e,s),s=s.sibling}i.type===I?((r=Tc(i.props.children,e.mode,c,i.key)).return=e,e=r):((c=Mc(i.type,i.key,i.props,null,e.mode,c)).ref=gi(e,r,i),c.return=e,e=c)}return l(e);case x:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){t(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=Lc(i,e.mode,c)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(t(e,r.sibling),(r=o(r,i)).return=e,e=r):(t(e,r),(r=Fc(i,e.mode,c)).return=e,e=r),l(e);if(wi(i))return h(e,r,i,c);if(L(i))return C(e,r,i,c);if(A&&yi(e,i),void 0===i&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,Q(e.type)||"Component"))}return t(e,r)}}var vi=bi(!0),xi=bi(!1),Ii={},Bi=oo(Ii),ki=oo(Ii),Si=oo(Ii);function _i(e){if(e===Ii)throw Error(a(174));return e}function Di(e,n){switch(ao(Si,n),ao(ki,e),ao(Bi,Ii),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:fe(null,"");break;default:n=fe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}io(Bi),ao(Bi,n)}function Ei(){io(Bi),io(ki),io(Si)}function Ji(e){_i(Si.current);var n=_i(Bi.current),t=fe(n,e.type);n!==t&&(ao(ki,e),ao(Bi,t))}function Oi(e){ki.current===e&&(io(Bi),io(ki))}var $i=oo(0);function Pi(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Ri=null,zi=null,Ni=!1;function Mi(e,n){var t=Rc(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Ti(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);case 13:default:return!1}}function ji(e){if(Ni){var n=zi;if(n){var t=n;if(!Ti(e,n)){if(!(n=Yr(t.nextSibling))||!Ti(e,n))return e.flags=-1025&e.flags|2,Ni=!1,void(Ri=e);Mi(Ri,t)}Ri=e,zi=Yr(n.firstChild)}else e.flags=-1025&e.flags|2,Ni=!1,Ri=e}}function Fi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ri=e}function Li(e){if(e!==Ri)return!1;if(!Ni)return Fi(e),Ni=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!Tr(n,e.memoizedProps))for(n=zi;n;)Mi(e,n),n=Yr(n.nextSibling);if(Fi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){zi=Yr(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}zi=null}}else zi=Ri?Yr(e.stateNode.nextSibling):null;return!0}function Yi(){zi=Ri=null,Ni=!1}var Ui=[];function qi(){for(var e=0;e<Ui.length;e++)Ui[e]._workInProgressVersionPrimary=null;Ui.length=0}var Gi=b.ReactCurrentDispatcher,Qi=b.ReactCurrentBatchConfig,Wi=0,Vi=null,Hi=null,Ki=null,Zi=!1,Xi=!1;function ea(){throw Error(a(321))}function na(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ir(e[t],n[t]))return!1;return!0}function ta(e,n,t,r,o,i){if(Wi=i,Vi=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,Gi.current=null===e||null===e.memoizedState?_a:Da,e=t(r,o),Xi){i=0;do{if(Xi=!1,!(25>i))throw Error(a(301));i+=1,Ki=Hi=null,n.updateQueue=null,Gi.current=Ea,e=t(r,o)}while(Xi)}if(Gi.current=Sa,n=null!==Hi&&null!==Hi.next,Wi=0,Ki=Hi=Vi=null,Zi=!1,n)throw Error(a(300));return e}function ra(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?Vi.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function oa(){if(null===Hi){var e=Vi.alternate;e=null!==e?e.memoizedState:null}else e=Hi.next;var n=null===Ki?Vi.memoizedState:Ki.next;if(null!==n)Ki=n,Hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Hi=e).memoizedState,baseState:Hi.baseState,baseQueue:Hi.baseQueue,queue:Hi.queue,next:null},null===Ki?Vi.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function ia(e,n){return"function"==typeof n?n(e):n}function aa(e){var n=oa(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=Hi,o=r.baseQueue,i=t.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,t.pending=null}if(null!==o){o=o.next,r=r.baseState;var c=l=i=null,s=o;do{var A=s.lane;if((Wi&A)===A)null!==c&&(c=c.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var u={lane:A,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===c?(l=c=u,i=r):c=c.next=u,Vi.lanes|=A,Pl|=A}s=s.next}while(null!==s&&s!==o);null===c?i=r:c.next=l,ir(r,n.memoizedState)||(Oa=!0),n.memoizedState=r,n.baseState=i,n.baseQueue=c,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function la(e){var n=oa(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,i=n.memoizedState;if(null!==o){t.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);ir(i,n.memoizedState)||(Oa=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function ca(e,n,t){var r=n._getVersion;r=r(n._source);var o=n._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Wi&e)===e)&&(n._workInProgressVersionPrimary=r,Ui.push(n))),e)return t(n._source);throw Ui.push(n),Error(a(350))}function sa(e,n,t,r){var o=kl;if(null===o)throw Error(a(349));var i=n._getVersion,l=i(n._source),c=Gi.current,s=c.useState((function(){return ca(o,n,t)})),A=s[1],u=s[0];s=Ki;var d=e.memoizedState,f=d.refs,p=f.getSnapshot,h=d.source;d=d.subscribe;var C=Vi;return e.memoizedState={refs:f,source:n,subscribe:r},c.useEffect((function(){f.getSnapshot=t,f.setSnapshot=A;var e=i(n._source);if(!ir(l,e)){e=t(n._source),ir(u,e)||(A(e),e=ac(C),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,a=e;0<a;){var c=31-Yn(a),s=1<<c;r[c]|=e,a&=~s}}}),[t,n,r]),c.useEffect((function(){return r(n._source,(function(){var e=f.getSnapshot,t=f.setSnapshot;try{t(e(n._source));var r=ac(C);o.mutableReadLanes|=r&o.pendingLanes}catch(e){t((function(){throw e}))}}))}),[n,r]),ir(p,t)&&ir(h,n)&&ir(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ia,lastRenderedState:u}).dispatch=A=ka.bind(null,Vi,e),s.queue=e,s.baseQueue=null,u=ca(o,n,t),s.memoizedState=s.baseState=u),u}function Aa(e,n,t){return sa(oa(),e,n,t)}function ua(e){var n=ra();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:ia,lastRenderedState:e}).dispatch=ka.bind(null,Vi,e),[n.memoizedState,e]}function da(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Vi.updateQueue)?(n={lastEffect:null},Vi.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function fa(e){return e={current:e},ra().memoizedState=e}function pa(){return oa().memoizedState}function ha(e,n,t,r){var o=ra();Vi.flags|=e,o.memoizedState=da(1|n,t,void 0,void 0===r?null:r)}function Ca(e,n,t,r){var o=oa();r=void 0===r?null:r;var i=void 0;if(null!==Hi){var a=Hi.memoizedState;if(i=a.destroy,null!==r&&na(r,a.deps))return void da(n,t,i,r)}Vi.flags|=e,o.memoizedState=da(1|n,t,i,r)}function ma(e,n){return ha(516,4,e,n)}function wa(e,n){return Ca(516,4,e,n)}function ga(e,n){return Ca(4,2,e,n)}function ya(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function ba(e,n,t){return t=null!=t?t.concat([e]):null,Ca(4,2,ya.bind(null,n,e),t)}function va(){}function xa(e,n){var t=oa();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&na(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Ia(e,n){var t=oa();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&na(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Ba(e,n){var t=jo();Lo(98>t?98:t,(function(){e(!0)})),Lo(97<t?97:t,(function(){var t=Qi.transition;Qi.transition=1;try{e(!1),n()}finally{Qi.transition=t}}))}function ka(e,n,t){var r=ic(),o=ac(e),i={lane:o,action:t,eagerReducer:null,eagerState:null,next:null},a=n.pending;if(null===a?i.next=i:(i.next=a.next,a.next=i),n.pending=i,a=e.alternate,e===Vi||null!==a&&a===Vi)Xi=Zi=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var l=n.lastRenderedState,c=a(l,t);if(i.eagerReducer=a,i.eagerState=c,ir(c,l))return}catch(e){}lc(e,o,r)}}var Sa={readContext:ti,useCallback:ea,useContext:ea,useEffect:ea,useImperativeHandle:ea,useLayoutEffect:ea,useMemo:ea,useReducer:ea,useRef:ea,useState:ea,useDebugValue:ea,useDeferredValue:ea,useTransition:ea,useMutableSource:ea,useOpaqueIdentifier:ea,unstable_isNewReconciler:!1},_a={readContext:ti,useCallback:function(e,n){return ra().memoizedState=[e,void 0===n?null:n],e},useContext:ti,useEffect:ma,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,ha(4,2,ya.bind(null,n,e),t)},useLayoutEffect:function(e,n){return ha(4,2,e,n)},useMemo:function(e,n){var t=ra();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ra();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=ka.bind(null,Vi,e),[r.memoizedState,e]},useRef:fa,useState:ua,useDebugValue:va,useDeferredValue:function(e){var n=ua(e),t=n[0],r=n[1];return ma((function(){var n=Qi.transition;Qi.transition=1;try{r(e)}finally{Qi.transition=n}}),[e]),t},useTransition:function(){var e=ua(!1),n=e[0];return fa(e=Ba.bind(null,e[1])),[e,n]},useMutableSource:function(e,n,t){var r=ra();return r.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:e,subscribe:t},sa(r,e,n,t)},useOpaqueIdentifier:function(){if(Ni){var e=!1,n=function(e){return{$$typeof:R,toString:e,valueOf:e}}((function(){throw e||(e=!0,t("r:"+(qr++).toString(36))),Error(a(355))})),t=ua(n)[1];return 0==(2&Vi.mode)&&(Vi.flags|=516,da(5,(function(){t("r:"+(qr++).toString(36))}),void 0,null)),n}return ua(n="r:"+(qr++).toString(36)),n},unstable_isNewReconciler:!1},Da={readContext:ti,useCallback:xa,useContext:ti,useEffect:wa,useImperativeHandle:ba,useLayoutEffect:ga,useMemo:Ia,useReducer:aa,useRef:pa,useState:function(){return aa(ia)},useDebugValue:va,useDeferredValue:function(e){var n=aa(ia),t=n[0],r=n[1];return wa((function(){var n=Qi.transition;Qi.transition=1;try{r(e)}finally{Qi.transition=n}}),[e]),t},useTransition:function(){var e=aa(ia)[0];return[pa().current,e]},useMutableSource:Aa,useOpaqueIdentifier:function(){return aa(ia)[0]},unstable_isNewReconciler:!1},Ea={readContext:ti,useCallback:xa,useContext:ti,useEffect:wa,useImperativeHandle:ba,useLayoutEffect:ga,useMemo:Ia,useReducer:la,useRef:pa,useState:function(){return la(ia)},useDebugValue:va,useDeferredValue:function(e){var n=la(ia),t=n[0],r=n[1];return wa((function(){var n=Qi.transition;Qi.transition=1;try{r(e)}finally{Qi.transition=n}}),[e]),t},useTransition:function(){var e=la(ia)[0];return[pa().current,e]},useMutableSource:Aa,useOpaqueIdentifier:function(){return la(ia)[0]},unstable_isNewReconciler:!1},Ja=b.ReactCurrentOwner,Oa=!1;function $a(e,n,t,r){n.child=null===e?xi(n,null,t,r):vi(n,e.child,t,r)}function Pa(e,n,t,r,o){t=t.render;var i=n.ref;return ni(n,o),r=ta(e,n,t,r,i,o),null===e||Oa?(n.flags|=1,$a(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~o,Za(e,n,o))}function Ra(e,n,t,r,o,i){if(null===e){var a=t.type;return"function"!=typeof a||zc(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Mc(t.type,null,r,n,n.mode,i)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,za(e,n,a,r,o,i))}return a=e.child,0==(o&i)&&(o=a.memoizedProps,(t=null!==(t=t.compare)?t:lr)(o,r)&&e.ref===n.ref)?Za(e,n,i):(n.flags|=1,(e=Nc(a,r)).ref=n.ref,e.return=n,n.child=e)}function za(e,n,t,r,o,i){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===n.ref){if(Oa=!1,0==(i&o))return n.lanes=e.lanes,Za(e,n,i);0!=(16384&e.flags)&&(Oa=!0)}return Ta(e,n,t,r,i)}function Na(e,n,t){var r=n.pendingProps,o=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&n.mode))n.memoizedState={baseLanes:0},fc(0,t);else{if(0==(1073741824&t))return e=null!==i?i.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e},fc(0,e),null;n.memoizedState={baseLanes:0},fc(0,null!==i?i.baseLanes:t)}else null!==i?(r=i.baseLanes|t,n.memoizedState=null):r=t,fc(0,r);return $a(e,n,o,t),n.child}function Ma(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=128)}function Ta(e,n,t,r,o){var i=fo(t)?Ao:co.current;return i=uo(n,i),ni(n,o),t=ta(e,n,t,r,i,o),null===e||Oa?(n.flags|=1,$a(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-517,e.lanes&=~o,Za(e,n,o))}function ja(e,n,t,r,o){if(fo(t)){var i=!0;mo(n)}else i=!1;if(ni(n,o),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),hi(n,t,r),mi(n,t,r,o),r=!0;else if(null===e){var a=n.stateNode,l=n.memoizedProps;a.props=l;var c=a.context,s=t.contextType;s="object"==typeof s&&null!==s?ti(s):uo(n,s=fo(t)?Ao:co.current);var A=t.getDerivedStateFromProps,u="function"==typeof A||"function"==typeof a.getSnapshotBeforeUpdate;u||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==s)&&Ci(n,a,r,s),ri=!1;var d=n.memoizedState;a.state=d,si(n,r,a,o),c=n.memoizedState,l!==r||d!==c||so.current||ri?("function"==typeof A&&(di(n,t,A,r),c=n.memoizedState),(l=ri||pi(n,t,l,r,d,c,s))?(u||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.flags|=4)):("function"==typeof a.componentDidMount&&(n.flags|=4),n.memoizedProps=r,n.memoizedState=c),a.props=r,a.state=c,a.context=s,r=l):("function"==typeof a.componentDidMount&&(n.flags|=4),r=!1)}else{a=n.stateNode,ii(e,n),l=n.memoizedProps,s=n.type===n.elementType?l:Qo(n.type,l),a.props=s,u=n.pendingProps,d=a.context,c="object"==typeof(c=t.contextType)&&null!==c?ti(c):uo(n,c=fo(t)?Ao:co.current);var f=t.getDerivedStateFromProps;(A="function"==typeof f||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==u||d!==c)&&Ci(n,a,r,c),ri=!1,d=n.memoizedState,a.state=d,si(n,r,a,o);var p=n.memoizedState;l!==u||d!==p||so.current||ri?("function"==typeof f&&(di(n,t,f,r),p=n.memoizedState),(s=ri||pi(n,t,s,r,d,p,c))?(A||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(n.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.flags|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),n.memoizedProps=r,n.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(n.flags|=256),r=!1)}return Fa(e,n,t,r,i,o)}function Fa(e,n,t,r,o,i){Ma(e,n);var a=0!=(64&n.flags);if(!r&&!a)return o&&wo(n,t,!1),Za(e,n,i);r=n.stateNode,Ja.current=n;var l=a&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&a?(n.child=vi(n,e.child,null,i),n.child=vi(n,null,l,i)):$a(e,n,l,i),n.memoizedState=r.state,o&&wo(n,t,!0),n.child}function La(e){var n=e.stateNode;n.pendingContext?ho(0,n.pendingContext,n.pendingContext!==n.context):n.context&&ho(0,n.context,!1),Di(e,n.containerInfo)}var Ya,Ua,qa,Ga={dehydrated:null,retryLane:0};function Qa(e,n,t){var r,o=n.pendingProps,i=$i.current,a=!1;return(r=0!=(64&n.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(a=!0,n.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),ao($i,1&i),null===e?(void 0!==o.fallback&&ji(n),e=o.children,i=o.fallback,a?(e=Wa(n,e,i,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Ga,e):"number"==typeof o.unstable_expectedLoadTime?(e=Wa(n,e,i,t),n.child.memoizedState={baseLanes:t},n.memoizedState=Ga,n.lanes=33554432,e):((t=jc({mode:"visible",children:e},n.mode,t,null)).return=n,n.child=t)):(e.memoizedState,a?(o=function(e,n,t,r,o){var i=n.mode,a=e.child;e=a.sibling;var l={mode:"hidden",children:t};return 0==(2&i)&&n.child!==a?((t=n.child).childLanes=0,t.pendingProps=l,null!==(a=t.lastEffect)?(n.firstEffect=t.firstEffect,n.lastEffect=a,a.nextEffect=null):n.firstEffect=n.lastEffect=null):t=Nc(a,l),null!==e?r=Nc(e,r):(r=Tc(r,i,o,null)).flags|=2,r.return=n,t.return=n,t.sibling=r,n.child=t,r}(e,n,o.children,o.fallback,t),a=n.child,i=e.child.memoizedState,a.memoizedState=null===i?{baseLanes:t}:{baseLanes:i.baseLanes|t},a.childLanes=e.childLanes&~t,n.memoizedState=Ga,o):(t=function(e,n,t,r){var o=e.child;return e=o.sibling,t=Nc(o,{mode:"visible",children:t}),0==(2&n.mode)&&(t.lanes=r),t.return=n,t.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,n.firstEffect=n.lastEffect=e),n.child=t}(e,n,o.children,t),n.memoizedState=null,t))}function Wa(e,n,t,r){var o=e.mode,i=e.child;return n={mode:"hidden",children:n},0==(2&o)&&null!==i?(i.childLanes=0,i.pendingProps=n):i=jc(n,o,0,null),t=Tc(t,o,r,null),i.return=e,t.return=e,i.sibling=t,e.child=i,t}function Va(e,n){e.lanes|=n;var t=e.alternate;null!==t&&(t.lanes|=n),ei(e.return,n)}function Ha(e,n,t,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o,lastEffect:i}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=o,a.lastEffect=i)}function Ka(e,n,t){var r=n.pendingProps,o=r.revealOrder,i=r.tail;if($a(e,n,r.children,t),0!=(2&(r=$i.current)))r=1&r|2,n.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Va(e,t);else if(19===e.tag)Va(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ao($i,r),0==(2&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===Pi(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Ha(n,!1,o,t,i,n.lastEffect);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Pi(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Ha(n,!0,t,null,i,n.lastEffect);break;case"together":Ha(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Za(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Pl|=n.lanes,0!=(t&n.childLanes)){if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=Nc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Nc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}return null}function Xa(e,n){if(!Ni)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return fo(n.type)&&po(),null;case 3:return Ei(),io(so),io(co),qi(),(r=n.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Li(n)?n.flags|=4:r.hydrate||(n.flags|=256)),null;case 5:Oi(n);var i=_i(Si.current);if(t=n.type,null!==e&&null!=n.stateNode)Ua(e,n,t,r),e.ref!==n.ref&&(n.flags|=128);else{if(!r){if(null===n.stateNode)throw Error(a(166));return null}if(e=_i(Bi.current),Li(n)){r=n.stateNode,t=n.type;var l=n.memoizedProps;switch(r[Qr]=n,r[Wr]=l,t){case"dialog":Br("cancel",r),Br("close",r);break;case"iframe":case"object":case"embed":Br("load",r);break;case"video":case"audio":for(e=0;e<br.length;e++)Br(br[e],r);break;case"source":Br("error",r);break;case"img":case"image":case"link":Br("error",r),Br("load",r);break;case"details":Br("toggle",r);break;case"input":ee(r,l),Br("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Br("invalid",r);break;case"textarea":ce(r,l),Br("invalid",r)}for(var s in xe(t,l),e=null,l)l.hasOwnProperty(s)&&(i=l[s],"children"===s?"string"==typeof i?r.textContent!==i&&(e=["children",i]):"number"==typeof i&&r.textContent!==""+i&&(e=["children",""+i]):c.hasOwnProperty(s)&&null!=i&&"onScroll"===s&&Br("scroll",r));switch(t){case"input":H(r),re(r,l,!0);break;case"textarea":H(r),Ae(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Rr)}r=e,n.updateQueue=r,null!==r&&(n.flags|=4)}else{switch(s=9===i.nodeType?i:i.ownerDocument,e===ue&&(e=de(t)),e===ue?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[Qr]=n,e[Wr]=r,Ya(e,n),n.stateNode=e,s=Ie(t,r),t){case"dialog":Br("cancel",e),Br("close",e),i=r;break;case"iframe":case"object":case"embed":Br("load",e),i=r;break;case"video":case"audio":for(i=0;i<br.length;i++)Br(br[i],e);i=r;break;case"source":Br("error",e),i=r;break;case"img":case"image":case"link":Br("error",e),Br("load",e),i=r;break;case"details":Br("toggle",e),i=r;break;case"input":ee(e,r),i=X(e,r),Br("invalid",e);break;case"option":i=ie(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=o({},r,{value:void 0}),Br("invalid",e);break;case"textarea":ce(e,r),i=le(e,r),Br("invalid",e);break;default:i=r}xe(t,i);var A=i;for(l in A)if(A.hasOwnProperty(l)){var u=A[l];"style"===l?be(e,u):"dangerouslySetInnerHTML"===l?null!=(u=u?u.__html:void 0)&&Ce(e,u):"children"===l?"string"==typeof u?("textarea"!==t||""!==u)&&me(e,u):"number"==typeof u&&me(e,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(c.hasOwnProperty(l)?null!=u&&"onScroll"===l&&Br("scroll",e):null!=u&&y(e,l,u,s))}switch(t){case"input":H(e),re(e,r,!1);break;case"textarea":H(e),Ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ae(e,!!r.multiple,l,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Rr)}Mr(t,r)&&(n.flags|=4)}null!==n.ref&&(n.flags|=128)}return null;case 6:if(e&&null!=n.stateNode)qa(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));t=_i(Si.current),_i(Bi.current),Li(n)?(r=n.stateNode,t=n.memoizedProps,r[Qr]=n,r.nodeValue!==t&&(n.flags|=4)):((r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Qr]=n,n.stateNode=r)}return null;case 13:return io($i),r=n.memoizedState,0!=(64&n.flags)?(n.lanes=t,n):(r=null!==r,t=!1,null===e?void 0!==n.memoizedProps.fallback&&Li(n):t=null!==e.memoizedState,r&&!t&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&$i.current)?0===Jl&&(Jl=3):(0!==Jl&&3!==Jl||(Jl=4),null===kl||0==(134217727&Pl)&&0==(134217727&Rl)||uc(kl,_l))),(r||t)&&(n.flags|=4),null);case 4:return Ei(),null===e&&Sr(n.stateNode.containerInfo),null;case 10:return Xo(n),null;case 17:return fo(n.type)&&po(),null;case 19:if(io($i),null===(r=n.memoizedState))return null;if(l=0!=(64&n.flags),null===(s=r.rendering))if(l)Xa(r,!1);else{if(0!==Jl||null!==e&&0!=(64&e.flags))for(e=n.child;null!==e;){if(null!==(s=Pi(e))){for(n.flags|=64,Xa(r,!1),null!==(l=s.updateQueue)&&(n.updateQueue=l,n.flags|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=t,t=n.child;null!==t;)e=r,(l=t).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ao($i,1&$i.current|2),n.child}e=e.sibling}null!==r.tail&&To()>Tl&&(n.flags|=64,l=!0,Xa(r,!1),n.lanes=33554432)}else{if(!l)if(null!==(e=Pi(s))){if(n.flags|=64,l=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Xa(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Ni)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*To()-r.renderingStartTime>Tl&&1073741824!==t&&(n.flags|=64,l=!0,Xa(r,!1),n.lanes=33554432);r.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=r.last)?t.sibling=s:n.child=s,r.last=s)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=To(),t.sibling=null,n=$i.current,ao($i,l?1&n|2:1&n),t):null;case 23:case 24:return pc(),null!==e&&null!==e.memoizedState!=(null!==n.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(n.flags|=4),null}throw Error(a(156,n.tag))}function nl(e){switch(e.tag){case 1:fo(e.type)&&po();var n=e.flags;return 4096&n?(e.flags=-4097&n|64,e):null;case 3:if(Ei(),io(so),io(co),qi(),0!=(64&(n=e.flags)))throw Error(a(285));return e.flags=-4097&n|64,e;case 5:return Oi(e),null;case 13:return io($i),4096&(n=e.flags)?(e.flags=-4097&n|64,e):null;case 19:return io($i),null;case 4:return Ei(),null;case 10:return Xo(e),null;case 23:case 24:return pc(),null;default:return null}}function tl(e,n){try{var t="",r=n;do{t+=G(r),r=r.return}while(r);var o=t}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:o}}function rl(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}Ya=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Ua=function(e,n,t,r){var i=e.memoizedProps;if(i!==r){e=n.stateNode,_i(Bi.current);var a,l=null;switch(t){case"input":i=X(e,i),r=X(e,r),l=[];break;case"option":i=ie(e,i),r=ie(e,r),l=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":i=le(e,i),r=le(e,r),l=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Rr)}for(u in xe(t,r),t=null,i)if(!r.hasOwnProperty(u)&&i.hasOwnProperty(u)&&null!=i[u])if("style"===u){var s=i[u];for(a in s)s.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(c.hasOwnProperty(u)?l||(l=[]):(l=l||[]).push(u,null));for(u in r){var A=r[u];if(s=null!=i?i[u]:void 0,r.hasOwnProperty(u)&&A!==s&&(null!=A||null!=s))if("style"===u)if(s){for(a in s)!s.hasOwnProperty(a)||A&&A.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in A)A.hasOwnProperty(a)&&s[a]!==A[a]&&(t||(t={}),t[a]=A[a])}else t||(l||(l=[]),l.push(u,t)),t=A;else"dangerouslySetInnerHTML"===u?(A=A?A.__html:void 0,s=s?s.__html:void 0,null!=A&&s!==A&&(l=l||[]).push(u,A)):"children"===u?"string"!=typeof A&&"number"!=typeof A||(l=l||[]).push(u,""+A):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(c.hasOwnProperty(u)?(null!=A&&"onScroll"===u&&Br("scroll",e),l||s===A||(l=[])):"object"==typeof A&&null!==A&&A.$$typeof===R?A.toString():(l=l||[]).push(u,A))}t&&(l=l||[]).push("style",t);var u=l;(n.updateQueue=u)&&(n.flags|=4)}},qa=function(e,n,t,r){t!==r&&(n.flags|=4)};var ol="function"==typeof WeakMap?WeakMap:Map;function il(e,n,t){(t=ai(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Yl||(Yl=!0,Ul=r),rl(0,n)},t}function al(e,n,t){(t=ai(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return rl(0,n),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===ql?ql=new Set([this]):ql.add(this),rl(0,n));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}var ll="function"==typeof WeakSet?WeakSet:Set;function cl(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Jc(e,n)}else n.current=null}function sl(e,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&n.flags&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:Qo(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:return void(256&n.flags&&Lr(n.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(a(163))}function Al(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==n)}if(null!==(n=null!==(n=t.updateQueue)?n.lastEffect:null)){e=n=n.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(_c(t,e),Sc(t,e)),e=r}while(e!==n)}return;case 1:return e=t.stateNode,4&t.flags&&(null===n?e.componentDidMount():(r=t.elementType===t.type?n.memoizedProps:Qo(t.type,n.memoizedProps),e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(n=t.updateQueue)&&Ai(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}Ai(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.flags&&Mr(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&bn(t)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(a(163))}function ul(e,n){for(var t=e;;){if(5===t.tag){var r=t.stateNode;if(n)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=t.stateNode;var o=t.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ye("display",o)}}else if(6===t.tag)t.stateNode.nodeValue=n?"":t.memoizedProps;else if((23!==t.tag&&24!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}}function dl(e,n){if(yo&&"function"==typeof yo.onCommitFiberUnmount)try{yo.onCommitFiberUnmount(go,n)}catch(e){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var t=e=e.next;do{var r=t,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))_c(n,t);else{r=n;try{o()}catch(e){Jc(r,e)}}t=t.next}while(t!==e)}break;case 1:if(cl(n),"function"==typeof(e=n.stateNode).componentWillUnmount)try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(e){Jc(n,e)}break;case 5:cl(n);break;case 4:wl(e,n)}}function fl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function pl(e){return 5===e.tag||3===e.tag||4===e.tag}function hl(e){e:{for(var n=e.return;null!==n;){if(pl(n))break e;n=n.return}throw Error(a(160))}var t=n;switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(a(161))}16&t.flags&&(me(n,""),t.flags&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||pl(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.flags)){t=t.stateNode;break e}}r?Cl(e,t,n):ml(e,t,n)}function Cl(e,n,t){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Rr));else if(4!==r&&null!==(e=e.child))for(Cl(e,n,t),e=e.sibling;null!==e;)Cl(e,n,t),e=e.sibling}function ml(e,n,t){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ml(e,n,t),e=e.sibling;null!==e;)ml(e,n,t),e=e.sibling}function wl(e,n){for(var t,r,o=n,i=!1;;){if(!i){i=o.return;e:for(;;){if(null===i)throw Error(a(160));switch(t=i.stateNode,i.tag){case 5:r=!1;break e;case 3:case 4:t=t.containerInfo,r=!0;break e}i=i.return}i=!0}if(5===o.tag||6===o.tag){e:for(var l=e,c=o,s=c;;)if(dl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===c)break e;for(;null===s.sibling;){if(null===s.return||s.return===c)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=t,c=o.stateNode,8===l.nodeType?l.parentNode.removeChild(c):l.removeChild(c)):t.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){t=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(dl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===n)break;for(;null===o.sibling;){if(null===o.return||o.return===n)return;4===(o=o.return).tag&&(i=!1)}o.sibling.return=o.return,o=o.sibling}}function gl(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var t=n.updateQueue;if(null!==(t=null!==t?t.lastEffect:null)){var r=t=t.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==t)}return;case 1:return;case 5:if(null!=(t=n.stateNode)){r=n.memoizedProps;var o=null!==e?e.memoizedProps:r;e=n.type;var i=n.updateQueue;if(n.updateQueue=null,null!==i){for(t[Wr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ne(t,r),Ie(e,o),n=Ie(e,r),o=0;o<i.length;o+=2){var l=i[o],c=i[o+1];"style"===l?be(t,c):"dangerouslySetInnerHTML"===l?Ce(t,c):"children"===l?me(t,c):y(t,l,c,n)}switch(e){case"input":te(t,r);break;case"textarea":se(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?ae(t,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(t,!!r.multiple,r.defaultValue,!0):ae(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(a(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((t=n.stateNode).hydrate&&(t.hydrate=!1,bn(t.containerInfo)));case 12:return;case 13:return null!==n.memoizedState&&(Ml=To(),ul(n.child,!0)),void yl(n);case 19:return void yl(n);case 17:return;case 23:case 24:return void ul(n,null!==n.memoizedState)}throw Error(a(163))}function yl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new ll),n.forEach((function(n){var r=$c.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function bl(e,n){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(n=n.memoizedState)&&null===n.dehydrated}var vl=Math.ceil,xl=b.ReactCurrentDispatcher,Il=b.ReactCurrentOwner,Bl=0,kl=null,Sl=null,_l=0,Dl=0,El=oo(0),Jl=0,Ol=null,$l=0,Pl=0,Rl=0,zl=0,Nl=null,Ml=0,Tl=1/0;function jl(){Tl=To()+500}var Fl,Ll=null,Yl=!1,Ul=null,ql=null,Gl=!1,Ql=null,Wl=90,Vl=[],Hl=[],Kl=null,Zl=0,Xl=null,ec=-1,nc=0,tc=0,rc=null,oc=!1;function ic(){return 0!=(48&Bl)?To():-1!==ec?ec:ec=To()}function ac(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===jo()?1:2;if(0===nc&&(nc=$l),0!==Go.transition){0!==tc&&(tc=null!==Nl?Nl.pendingLanes:0),e=nc;var n=4186112&~tc;return 0==(n&=-n)&&0==(n=(e=4186112&~e)&-e)&&(n=8192),n}return e=jo(),e=Tn(0!=(4&Bl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nc)}function lc(e,n,t){if(50<Zl)throw Zl=0,Xl=null,Error(a(185));if(null===(e=cc(e,n)))return null;Ln(e,n,t),e===kl&&(Rl|=n,4===Jl&&uc(e,_l));var r=jo();1===n?0!=(8&Bl)&&0==(48&Bl)?dc(e):(sc(e,t),0===Bl&&(jl(),Uo())):(0==(4&Bl)||98!==r&&99!==r||(null===Kl?Kl=new Set([e]):Kl.add(e)),sc(e,t)),Nl=e}function cc(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}function sc(e,n){for(var t=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,i=e.expirationTimes,l=e.pendingLanes;0<l;){var c=31-Yn(l),s=1<<c,A=i[c];if(-1===A){if(0==(s&r)||0!=(s&o)){A=n,zn(s);var u=Rn;i[c]=10<=u?A+250:6<=u?A+5e3:-1}}else A<=n&&(e.expiredLanes|=s);l&=~s}if(r=Nn(e,e===kl?_l:0),n=Rn,0===r)null!==t&&(t!==$o&&xo(t),e.callbackNode=null,e.callbackPriority=0);else{if(null!==t){if(e.callbackPriority===n)return;t!==$o&&xo(t)}15===n?(t=dc.bind(null,e),null===Ro?(Ro=[t],zo=vo(_o,qo)):Ro.push(t),t=$o):t=14===n?Yo(99,dc.bind(null,e)):Yo(t=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(n),Ac.bind(null,e)),e.callbackPriority=n,e.callbackNode=t}}function Ac(e){if(ec=-1,tc=nc=0,0!=(48&Bl))throw Error(a(327));var n=e.callbackNode;if(kc()&&e.callbackNode!==n)return null;var t=Nn(e,e===kl?_l:0);if(0===t)return null;var r=t,o=Bl;Bl|=16;var i=mc();for(kl===e&&_l===r||(jl(),hc(e,r));;)try{yc();break}catch(n){Cc(e,n)}if(Zo(),xl.current=i,Bl=o,null!==Sl?r=0:(kl=null,_l=0,r=Jl),0!=($l&Rl))hc(e,0);else if(0!==r){if(2===r&&(Bl|=64,e.hydrate&&(e.hydrate=!1,Lr(e.containerInfo)),0!==(t=Mn(e))&&(r=wc(e,t))),1===r)throw n=Ol,hc(e,0),uc(e,t),sc(e,To()),n;switch(e.finishedWork=e.current.alternate,e.finishedLanes=t,r){case 0:case 1:throw Error(a(345));case 2:xc(e);break;case 3:if(uc(e,t),(62914560&t)===t&&10<(r=Ml+500-To())){if(0!==Nn(e,0))break;if(((o=e.suspendedLanes)&t)!==t){ic(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=jr(xc.bind(null,e),r);break}xc(e);break;case 4:if(uc(e,t),(4186112&t)===t)break;for(r=e.eventTimes,o=-1;0<t;){var l=31-Yn(t);i=1<<l,(l=r[l])>o&&(o=l),t&=~i}if(t=o,10<(t=(120>(t=To()-t)?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*vl(t/1960))-t)){e.timeoutHandle=jr(xc.bind(null,e),t);break}xc(e);break;case 5:xc(e);break;default:throw Error(a(329))}}return sc(e,To()),e.callbackNode===n?Ac.bind(null,e):null}function uc(e,n){for(n&=~zl,n&=~Rl,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-Yn(n),r=1<<t;e[t]=-1,n&=~r}}function dc(e){if(0!=(48&Bl))throw Error(a(327));if(kc(),e===kl&&0!=(e.expiredLanes&_l)){var n=_l,t=wc(e,n);0!=($l&Rl)&&(t=wc(e,n=Nn(e,n)))}else t=wc(e,n=Nn(e,0));if(0!==e.tag&&2===t&&(Bl|=64,e.hydrate&&(e.hydrate=!1,Lr(e.containerInfo)),0!==(n=Mn(e))&&(t=wc(e,n))),1===t)throw t=Ol,hc(e,0),uc(e,n),sc(e,To()),t;return e.finishedWork=e.current.alternate,e.finishedLanes=n,xc(e),sc(e,To()),null}function fc(e,n){ao(El,Dl),Dl|=n,$l|=n}function pc(){Dl=El.current,io(El)}function hc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,Fr(t)),null!==Sl)for(t=Sl.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&po();break;case 3:Ei(),io(so),io(co),qi();break;case 5:Oi(r);break;case 4:Ei();break;case 13:case 19:io($i);break;case 10:Xo(r);break;case 23:case 24:pc()}t=t.return}kl=e,Sl=Nc(e.current,null),_l=Dl=$l=n,Jl=0,Ol=null,zl=Rl=Pl=0}function Cc(e,n){for(;;){var t=Sl;try{if(Zo(),Gi.current=Sa,Zi){for(var r=Vi.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Zi=!1}if(Wi=0,Ki=Hi=Vi=null,Xi=!1,Il.current=null,null===t||null===t.return){Jl=1,Ol=n,Sl=null;break}e:{var i=e,a=t.return,l=t,c=n;if(n=_l,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var s=c;if(0==(2&l.mode)){var A=l.alternate;A?(l.updateQueue=A.updateQueue,l.memoizedState=A.memoizedState,l.lanes=A.lanes):(l.updateQueue=null,l.memoizedState=null)}var u=0!=(1&$i.current),d=a;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var h=d.memoizedProps;f=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!u)}}if(f){var C=d.updateQueue;if(null===C){var m=new Set;m.add(s),d.updateQueue=m}else C.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var w=ai(-1,1);w.tag=2,li(l,w)}l.lanes|=1;break e}c=void 0,l=n;var g=i.pingCache;if(null===g?(g=i.pingCache=new ol,c=new Set,g.set(s,c)):void 0===(c=g.get(s))&&(c=new Set,g.set(s,c)),!c.has(l)){c.add(l);var y=Oc.bind(null,i,s,l);s.then(y,y)}d.flags|=4096,d.lanes=n;break e}d=d.return}while(null!==d);c=Error((Q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Jl&&(Jl=2),c=tl(c,l),d=a;do{switch(d.tag){case 3:i=c,d.flags|=4096,n&=-n,d.lanes|=n,ci(d,il(0,i,n));break e;case 1:i=c;var b=d.type,v=d.stateNode;if(0==(64&d.flags)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===ql||!ql.has(v)))){d.flags|=4096,n&=-n,d.lanes|=n,ci(d,al(d,i,n));break e}}d=d.return}while(null!==d)}vc(t)}catch(e){n=e,Sl===t&&null!==t&&(Sl=t=t.return);continue}break}}function mc(){var e=xl.current;return xl.current=Sa,null===e?Sa:e}function wc(e,n){var t=Bl;Bl|=16;var r=mc();for(kl===e&&_l===n||hc(e,n);;)try{gc();break}catch(n){Cc(e,n)}if(Zo(),Bl=t,xl.current=r,null!==Sl)throw Error(a(261));return kl=null,_l=0,Jl}function gc(){for(;null!==Sl;)bc(Sl)}function yc(){for(;null!==Sl&&!Io();)bc(Sl)}function bc(e){var n=Fl(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===n?vc(e):Sl=n,Il.current=null}function vc(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(2048&n.flags)){if(null!==(t=el(t,n,Dl)))return void(Sl=t);if(24!==(t=n).tag&&23!==t.tag||null===t.memoizedState||0!=(1073741824&Dl)||0==(4&t.mode)){for(var r=0,o=t.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;t.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=n.firstEffect),null!==n.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=n.firstEffect),e.lastEffect=n.lastEffect),1<n.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=n:e.firstEffect=n,e.lastEffect=n))}else{if(null!==(t=nl(n)))return t.flags&=2047,void(Sl=t);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(n=n.sibling))return void(Sl=n);Sl=n=e}while(null!==n);0===Jl&&(Jl=5)}function xc(e){var n=jo();return Lo(99,Ic.bind(null,e,n)),null}function Ic(e,n){do{kc()}while(null!==Ql);if(0!=(48&Bl))throw Error(a(327));var t=e.finishedWork;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null;var r=t.lanes|t.childLanes,o=r,i=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,c=e.expirationTimes;0<i;){var s=31-Yn(i),A=1<<s;o[s]=0,l[s]=-1,c[s]=-1,i&=~A}if(null!==Kl&&0==(24&r)&&Kl.has(e)&&Kl.delete(e),e===kl&&(Sl=kl=null,_l=0),1<t.flags?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,null!==r){if(o=Bl,Bl|=32,Il.current=null,zr=Wn,dr(l=ur())){if("selectionStart"in l)c={start:l.selectionStart,end:l.selectionEnd};else e:if(c=(c=l.ownerDocument)&&c.defaultView||window,(A=c.getSelection&&c.getSelection())&&0!==A.rangeCount){c=A.anchorNode,i=A.anchorOffset,s=A.focusNode,A=A.focusOffset;try{c.nodeType,s.nodeType}catch(e){c=null;break e}var u=0,d=-1,f=-1,p=0,h=0,C=l,m=null;n:for(;;){for(var w;C!==c||0!==i&&3!==C.nodeType||(d=u+i),C!==s||0!==A&&3!==C.nodeType||(f=u+A),3===C.nodeType&&(u+=C.nodeValue.length),null!==(w=C.firstChild);)m=C,C=w;for(;;){if(C===l)break n;if(m===c&&++p===i&&(d=u),m===s&&++h===A&&(f=u),null!==(w=C.nextSibling))break;m=(C=m).parentNode}C=w}c=-1===d||-1===f?null:{start:d,end:f}}else c=null;c=c||{start:0,end:0}}else c=null;Nr={focusedElem:l,selectionRange:c},Wn=!1,rc=null,oc=!1,Ll=r;do{try{Bc()}catch(e){if(null===Ll)throw Error(a(330));Jc(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);rc=null,Ll=r;do{try{for(l=e;null!==Ll;){var g=Ll.flags;if(16&g&&me(Ll.stateNode,""),128&g){var y=Ll.alternate;if(null!==y){var b=y.ref;null!==b&&("function"==typeof b?b(null):b.current=null)}}switch(1038&g){case 2:hl(Ll),Ll.flags&=-3;break;case 6:hl(Ll),Ll.flags&=-3,gl(Ll.alternate,Ll);break;case 1024:Ll.flags&=-1025;break;case 1028:Ll.flags&=-1025,gl(Ll.alternate,Ll);break;case 4:gl(Ll.alternate,Ll);break;case 8:wl(l,c=Ll);var v=c.alternate;fl(c),null!==v&&fl(v)}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(a(330));Jc(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);if(b=Nr,y=ur(),g=b.focusedElem,l=b.selectionRange,y!==g&&g&&g.ownerDocument&&Ar(g.ownerDocument.documentElement,g)){null!==l&&dr(g)&&(y=l.start,void 0===(b=l.end)&&(b=y),"selectionStart"in g?(g.selectionStart=y,g.selectionEnd=Math.min(b,g.value.length)):(b=(y=g.ownerDocument||document)&&y.defaultView||window).getSelection&&(b=b.getSelection(),c=g.textContent.length,v=Math.min(l.start,c),l=void 0===l.end?v:Math.min(l.end,c),!b.extend&&v>l&&(c=l,l=v,v=c),c=sr(g,v),i=sr(g,l),c&&i&&(1!==b.rangeCount||b.anchorNode!==c.node||b.anchorOffset!==c.offset||b.focusNode!==i.node||b.focusOffset!==i.offset)&&((y=y.createRange()).setStart(c.node,c.offset),b.removeAllRanges(),v>l?(b.addRange(y),b.extend(i.node,i.offset)):(y.setEnd(i.node,i.offset),b.addRange(y))))),y=[];for(b=g;b=b.parentNode;)1===b.nodeType&&y.push({element:b,left:b.scrollLeft,top:b.scrollTop});for("function"==typeof g.focus&&g.focus(),g=0;g<y.length;g++)(b=y[g]).element.scrollLeft=b.left,b.element.scrollTop=b.top}Wn=!!zr,Nr=zr=null,e.current=t,Ll=r;do{try{for(g=e;null!==Ll;){var x=Ll.flags;if(36&x&&Al(g,Ll.alternate,Ll),128&x){y=void 0;var I=Ll.ref;if(null!==I){var B=Ll.stateNode;switch(Ll.tag){case 5:y=B;break;default:y=B}"function"==typeof I?I(y):I.current=y}}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(a(330));Jc(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);Ll=null,Po(),Bl=o}else e.current=t;if(Gl)Gl=!1,Ql=e,Wl=n;else for(Ll=r;null!==Ll;)n=Ll.nextEffect,Ll.nextEffect=null,8&Ll.flags&&((x=Ll).sibling=null,x.stateNode=null),Ll=n;if(0===(r=e.pendingLanes)&&(ql=null),1===r?e===Xl?Zl++:(Zl=0,Xl=e):Zl=0,t=t.stateNode,yo&&"function"==typeof yo.onCommitFiberRoot)try{yo.onCommitFiberRoot(go,t,void 0,64==(64&t.current.flags))}catch(e){}if(sc(e,To()),Yl)throw Yl=!1,e=Ul,Ul=null,e;return 0!=(8&Bl)||Uo(),null}function Bc(){for(;null!==Ll;){var e=Ll.alternate;oc||null===rc||(0!=(8&Ll.flags)?Ze(Ll,rc)&&(oc=!0):13===Ll.tag&&bl(e,Ll)&&Ze(Ll,rc)&&(oc=!0));var n=Ll.flags;0!=(256&n)&&sl(e,Ll),0==(512&n)||Gl||(Gl=!0,Yo(97,(function(){return kc(),null}))),Ll=Ll.nextEffect}}function kc(){if(90!==Wl){var e=97<Wl?97:Wl;return Wl=90,Lo(e,Dc)}return!1}function Sc(e,n){Vl.push(n,e),Gl||(Gl=!0,Yo(97,(function(){return kc(),null})))}function _c(e,n){Hl.push(n,e),Gl||(Gl=!0,Yo(97,(function(){return kc(),null})))}function Dc(){if(null===Ql)return!1;var e=Ql;if(Ql=null,0!=(48&Bl))throw Error(a(331));var n=Bl;Bl|=32;var t=Hl;Hl=[];for(var r=0;r<t.length;r+=2){var o=t[r],i=t[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===i)throw Error(a(330));Jc(i,e)}}for(t=Vl,Vl=[],r=0;r<t.length;r+=2){o=t[r],i=t[r+1];try{var c=o.create;o.destroy=c()}catch(e){if(null===i)throw Error(a(330));Jc(i,e)}}for(c=e.current.firstEffect;null!==c;)e=c.nextEffect,c.nextEffect=null,8&c.flags&&(c.sibling=null,c.stateNode=null),c=e;return Bl=n,Uo(),!0}function Ec(e,n,t){li(e,n=il(0,n=tl(t,n),1)),n=ic(),null!==(e=cc(e,1))&&(Ln(e,1,n),sc(e,n))}function Jc(e,n){if(3===e.tag)Ec(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){Ec(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r))){var o=al(t,e=tl(n,e),1);if(li(t,o),o=ic(),null!==(t=cc(t,1)))Ln(t,1,o),sc(t,o);else if("function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r)))try{r.componentDidCatch(n,e)}catch(e){}break}}t=t.return}}function Oc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ic(),e.pingedLanes|=e.suspendedLanes&t,kl===e&&(_l&t)===t&&(4===Jl||3===Jl&&(62914560&_l)===_l&&500>To()-Ml?hc(e,0):zl|=t),sc(e,n)}function $c(e,n){var t=e.stateNode;null!==t&&t.delete(n),0==(n=0)&&(0==(2&(n=e.mode))?n=1:0==(4&n)?n=99===jo()?1:2:(0===nc&&(nc=$l),0===(n=jn(62914560&~nc))&&(n=4194304))),t=ic(),null!==(e=cc(e,n))&&(Ln(e,n,t),sc(e,t))}function Pc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Rc(e,n,t,r){return new Pc(e,n,t,r)}function zc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Nc(e,n){var t=e.alternate;return null===t?((t=Rc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Mc(e,n,t,r,o,i){var l=2;if(r=e,"function"==typeof e)zc(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case I:return Tc(t.children,o,i,n);case z:l=8,o|=16;break;case B:l=8,o|=1;break;case k:return(e=Rc(12,t,n,8|o)).elementType=k,e.type=k,e.lanes=i,e;case E:return(e=Rc(13,t,n,o)).type=E,e.elementType=E,e.lanes=i,e;case J:return(e=Rc(19,t,n,o)).elementType=J,e.lanes=i,e;case N:return jc(t,o,i,n);case M:return(e=Rc(24,t,n,o)).elementType=M,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case S:l=10;break e;case _:l=9;break e;case D:l=11;break e;case O:l=14;break e;case $:l=16,r=null;break e;case P:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=Rc(l,t,n,o)).elementType=e,n.type=r,n.lanes=i,n}function Tc(e,n,t,r){return(e=Rc(7,e,r,n)).lanes=t,e}function jc(e,n,t,r){return(e=Rc(23,e,r,n)).elementType=N,e.lanes=t,e}function Fc(e,n,t){return(e=Rc(6,e,null,n)).lanes=t,e}function Lc(e,n,t){return(n=Rc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Yc(e,n,t){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Fn(0),this.expirationTimes=Fn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Fn(0),this.mutableSourceEagerHydrationData=null}function Uc(e,n,t,r){var o=n.current,i=ic(),l=ac(o);e:if(t){n:{if(Ve(t=t._reactInternals)!==t||1!==t.tag)throw Error(a(170));var c=t;do{switch(c.tag){case 3:c=c.stateNode.context;break n;case 1:if(fo(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break n}}c=c.return}while(null!==c);throw Error(a(171))}if(1===t.tag){var s=t.type;if(fo(s)){t=Co(t,s,c);break e}}t=c}else t=lo;return null===n.context?n.context=t:n.pendingContext=t,(n=ai(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),li(o,n),lc(o,l,i),l}function qc(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Gc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Qc(e,n){Gc(e,n),(e=e.alternate)&&Gc(e,n)}function Wc(e,n,t){var r=null!=t&&null!=t.hydrationOptions&&t.hydrationOptions.mutableSources||null;if(t=new Yc(e,n,null!=t&&!0===t.hydrate),n=Rc(3,null,null,2===n?7:1===n?3:0),t.current=n,n.stateNode=t,oi(n),e[Vr]=t.current,Sr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(n=r[e])._getVersion;o=o(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,o]:t.mutableSourceEagerHydrationData.push(n,o)}this._internalRoot=t}function Vc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Hc(e,n,t,r,o){var i=t._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=qc(a);l.call(e)}}Uc(n,a,e,o)}else{if(i=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new Wc(e,0,n?{hydrate:!0}:void 0)}(t,r),a=i._internalRoot,"function"==typeof o){var c=o;o=function(){var e=qc(a);c.call(e)}}!function(e,n){var t=Bl;Bl&=-2,Bl|=8;try{e(n)}finally{0===(Bl=t)&&(jl(),Uo())}}((function(){Uc(n,a,e,o)}))}return qc(a)}Fl=function(e,n,t){var r=n.lanes;if(null!==e)if(e.memoizedProps!==n.pendingProps||so.current)Oa=!0;else{if(0==(t&r)){switch(Oa=!1,n.tag){case 3:La(n),Yi();break;case 5:Ji(n);break;case 1:fo(n.type)&&mo(n);break;case 4:Di(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value;var o=n.type._context;ao(Wo,o._currentValue),o._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!=(t&n.child.childLanes)?Qa(e,n,t):(ao($i,1&$i.current),null!==(n=Za(e,n,t))?n.sibling:null);ao($i,1&$i.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(64&e.flags)){if(r)return Ka(e,n,t);n.flags|=64}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),ao($i,$i.current),r)break;return null;case 23:case 24:return n.lanes=0,Na(e,n,t)}return Za(e,n,t)}Oa=0!=(16384&e.flags)}else Oa=!1;switch(n.lanes=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,o=uo(n,co.current),ni(n,t),o=ta(null,n,r,e,o,t),n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,fo(r)){var i=!0;mo(n)}else i=!1;n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,oi(n);var l=r.getDerivedStateFromProps;"function"==typeof l&&di(n,r,l,e),o.updater=fi,n.stateNode=o,o._reactInternals=n,mi(n,r,e,t),n=Fa(null,n,r,!0,i,t)}else n.tag=0,$a(null,n,o,t),n=n.child;return n;case 16:o=n.elementType;e:{switch(null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),e=n.pendingProps,o=(i=o._init)(o._payload),n.type=o,i=n.tag=function(e){if("function"==typeof e)return zc(e)?1:0;if(null!=e){if((e=e.$$typeof)===D)return 11;if(e===O)return 14}return 2}(o),e=Qo(o,e),i){case 0:n=Ta(null,n,o,e,t);break e;case 1:n=ja(null,n,o,e,t);break e;case 11:n=Pa(null,n,o,e,t);break e;case 14:n=Ra(null,n,o,Qo(o.type,e),r,t);break e}throw Error(a(306,o,""))}return n;case 0:return r=n.type,o=n.pendingProps,Ta(e,n,r,o=n.elementType===r?o:Qo(r,o),t);case 1:return r=n.type,o=n.pendingProps,ja(e,n,r,o=n.elementType===r?o:Qo(r,o),t);case 3:if(La(n),r=n.updateQueue,null===e||null===r)throw Error(a(282));if(r=n.pendingProps,o=null!==(o=n.memoizedState)?o.element:null,ii(e,n),si(n,r,null,t),(r=n.memoizedState.element)===o)Yi(),n=Za(e,n,t);else{if((i=(o=n.stateNode).hydrate)&&(zi=Yr(n.stateNode.containerInfo.firstChild),Ri=n,i=Ni=!0),i){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(i=e[o])._workInProgressVersionPrimary=e[o+1],Ui.push(i);for(t=xi(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|1024,t=t.sibling}else $a(e,n,r,t),Yi();n=n.child}return n;case 5:return Ji(n),null===e&&ji(n),r=n.type,o=n.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,Tr(r,o)?l=null:null!==i&&Tr(r,i)&&(n.flags|=16),Ma(e,n),$a(e,n,l,t),n.child;case 6:return null===e&&ji(n),null;case 13:return Qa(e,n,t);case 4:return Di(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=vi(n,null,r,t):$a(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Pa(e,n,r,o=n.elementType===r?o:Qo(r,o),t);case 7:return $a(e,n,n.pendingProps,t),n.child;case 8:case 12:return $a(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,o=n.pendingProps,l=n.memoizedProps,i=o.value;var c=n.type._context;if(ao(Wo,c._currentValue),c._currentValue=i,null!==l)if(c=l.value,0==(i=ir(c,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(c,i):1073741823))){if(l.children===o.children&&!so.current){n=Za(e,n,t);break e}}else for(null!==(c=n.child)&&(c.return=n);null!==c;){var s=c.dependencies;if(null!==s){l=c.child;for(var A=s.firstContext;null!==A;){if(A.context===r&&0!=(A.observedBits&i)){1===c.tag&&((A=ai(-1,t&-t)).tag=2,li(c,A)),c.lanes|=t,null!==(A=c.alternate)&&(A.lanes|=t),ei(c.return,t),s.lanes|=t;break}A=A.next}}else l=10===c.tag&&c.type===n.type?null:c.child;if(null!==l)l.return=c;else for(l=c;null!==l;){if(l===n){l=null;break}if(null!==(c=l.sibling)){c.return=l.return,l=c;break}l=l.return}c=l}$a(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=(i=n.pendingProps).children,ni(n,t),r=r(o=ti(o,i.unstable_observedBits)),n.flags|=1,$a(e,n,r,t),n.child;case 14:return i=Qo(o=n.type,n.pendingProps),Ra(e,n,o,i=Qo(o.type,i),r,t);case 15:return za(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:Qo(r,o),null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,fo(r)?(e=!0,mo(n)):e=!1,ni(n,t),hi(n,r,o),mi(n,r,o,t),Fa(null,n,r,!0,e,t);case 19:return Ka(e,n,t);case 23:case 24:return Na(e,n,t)}throw Error(a(156,n.tag))},Wc.prototype.render=function(e){Uc(e,this._internalRoot,null,null)},Wc.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Uc(null,e,null,(function(){n[Vr]=null}))},Xe=function(e){13===e.tag&&(lc(e,4,ic()),Qc(e,4))},en=function(e){13===e.tag&&(lc(e,67108864,ic()),Qc(e,67108864))},nn=function(e){if(13===e.tag){var n=ic(),t=ac(e);lc(e,t,n),Qc(e,t)}},tn=function(e,n){return n()},ke=function(e,n,t){switch(n){case"input":if(te(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=eo(r);if(!o)throw Error(a(90));K(r),te(r,o)}}}break;case"textarea":se(e,t);break;case"select":null!=(n=t.value)&&ae(e,!!t.multiple,n,!1)}},Oe=function(e,n){var t=Bl;Bl|=1;try{return e(n)}finally{0===(Bl=t)&&(jl(),Uo())}},$e=function(e,n,t,r,o){var i=Bl;Bl|=4;try{return Lo(98,e.bind(null,n,t,r,o))}finally{0===(Bl=i)&&(jl(),Uo())}},Pe=function(){0==(49&Bl)&&(function(){if(null!==Kl){var e=Kl;Kl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,sc(e,To())}))}Uo()}(),kc())},Re=function(e,n){var t=Bl;Bl|=2;try{return e(n)}finally{0===(Bl=t)&&(jl(),Uo())}};var Kc={findFiberByHostInstance:Kr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Zc={bundleType:Kc.bundleType,version:Kc.version,rendererPackageName:Kc.rendererPackageName,rendererConfig:Kc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ve(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){t=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===t)return Ke(o),e;if(i===r)return Ke(o),n;i=i.sibling}throw Error(a(188))}if(t.return!==r.return)t=o,r=i;else{for(var l=!1,c=o.child;c;){if(c===t){l=!0,t=o,r=i;break}if(c===r){l=!0,r=o,t=i;break}c=c.sibling}if(!l){for(c=i.child;c;){if(c===t){l=!0,t=i,r=o;break}if(c===r){l=!0,r=i,t=o;break}c=c.sibling}if(!l)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e)))return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Kc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Xc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Xc.isDisabled&&Xc.supportsFiber)try{go=Xc.inject(Zc),yo=Xc}catch(he){}}n.render=function(e,n,t){if(!Vc(n))throw Error(a(200));return Hc(null,e,n,!1,t)}},3935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(4448)},9921:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,o=t?Symbol.for("react.portal"):60106,i=t?Symbol.for("react.fragment"):60107,a=t?Symbol.for("react.strict_mode"):60108,l=t?Symbol.for("react.profiler"):60114,c=t?Symbol.for("react.provider"):60109,s=t?Symbol.for("react.context"):60110,A=t?Symbol.for("react.async_mode"):60111,u=t?Symbol.for("react.concurrent_mode"):60111,d=t?Symbol.for("react.forward_ref"):60112,f=t?Symbol.for("react.suspense"):60113,p=t?Symbol.for("react.suspense_list"):60120,h=t?Symbol.for("react.memo"):60115,C=t?Symbol.for("react.lazy"):60116,m=t?Symbol.for("react.block"):60121,w=t?Symbol.for("react.fundamental"):60117,g=t?Symbol.for("react.responder"):60118,y=t?Symbol.for("react.scope"):60119;function b(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case A:case u:case i:case l:case a:case f:return e;default:switch(e=e&&e.$$typeof){case s:case d:case C:case h:case c:return e;default:return n}}case o:return n}}}function v(e){return b(e)===u}n.AsyncMode=A,n.ConcurrentMode=u,n.ContextConsumer=s,n.ContextProvider=c,n.Element=r,n.ForwardRef=d,n.Fragment=i,n.Lazy=C,n.Memo=h,n.Portal=o,n.Profiler=l,n.StrictMode=a,n.Suspense=f,n.isAsyncMode=function(e){return v(e)||b(e)===A},n.isConcurrentMode=v,n.isContextConsumer=function(e){return b(e)===s},n.isContextProvider=function(e){return b(e)===c},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return b(e)===d},n.isFragment=function(e){return b(e)===i},n.isLazy=function(e){return b(e)===C},n.isMemo=function(e){return b(e)===h},n.isPortal=function(e){return b(e)===o},n.isProfiler=function(e){return b(e)===l},n.isStrictMode=function(e){return b(e)===a},n.isSuspense=function(e){return b(e)===f},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===u||e===l||e===a||e===f||e===p||"object"==typeof e&&null!==e&&(e.$$typeof===C||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===d||e.$$typeof===w||e.$$typeof===g||e.$$typeof===y||e.$$typeof===m)},n.typeOf=b},9864:(e,n,t)=>{"use strict";e.exports=t(9921)},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,n,t)=>{var r=t(6585);e.exports=function e(n,t,o){return r(t)||(o=t||o,t=[]),o=o||{},n instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return A(e,n)}(n,t):r(n)?function(n,t,r){for(var o=[],i=0;i<n.length;i++)o.push(e(n[i],t,r).source);return A(new RegExp("(?:"+o.join("|")+")",u(r)),t)}(n,t,o):function(e,n,t){return d(i(e,t),n,t)}(n,t,o)},e.exports.parse=i,e.exports.compile=function(e,n){return l(i(e,n),n)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,n){for(var t,r=[],i=0,a=0,l="",A=n&&n.delimiter||"/";null!=(t=o.exec(e));){var u=t[0],d=t[1],f=t.index;if(l+=e.slice(a,f),a=f+u.length,d)l+=d[1];else{var p=e[a],h=t[2],C=t[3],m=t[4],w=t[5],g=t[6],y=t[7];l&&(r.push(l),l="");var b=null!=h&&null!=p&&p!==h,v="+"===g||"*"===g,x="?"===g||"*"===g,I=t[2]||A,B=m||w;r.push({name:C||i++,prefix:h||"",delimiter:I,optional:x,repeat:v,partial:b,asterisk:!!y,pattern:B?s(B):y?".*":"[^"+c(I)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",u(n)));return function(n,o){for(var i="",l=n||{},c=(o||{}).pretty?a:encodeURIComponent,s=0;s<e.length;s++){var A=e[s];if("string"!=typeof A){var u,d=l[A.name];if(null==d){if(A.optional){A.partial&&(i+=A.prefix);continue}throw new TypeError('Expected "'+A.name+'" to be defined')}if(r(d)){if(!A.repeat)throw new TypeError('Expected "'+A.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(A.optional)continue;throw new TypeError('Expected "'+A.name+'" to not be empty')}for(var f=0;f<d.length;f++){if(u=c(d[f]),!t[s].test(u))throw new TypeError('Expected all "'+A.name+'" to match "'+A.pattern+'", but received `'+JSON.stringify(u)+"`");i+=(0===f?A.prefix:A.delimiter)+u}}else{if(u=A.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):c(d),!t[s].test(u))throw new TypeError('Expected "'+A.name+'" to match "'+A.pattern+'", but received "'+u+'"');i+=A.prefix+u}}else i+=A}return i}}function c(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function A(e,n){return e.keys=n,e}function u(e){return e&&e.sensitive?"":"i"}function d(e,n,t){r(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,i=!1!==t.end,a="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)a+=c(s);else{var d=c(s.prefix),f="(?:"+s.pattern+")";n.push(s),s.repeat&&(f+="(?:"+d+f+")*"),a+=f=s.optional?s.partial?d+"("+f+")?":"(?:"+d+"("+f+"))?":d+"("+f+")"}}var p=c(t.delimiter||"/"),h=a.slice(-p.length)===p;return o||(a=(h?a.slice(0,-p.length):a)+"(?:"+p+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+p+"|$)",A(new RegExp("^"+a,u(t)),n)}},2408:(e,n,t)=>{"use strict";var r=t(7418),o=60103,i=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var a=60109,l=60110,c=60112;n.Suspense=60113;var s=60115,A=60116;if("function"==typeof Symbol&&Symbol.for){var u=Symbol.for;o=u("react.element"),i=u("react.portal"),n.Fragment=u("react.fragment"),n.StrictMode=u("react.strict_mode"),n.Profiler=u("react.profiler"),a=u("react.provider"),l=u("react.context"),c=u("react.forward_ref"),n.Suspense=u("react.suspense"),s=u("react.memo"),A=u("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function f(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function C(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||p}function m(){}function w(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||p}C.prototype.isReactComponent={},C.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(f(85));this.updater.enqueueSetState(this,e,n,"setState")},C.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=C.prototype;var g=w.prototype=new m;g.constructor=w,r(g,C.prototype),g.isPureReactComponent=!0;var y={current:null},b=Object.prototype.hasOwnProperty,v={key:!0,ref:!0,__self:!0,__source:!0};function x(e,n,t){var r,i={},a=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(a=""+n.key),n)b.call(n,r)&&!v.hasOwnProperty(r)&&(i[r]=n[r]);var c=arguments.length-2;if(1===c)i.children=t;else if(1<c){for(var s=Array(c),A=0;A<c;A++)s[A]=arguments[A+2];i.children=s}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===i[r]&&(i[r]=c[r]);return{$$typeof:o,type:e,key:a,ref:l,props:i,_owner:y.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var B=/\/+/g;function k(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function S(e,n,t,r,a){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var c=!1;if(null===e)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case o:case i:c=!0}}if(c)return a=a(c=e),e=""===r?"."+k(c,0):r,Array.isArray(a)?(t="",null!=e&&(t=e.replace(B,"$&/")+"/"),S(a,n,t,"",(function(e){return e}))):null!=a&&(I(a)&&(a=function(e,n){return{$$typeof:o,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,t+(!a.key||c&&c.key===a.key?"":(""+a.key).replace(B,"$&/")+"/")+e)),n.push(a)),1;if(c=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var A=r+k(l=e[s],s);c+=S(l,n,t,A,a)}else if("function"==typeof(A=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=A.call(e),s=0;!(l=e.next()).done;)c+=S(l=l.value,n,t,A=r+k(l,s++),a);else if("object"===l)throw n=""+e,Error(f(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return c}function _(e,n,t){if(null==e)return e;var r=[],o=0;return S(e,r,"","",(function(e){return n.call(t,e,o++)})),r}function D(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var E={current:null};function J(){var e=E.current;if(null===e)throw Error(f(321));return e}var O={ReactCurrentDispatcher:E,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:y,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:_,forEach:function(e,n,t){_(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return _(e,(function(){n++})),n},toArray:function(e){return _(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error(f(143));return e}},n.Component=C,n.PureComponent=w,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,n.cloneElement=function(e,n,t){if(null==e)throw Error(f(267,e));var i=r({},e.props),a=e.key,l=e.ref,c=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,c=y.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(A in n)b.call(n,A)&&!v.hasOwnProperty(A)&&(i[A]=void 0===n[A]&&void 0!==s?s[A]:n[A])}var A=arguments.length-2;if(1===A)i.children=t;else if(1<A){s=Array(A);for(var u=0;u<A;u++)s[u]=arguments[u+2];i.children=s}return{$$typeof:o,type:e.type,key:a,ref:l,props:i,_owner:c}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:l,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},n.createElement=x,n.createFactory=function(e){var n=x.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=I,n.lazy=function(e){return{$$typeof:A,_payload:{_status:-1,_result:e},_init:D}},n.memo=function(e,n){return{$$typeof:s,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return J().useCallback(e,n)},n.useContext=function(e,n){return J().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return J().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return J().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return J().useLayoutEffect(e,n)},n.useMemo=function(e,n){return J().useMemo(e,n)},n.useReducer=function(e,n,t){return J().useReducer(e,n,t)},n.useRef=function(e){return J().useRef(e)},n.useState=function(e){return J().useState(e)},n.version="17.0.1"},7294:(e,n,t)=>{"use strict";e.exports=t(2408)},5666:e=>{var n=function(e){"use strict";var n,t=Object.prototype,r=t.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function c(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{c({},"")}catch(e){c=function(e,n,t){return e[n]=t}}function s(e,n,t,r){var o=n&&n.prototype instanceof C?n:C,i=Object.create(o.prototype),a=new _(r||[]);return i._invoke=function(e,n,t){var r=u;return function(o,i){if(r===f)throw new Error("Generator is already running");if(r===p){if("throw"===o)throw i;return E()}for(t.method=o,t.arg=i;;){var a=t.delegate;if(a){var l=B(a,t);if(l){if(l===h)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(r===u)throw r=p,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r=f;var c=A(e,n,t);if("normal"===c.type){if(r=t.done?p:d,c.arg===h)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(r=p,t.method="throw",t.arg=c.arg)}}}(e,t,a),i}function A(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var u="suspendedStart",d="suspendedYield",f="executing",p="completed",h={};function C(){}function m(){}function w(){}var g={};g[i]=function(){return this};var y=Object.getPrototypeOf,b=y&&y(y(D([])));b&&b!==t&&r.call(b,i)&&(g=b);var v=w.prototype=C.prototype=Object.create(g);function x(e){["next","throw","return"].forEach((function(n){c(e,n,(function(e){return this._invoke(n,e)}))}))}function I(e,n){function t(o,i,a,l){var c=A(e[o],e,i);if("throw"!==c.type){var s=c.arg,u=s.value;return u&&"object"==typeof u&&r.call(u,"__await")?n.resolve(u.__await).then((function(e){t("next",e,a,l)}),(function(e){t("throw",e,a,l)})):n.resolve(u).then((function(e){s.value=e,a(s)}),(function(e){return t("throw",e,a,l)}))}l(c.arg)}var o;this._invoke=function(e,r){function i(){return new n((function(n,o){t(e,r,n,o)}))}return o=o?o.then(i,i):i()}}function B(e,t){var r=e.iterator[t.method];if(r===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,B(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var o=A(r,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,h;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,h):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function k(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function S(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function D(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function t(){for(;++o<e.length;)if(r.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=n,t.done=!0,t};return a.next=a}}return{next:E}}function E(){return{value:n,done:!0}}return m.prototype=v.constructor=w,w.constructor=m,m.displayName=c(w,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===m||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,w):(e.__proto__=w,c(e,l,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},x(I.prototype),I.prototype[a]=function(){return this},e.AsyncIterator=I,e.async=function(n,t,r,o,i){void 0===i&&(i=Promise);var a=new I(s(n,t,r,o),i);return e.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},x(v),c(v,l,"Generator"),v[i]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=D,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(S),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function o(r,o){return l.type="throw",l.arg=e,t.next=r,o&&(t.method="next",t.arg=n),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],l=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var c=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(c&&s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(e,n){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=n&&n<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=n,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),h},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),S(t),h}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var o=r.arg;S(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:D(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=n),h}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},53:(e,n)=>{"use strict";var t,r,o,i;if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;n.unstable_now=function(){return a.now()}}else{var l=Date,c=l.now();n.unstable_now=function(){return l.now()-c}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,A=null,u=function(){if(null!==s)try{var e=n.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(u,0),e}};t=function(e){null!==s?setTimeout(t,0,e):(s=e,setTimeout(u,0))},r=function(e,n){A=setTimeout(e,n)},o=function(){clearTimeout(A)},n.unstable_shouldYield=function(){return!1},i=n.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,f=window.clearTimeout;if("undefined"!=typeof console){var p=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof p&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,C=null,m=-1,w=5,g=0;n.unstable_shouldYield=function(){return n.unstable_now()>=g},i=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):w=0<e?Math.floor(1e3/e):5};var y=new MessageChannel,b=y.port2;y.port1.onmessage=function(){if(null!==C){var e=n.unstable_now();g=e+w;try{C(!0,e)?b.postMessage(null):(h=!1,C=null)}catch(e){throw b.postMessage(null),e}}else h=!1},t=function(e){C=e,h||(h=!0,b.postMessage(null))},r=function(e,t){m=d((function(){e(n.unstable_now())}),t)},o=function(){f(m),m=-1}}function v(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,o=e[r];if(!(void 0!==o&&0<B(o,n)))break e;e[r]=n,e[t]=o,t=r}}function x(e){return void 0===(e=e[0])?null:e}function I(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,c=e[l];if(void 0!==a&&0>B(a,t))void 0!==c&&0>B(c,a)?(e[r]=c,e[l]=t,r=l):(e[r]=a,e[i]=t,r=i);else{if(!(void 0!==c&&0>B(c,t)))break e;e[r]=c,e[l]=t,r=l}}}return n}return null}function B(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var k=[],S=[],_=1,D=null,E=3,J=!1,O=!1,$=!1;function P(e){for(var n=x(S);null!==n;){if(null===n.callback)I(S);else{if(!(n.startTime<=e))break;I(S),n.sortIndex=n.expirationTime,v(k,n)}n=x(S)}}function R(e){if($=!1,P(e),!O)if(null!==x(k))O=!0,t(z);else{var n=x(S);null!==n&&r(R,n.startTime-e)}}function z(e,t){O=!1,$&&($=!1,o()),J=!0;var i=E;try{for(P(t),D=x(k);null!==D&&(!(D.expirationTime>t)||e&&!n.unstable_shouldYield());){var a=D.callback;if("function"==typeof a){D.callback=null,E=D.priorityLevel;var l=a(D.expirationTime<=t);t=n.unstable_now(),"function"==typeof l?D.callback=l:D===x(k)&&I(k),P(t)}else I(k);D=x(k)}if(null!==D)var c=!0;else{var s=x(S);null!==s&&r(R,s.startTime-t),c=!1}return c}finally{D=null,E=i,J=!1}}var N=i;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){O||J||(O=!0,t(z))},n.unstable_getCurrentPriorityLevel=function(){return E},n.unstable_getFirstCallbackNode=function(){return x(k)},n.unstable_next=function(e){switch(E){case 1:case 2:case 3:var n=3;break;default:n=E}var t=E;E=n;try{return e()}finally{E=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=N,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=E;E=e;try{return n()}finally{E=t}},n.unstable_scheduleCallback=function(e,i,a){var l=n.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?l+a:l,e){case 1:var c=-1;break;case 2:c=250;break;case 5:c=1073741823;break;case 4:c=1e4;break;default:c=5e3}return e={id:_++,callback:i,priorityLevel:e,startTime:a,expirationTime:c=a+c,sortIndex:-1},a>l?(e.sortIndex=a,v(S,e),null===x(k)&&e===x(S)&&($?o():$=!0,r(R,a-l))):(e.sortIndex=c,v(k,e),O||J||(O=!0,t(z))),e},n.unstable_wrapCallback=function(e){var n=E;return function(){var t=E;E=n;try{return e.apply(this,arguments)}finally{E=t}}}},3840:(e,n,t)=>{"use strict";e.exports=t(53)},3379:(e,n,t)=>{"use strict";var r,o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),i=[];function a(e){for(var n=-1,t=0;t<i.length;t++)if(i[t].identifier===e){n=t;break}return n}function l(e,n){for(var t={},r=[],o=0;o<e.length;o++){var l=e[o],c=n.base?l[0]+n.base:l[0],s=t[c]||0,A="".concat(c," ").concat(s);t[c]=s+1;var u=a(A),d={css:l[1],media:l[2],sourceMap:l[3]};-1!==u?(i[u].references++,i[u].updater(d)):i.push({identifier:A,updater:h(d,n),references:1}),r.push(A)}return r}function c(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=t.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var s,A=(s=[],function(e,n){return s[e]=n,s.filter(Boolean).join("\n")});function u(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=A(n,o);else{var i=document.createTextNode(o),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(i,a[n]):e.appendChild(i)}}function d(e,n,t){var r=t.css,o=t.media,i=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var f=null,p=0;function h(e,n){var t,r,o;if(n.singleton){var i=p++;t=f||(f=c(n)),r=u.bind(null,t,i,!1),o=u.bind(null,t,i,!0)}else t=c(n),r=d.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=l(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=a(t[r]);i[o].references--}for(var c=l(e,n),s=0;s<t.length;s++){var A=a(t[s]);0===i[A].references&&(i[A].updater(),i.splice(A,1))}t=c}}}}},n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{"use strict";t(1983);var e,n=(e=t(115))&&e.__esModule?e:{default:e};n.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),n.default._babelPolyfill=!0})(),(()=>{"use strict";var e=t(7294),n=t(3935);function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}var o=t(5697),i=t.n(o);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function l(e){return"/"===e.charAt(0)}function c(e,n){for(var t=n,r=t+1,o=e.length;r<o;t+=1,r+=1)e[t]=e[r];e.pop()}const s=function(e,n){if(!e)throw new Error("Invariant failed")};function A(e){return"/"===e.charAt(0)?e:"/"+e}function u(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function f(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function p(e){var n=e.pathname,t=e.search,r=e.hash,o=n||"/";return t&&"?"!==t&&(o+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function h(e,n,t,r){var o;"string"==typeof e?(o=function(e){var n=e||"/",t="",r="",o=n.indexOf("#");-1!==o&&(r=n.substr(o),n=n.substr(0,o));var i=n.indexOf("?");return-1!==i&&(t=n.substr(i),n=n.substr(0,i)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e)).state=n:(void 0===(o=a({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==n&&void 0===o.state&&(o.state=n));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(o.key=t),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],o=n&&n.split("/")||[],i=e&&l(e),a=n&&l(n),s=i||a;if(e&&l(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var A=o[o.length-1];t="."===A||".."===A||""===A}else t=!1;for(var u=0,d=o.length;d>=0;d--){var f=o[d];"."===f?c(o,d):".."===f?(c(o,d),u++):u&&(c(o,d),u--)}if(!s)for(;u--;u)o.unshift("..");!s||""===o[0]||o[0]&&l(o[0])||o.unshift("");var p=o.join("/");return t&&"/"!==p.substr(-1)&&(p+="/"),p}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function C(){var e=null,n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,o){if(null!=e){var i="function"==typeof e?e(n,t):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var m=!("undefined"==typeof window||!window.document||!window.document.createElement);function w(e,n){n(window.confirm(e))}var g="hashchange",y={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+u(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:u,decodePath:A},slash:{encodePath:A,decodePath:A}};function b(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function v(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function x(e){window.location.replace(b(window.location.href)+"#"+e)}function I(e){void 0===e&&(e={}),m||s(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),r=t.getUserConfirmation,o=void 0===r?w:r,i=t.hashType,l=void 0===i?"slash":i,c=e.basename?f(A(e.basename)):"",u=y[l],I=u.encodePath,B=u.decodePath;function k(){var e=B(v());return c&&(e=d(e,c)),h(e)}var S=C();function _(e){a(j,e),j.length=n.length,S.notifyListeners(j.location,j.action)}var D=!1,E=null;function J(){var e,n,t=v(),r=I(t);if(t!==r)x(r);else{var i=k(),a=j.location;if(!D&&(n=i,(e=a).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(E===p(i))return;E=null,function(e){if(D)D=!1,_();else{S.confirmTransitionTo(e,"POP",o,(function(n){n?_({action:"POP",location:e}):function(e){var n=j.location,t=R.lastIndexOf(p(n));-1===t&&(t=0);var r=R.lastIndexOf(p(e));-1===r&&(r=0);var o=t-r;o&&(D=!0,z(o))}(e)}))}}(i)}}var O=v(),$=I(O);O!==$&&x($);var P=k(),R=[p(P)];function z(e){n.go(e)}var N=0;function M(e){1===(N+=e)&&1===e?window.addEventListener(g,J):0===N&&window.removeEventListener(g,J)}var T=!1,j={length:n.length,action:"POP",location:P,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=b(window.location.href)),t+"#"+I(c+p(e))},push:function(e,n){var t="PUSH",r=h(e,void 0,void 0,j.location);S.confirmTransitionTo(r,t,o,(function(e){if(e){var n=p(r),o=I(c+n);if(v()!==o){E=n,function(e){window.location.hash=e}(o);var i=R.lastIndexOf(p(j.location)),a=R.slice(0,i+1);a.push(n),R=a,_({action:t,location:r})}else _()}}))},replace:function(e,n){var t="REPLACE",r=h(e,void 0,void 0,j.location);S.confirmTransitionTo(r,t,o,(function(e){if(e){var n=p(r),o=I(c+n);v()!==o&&(E=n,x(o));var i=R.indexOf(p(j.location));-1!==i&&(R[i]=n),_({action:t,location:r})}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var n=S.setPrompt(e);return T||(M(1),T=!0),function(){return T&&(T=!1,M(-1)),n()}},listen:function(e){var n=S.appendListener(e);return M(1),function(){M(-1),n()}}};return j}var B=1073741823,k="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};function S(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}const _=e.createContext||function(n,t){var o,a,l,c="__create-react-context-"+((k[l="__global_unique_id__"]=(k[l]||0)+1)+"__"),s=function(e){function n(){var n;return(n=e.apply(this,arguments)||this).emitter=S(n.props.value),n}r(n,e);var o=n.prototype;return o.getChildContext=function(){var e;return(e={})[c]=this.emitter,e},o.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):B,0!=(n|=0)&&this.emitter.set(e.value,n))}var i,a},o.render=function(){return this.props.children},n}(e.Component);s.childContextTypes=((o={})[c]=i().object.isRequired,o);var A=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).state={value:n.getValue()},n.onUpdate=function(e,t){0!=((0|n.observedBits)&t)&&n.setState({value:n.getValue()})},n}r(t,e);var o=t.prototype;return o.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?B:n},o.componentDidMount=function(){this.context[c]&&this.context[c].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?B:e},o.componentWillUnmount=function(){this.context[c]&&this.context[c].off(this.onUpdate)},o.getValue=function(){return this.context[c]?this.context[c].get():n},o.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(e.Component);return A.contextTypes=((a={})[c]=i().object,a),{Provider:s,Consumer:A}};var D=t(9658),E=t.n(D);function J(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}t(9864),t(8679);var O=function(e){var n=_();return n.displayName="Router-History",n}(),$=function(e){var n=_();return n.displayName="Router",n}(),P=function(n){function t(e){var t;return(t=n.call(this,e)||this).state={location:e.history.location},t._isMounted=!1,t._pendingLocation=null,e.staticContext||(t.unlisten=e.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}r(t,n),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var o=t.prototype;return o.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},o.componentWillUnmount=function(){this.unlisten&&this.unlisten()},o.render=function(){return e.createElement($.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement(O.Provider,{children:this.props.children||null,value:this.props.history}))},t}(e.Component);e.Component,e.Component;var R={},z=0;function N(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,o=t.exact,i=void 0!==o&&o,a=t.strict,l=void 0!==a&&a,c=t.sensitive,s=void 0!==c&&c;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=R[t]||(R[t]={});if(r[e])return r[e];var o=[],i={regexp:E()(e,o,n),keys:o};return z<1e4&&(r[e]=i,z++),i}(t,{end:i,strict:l,sensitive:s}),o=r.regexp,a=r.keys,c=o.exec(e);if(!c)return null;var A=c[0],u=c.slice(1),d=e===A;return i&&!d?null:{path:t,url:"/"===t&&""===A?"/":A,isExact:d,params:a.reduce((function(e,n,t){return e[n.name]=u[t],e}),{})}}),null)}var M=function(n){function t(){return n.apply(this,arguments)||this}return r(t,n),t.prototype.render=function(){var n=this;return e.createElement($.Consumer,null,(function(t){t||s(!1);var r=n.props.location||t.location,o=a({},t,{location:r,match:n.props.computedMatch?n.props.computedMatch:n.props.path?N(r.pathname,n.props):t.match}),i=n.props,l=i.children,c=i.component,A=i.render;return Array.isArray(l)&&0===l.length&&(l=null),e.createElement($.Provider,{value:o},o.match?l?"function"==typeof l?l(o):l:c?e.createElement(c,o):A?A(o):null:"function"==typeof l?l(o):null)}))},t}(e.Component);e.Component;var T=function(n){function t(){return n.apply(this,arguments)||this}return r(t,n),t.prototype.render=function(){var n=this;return e.createElement($.Consumer,null,(function(t){t||s(!1);var r,o,i=n.props.location||t.location;return e.Children.forEach(n.props.children,(function(n){if(null==o&&e.isValidElement(n)){r=n;var l=n.props.path||n.props.from;o=l?N(i.pathname,a({},n.props,{path:l})):t.match}})),o?e.cloneElement(r,{location:i,computedMatch:o}):null}))},t}(e.Component);e.useContext,e.Component;var j=function(n){function t(){for(var e,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(e=n.call.apply(n,[this].concat(r))||this).history=I(e.props),e}return r(t,n),t.prototype.render=function(){return e.createElement(P,{history:this.history,children:this.props.children})},t}(e.Component),F=function(e,n){return"function"==typeof e?e(n):e},L=function(e,n){return"string"==typeof e?h(e,null,null,n):e},Y=function(e){return e},U=e.forwardRef;void 0===U&&(U=Y);var q=U((function(n,t){var r=n.innerRef,o=n.navigate,i=n.onClick,l=J(n,["innerRef","navigate","onClick"]),c=l.target,s=a({},l,{onClick:function(e){try{i&&i(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||c&&"_self"!==c||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),o())}});return s.ref=Y!==U&&t||r,e.createElement("a",s)})),G=U((function(n,t){var r=n.component,o=void 0===r?q:r,i=n.replace,l=n.to,c=n.innerRef,A=J(n,["component","replace","to","innerRef"]);return e.createElement($.Consumer,null,(function(n){n||s(!1);var r=n.history,u=L(F(l,n.location),n.location),d=u?r.createHref(u):"",f=a({},A,{href:d,navigate:function(){var e=F(l,n.location);(i?r.replace:r.push)(e)}});return Y!==U?f.ref=t||c:f.innerRef=c,e.createElement(o,f)}))})),Q=function(e){return e},W=e.forwardRef;void 0===W&&(W=Q),W((function(n,t){var r=n["aria-current"],o=void 0===r?"page":r,i=n.activeClassName,l=void 0===i?"active":i,c=n.activeStyle,A=n.className,u=n.exact,d=n.isActive,f=n.location,p=n.sensitive,h=n.strict,C=n.style,m=n.to,w=n.innerRef,g=J(n,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement($.Consumer,null,(function(n){n||s(!1);var r=f||n.location,i=L(F(m,r),r),y=i.pathname,b=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),v=b?N(r.pathname,{path:b,exact:u,sensitive:p,strict:h}):null,x=!!(d?d(v,r):v),I=x?function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(A,l):A,B=x?a({},C,{},c):C,k=a({"aria-current":x&&o||null,className:I,style:B,to:i},g);return Q!==W?k.ref=t||w:k.innerRef=w,e.createElement(G,k)}))}));var V=t(9669),H=t.n(V);function K(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Z(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function X(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function ee(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?X(Object(t),!0).forEach((function(n){ne(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):X(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function ne(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function te(e,n){var t;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=function(e,n){if(e){if("string"==typeof e)return re(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?re(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return a=e.done,e},e:function(e){l=!0,i=e},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}function re(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function oe(e,n,t,r,o,i,a){try{var l=e[i](a),c=l.value}catch(e){return void t(e)}l.done?n(c):Promise.resolve(c).then(r,o)}function ie(e){return function(){var n=this,t=arguments;return new Promise((function(r,o){var i=e.apply(n,t);function a(e){oe(i,r,o,a,l,"next",e)}function l(e){oe(i,r,o,a,l,"throw",e)}a(void 0)}))}}var ae=function(){var e=ie(regeneratorRuntime.mark((function e(){var n,t,r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,H().get("https://www.thecocktaildb.com/api/json/v1/1/random.php");case 3:return n=e.sent,t=n.data.drinks[0],e.next=7,ce(t);case 7:return r=e.sent,e.abrupt("return",{id:t.idDrink,title:t.strDrink,imgUrl:t.strDrinkThumb+"/preview",recipe:t.strInstructions,ingredients:r});case 11:throw e.prev=11,e.t0=e.catch(0),e.t0;case 14:case"end":return e.stop()}}),e,null,[[0,11]])})));return function(){return e.apply(this,arguments)}}();function le(){return(le=ie(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,H().get("https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list");case 2:return n=(n=e.sent).data.drinks.map((function(e){var n=e.strIngredient1;return H().get("https://www.thecocktaildb.com/api/json/v1/1/search.php?i=".concat(n))})),e.next=6,Promise.all(n);case 6:return n=(n=e.sent).map((function(e){return e.data.ingredients[0]})),e.abrupt("return",n.map((function(e){var n=e.idIngredient,t=e.strIngredient;return{id:n,title:t,imgUrl:se(t)}})));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var ce=function(){var e=ie(regeneratorRuntime.mark((function e(n){var t,r,o,i,a,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t="strMeasure",o=n["strIngredient"+(r=1)],i=n[t+r],a=[],l=[];o;)l.push(H().get("https://www.thecocktaildb.com/api/json/v1/1/search.php?i=".concat(o))),a.push({title:o,imgUrl:se(o),measure:i}),r++,o=n["strIngredient"+r],i=n[t+r];return e.prev=8,e.next=11,Promise.all(l);case 11:l=e.sent,a=a.map((function(e,n){return ee(ee({},e),{},{id:l[n].data.ingredients[0].idIngredient})})),e.next=18;break;case 15:throw e.prev=15,e.t0=e.catch(8),Error("Error while trying to get ingredient. ".concat(e.t0));case 18:return e.abrupt("return",a);case 19:case"end":return e.stop()}}),e,null,[[8,15]])})));return function(n){return e.apply(this,arguments)}}(),se=function(e){return"https://www.thecocktaildb.com/images/ingredients/".concat(e,"-Medium.png")},Ae=function e(n){var t=n.idDrink,r=n.strDrink,o=n.ingredients,i=n.strDrinkThumb;Z(this,e),this.id=t,this.name=r,this.ingredients=o,this.imgURL=i+"/preview"},ue=function(){function e(){Z(this,e)}var n,t,r,o;return t=e,r=null,o=[{key:"getAllCocktails",value:(n=ie(regeneratorRuntime.mark((function e(){var n,t,r,o,i,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list");case 2:if((n=e.sent).ok){e.next=6;break}return console.log("Can't get categories list"),e.abrupt("return");case 6:return e.next=8,n.json();case 8:t=(t=e.sent).drinks.map((function(e){return e.strCategory})),r=[],o=te(t);try{for(o.s();!(i=o.n()).done;)a=i.value,r.push(fetch("https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=".concat(a)))}catch(e){o.e(e)}finally{o.f()}return e.next=15,Promise.all(r);case 15:return r=(r=e.sent).map((function(e){return e.json()})),e.next=19,Promise.all(r);case 19:return r=(r=(r=(r=e.sent).map((function(e){return e.drinks}))).flat()).map((function(e){return new Ae(e)})),e.abrupt("return",r);case 24:case"end":return e.stop()}}),e)}))),function(){return n.apply(this,arguments)})}],r&&K(t.prototype,r),o&&K(t,o),e}(),de=t(7332),fe=t(3379),pe=t.n(fe),he=t(4969);pe()(he.Z,{insert:"head",singleton:!1}),he.Z.locals;const Ce=function(n){return e.createElement("div",{className:"splash-screen"},e.createElement("div",{className:"splash-screen__logo"},e.createElement("img",{"data-testid":"intro_image",src:de,alt:""})),e.createElement("div",{className:"splash-screen__call-to-action"},e.createElement("p",{"data-testid":"intro_text",className:"splash-screen__text"},"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tempora iusto recusandae porro accusantium, vel temporibus excepturi quae facilis omnis vero molestias doloribus id obcaecati, deleniti, veniam quibusdam cupiditate explicabo voluptatem."),e.createElement("button",{className:"button splash-screen__button",onClick:n.onClick},"START")))};var me=t(7192);pe()(me.Z,{insert:"head",singleton:!1}),me.Z.locals;const we=function(n){var t=n.title,r=n.imgUrl,o=n.selected,i=n.isQuizOver,a=n.isCocktailIngredient,l=n.onCardClick,c=o?"card_selected":"",s=i&&!a?"card_grayedout":"",A=i&&o&&a?"card_correct":"",u=i&&o&&!a?"card_wrong":"";return e.createElement("li",{className:"col-6 col-md-3",onClick:l},e.createElement("div",{className:"card ".concat(c," ").concat(s," ").concat(A," ").concat(u)},e.createElement("div",{className:"card__image"},e.createElement("img",{src:r})),e.createElement("div",{className:"card__name"},t)))};var ge=t(3467);pe()(ge.Z,{insert:"head",singleton:!1}),ge.Z.locals;const ye=function(n){var t=n.isQuizOver,r=n.ingredients,o=n.cocktailIngredients,i=n.onCardClick,a=r.map((function(n){var r=n.id,a=n.title,l=n.imgUrl,c=n.selected;return e.createElement(we,{key:r,title:a,imgUrl:l,selected:c,onCardClick:function(){return i(r)},isQuizOver:t,isCocktailIngredient:o.some((function(e){return e.id===r}))})}));return e.createElement("div",{className:"ingredients-grid"},e.createElement("ul",{className:"row cards-list"},a))};var be=t(8691);pe()(be.Z,{insert:"head",singleton:!1}),be.Z.locals;const ve=function(n){var t=n.children;return e.createElement("div",{className:"controls-panel"},t)};var xe=t(2817);pe()(xe.Z,{insert:"head",singleton:!1}),xe.Z.locals;const Ie=function(n){var t=n.children;return e.createElement("div",{className:"controls-panel_desktop"},e.createElement(ve,null,t))};var Be=t(2391);pe()(Be.Z,{insert:"head",singleton:!1}),Be.Z.locals;const ke=function(n){var t=n.children;return e.createElement("div",{className:"controls-panel_mobile"},e.createElement(ve,null,t))},Se=function(n){var t=n.className,r=n.onClick;return e.createElement("button",{className:t,onClick:r},"NEXT")};var _e=t(130);function De(e){return(De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ee(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Je(e,n){return(Je=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Oe(e,n){return!n||"object"!==De(n)&&"function"!=typeof n?$e(e):n}function $e(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Pe(e){return(Pe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}pe()(_e.Z,{insert:"head",singleton:!1}),_e.Z.locals;var Re=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Je(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=Pe(o);if(i){var t=Pe(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Oe(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={animation:0},n.handleAnimationEnd=n.handleAnimationEnd.bind($e(n)),n}return t=l,(r=[{key:"componentDidUpdate",value:function(e){e.selectedIngredientsCount!==this.props.selectedIngredientsCount&&this.setState({animation:1})}},{key:"handleAnimationEnd",value:function(){this.setState({animation:0})}},{key:"render",value:function(){var n=this.props,t=n.selectedIngredientsCount,r=n.ingredientsCount,o=n.className,i=this.state.animation;return e.createElement("div",{className:"".concat(o," counter"),animation:i,onAnimationEnd:this.handleAnimationEnd},t,"/",r)}}])&&Ee(t.prototype,r),l}(e.Component),ze=t(7233);pe()(ze.Z,{insert:"head",singleton:!1}),ze.Z.locals;const Ne=function(n){var t=n.onClick;return e.createElement("button",{className:"button  task-description-button",onClick:t},e.createElement("i",{className:"fas fa-cocktail","aria-hidden":"true"}))};var Me=t(3940);pe()(Me.Z,{insert:"head",singleton:!1}),Me.Z.locals;const Te=function(n){var t=n.cocktailTitle,r=n.cocktailImageUrl;return e.createElement("div",null,e.createElement("h2",{className:"title"},t),e.createElement("div",{className:"cocktail-image"},e.createElement("img",{src:r})))};var je=t(4079);function Fe(e){return(Fe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ye(e,n){return(Ye=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Ue(e,n){return!n||"object"!==Fe(n)&&"function"!=typeof n?qe(e):n}function qe(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ge(e){return(Ge=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}pe()(je.Z,{insert:"head",singleton:!1}),je.Z.locals;var Qe=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Ye(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=Ge(o);if(i){var t=Ge(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Ue(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={isMenuCollapsed:!1},n.handleShowDescriptionButtonClick=n.handleShowDescriptionButtonClick.bind(qe(n)),n}return t=l,(r=[{key:"componentDidMount",value:function(){var e=this;screen.width>768||setTimeout((function(){e.setState({isMenuCollapsed:!0})}),3e3)}},{key:"componentDidUpdate",value:function(e){var n=this;screen.width>768||(e.cocktail.id!=this.props.cocktail.id&&this.setState({isMenuCollapsed:!1}),this.state.isMenuCollapsed||setTimeout((function(){n.setState({isMenuCollapsed:!0})}),3e3))}},{key:"handleShowDescriptionButtonClick",value:function(){this.state.isMenuCollapsed&&this.setState({isMenuCollapsed:!1})}},{key:"render",value:function(){var n=this.props,t=n.cocktail,r=n.selectedIngredientsCounts,o=n.onNextClick,i=this.state.isMenuCollapsed,a=e.createElement(e.Fragment,null,e.createElement(Re,{className:"button controls controls__selected-counter",selectedIngredientsCount:r,ingredientsCount:t.ingredients.length}),e.createElement(Se,{className:"button controls",onClick:o}));return e.createElement(e.Fragment,null,e.createElement(Ne,{onClick:this.handleShowDescriptionButtonClick}),e.createElement(ke,null,a),e.createElement("div",{className:"quiz-menu ".concat(i?"collapsed":"")},e.createElement(Te,{cocktailTitle:t.title,cocktailImageUrl:t.imgUrl}),e.createElement(Ie,null,a)))}}])&&Le(t.prototype,r),l}(e.Component);function We(e){return(We="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ve(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function He(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Ke(e){return function(e){if(Array.isArray(e))return Ze(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return Ze(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ze(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ze(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function Xe(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function en(e,n){return(en=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function nn(e,n){return!n||"object"!==We(n)&&"function"!=typeof n?tn(e):n}function tn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function rn(e){return(rn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var on=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&en(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=rn(o);if(i){var t=rn(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return nn(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={cocktail:null,ingredients:null},n.handleNextButtonClick=n.handleNextButtonClick.bind(tn(n)),n.handleCardClick=n.handleCardClick.bind(tn(n)),n}return t=l,(r=[{key:"componentDidMount",value:function(){this.getNewCocktail()}},{key:"handleNextButtonClick",value:function(){this.getNewCocktail()}},{key:"handleCardClick",value:function(e){if(this.getSelectedIngredients().length!==this.state.cocktail.ingredients.length){var n=Ke(this.state.ingredients),t=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Ve(Object(t),!0).forEach((function(n){He(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ve(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},n.find((function(n){return n.id===e})));t.selected=!t.selected;var r=n.findIndex((function(e){return e.id===t.id}));n[r]=t,this.setState({ingredients:n})}}},{key:"getSelectedIngredients",value:function(){return this.state.ingredients.filter((function(e){return e.selected}))}},{key:"getNewCocktail",value:function(){var e=this;ae().then((function(n){var t=Ke(n.ingredients);!function(e,n){for(var t=n.filter((function(n){return!e.find((function(e){return e.id===n.id}))}));12!=e.length;){var r=Math.round(Math.random()*(t.length-1));e.push(t[r]),t.splice(r,1)}}(t,e.props.ingredientsCatalog),(t=function(e){for(var n=e.map((function(e,n){return n})),t=[],r=0;r<e.length;r++){var o=Math.round(Math.random()*(n.length-1));t.push(e[n[o]]),n.splice(o,1)}return t}(t)).forEach((function(e){e.selected=!1})),e.setState({cocktail:n,ingredients:t})}))}},{key:"render",value:function(){var n=this.state,t=n.cocktail,r=n.ingredients,o=null;return r&&(o=this.getSelectedIngredients()),e.createElement("div",null,t&&e.createElement(e.Fragment,null,e.createElement(ye,{isQuizOver:t.ingredients.length===o.length,cocktailIngredients:t.ingredients,ingredients:r,onCardClick:this.handleCardClick}),e.createElement(Qe,{cocktail:t,selectedIngredientsCounts:o.length,onNextClick:this.handleNextButtonClick})))}}])&&Xe(t.prototype,r),l}(e.Component);function an(e){return(an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ln(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function cn(e,n){return(cn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function sn(e,n){return!n||"object"!==an(n)&&"function"!=typeof n?An(e):n}function An(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function un(e){return(un=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var dn=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&cn(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=un(o);if(i){var t=un(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return sn(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={isQuizRunning:!1},n.handleStartButtonClick=n.handleStartButtonClick.bind(An(n)),n}return t=l,(r=[{key:"handleStartButtonClick",value:function(){this.setState({isQuizRunning:!0})}},{key:"render",value:function(){var n=this.state.isQuizRunning?e.createElement(on,{ingredientsCatalog:this.props.ingredientsCatalog}):e.createElement(Ce,{onClick:this.handleStartButtonClick});return e.createElement("main",null,n)}}])&&ln(t.prototype,r),l}(e.Component),fn=t(111);function pn(e){return(pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function hn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function Cn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function mn(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function wn(e,n){return(wn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function gn(e,n){return!n||"object"!==pn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function yn(e){return(yn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}pe()(fn.Z,{insert:"head",singleton:!1}),fn.Z.locals;var bn=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&wn(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=yn(o);if(i){var t=yn(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return gn(this,e)});function l(){return Cn(this,l),a.apply(this,arguments)}return t=l,(r=[{key:"componentDidMount",value:function(){vn()}},{key:"render",value:function(){return e.createElement("main",null,e.createElement("input",{className:"search",id:"search",placeholder:"Search..."}),e.createElement("div",{className:"page"},e.createElement("ul",{id:"cocktails-list",className:"page__cocktails-list cards-list row"}),e.createElement("div",{className:"page__paggination paggination paggination_hidden",id:"paggination"},e.createElement("i",{className:"fas fa-angle-left"}),e.createElement("ul",{className:"paggination__pages"}),e.createElement("i",{className:"fas fa-angle-right"}))),e.createElement("div",{className:"dimmer",id:"dimmer"}),e.createElement("div",{className:"popup",id:"cocktail-popup"},e.createElement("button",{className:"popup__close-btn",id:"close-popup"},e.createElement("i",{className:"fas fa-times"})),e.createElement("div",{className:"popup__cocktail-info cocktail-info"},e.createElement("div",{className:"cocktail-info__image"},e.createElement("img",{src:"",alt:""})),e.createElement("div",{className:"cocktail-info__recipe"}))))}}])&&mn(t.prototype,r),l}(e.Component),vn=function(){var e=1,n=document.querySelector("#cocktails-list"),t=document.querySelector("#paggination"),r=document.querySelector(".fa-angle-left"),o=document.querySelector(".fa-angle-right"),i=document.querySelector("#search"),a=document.querySelector("#dimmer"),l=document.querySelector("#cocktail-popup"),c=document.querySelector("#close-popup"),s=[],A=[];function u(){!function(){var n=document.querySelector(".paggination__pages");n.innerHTML="";var t=Math.ceil(A.length/16);if(t<=7)for(var r=1;r<=t;r++)n.innerHTML+="<li class=".concat(r===e?"paggination__current-page":"",">").concat(r,"</li>");else if(e<4){for(var o=1;o<=4;o++)n.innerHTML+="<li class=".concat(o===e?"paggination__current-page":"",">").concat(o,"</li>");n.innerHTML+='<li class="paggination__hellip">&hellip;</li>',n.innerHTML+="<li>".concat(t,"</li>")}else if(t-3<e){n.innerHTML+="<li>1</li>",n.innerHTML+='<li class="paggination__hellip">&hellip;</li>';for(var i=t-4;i<=t;i++)n.innerHTML+="<li class=".concat(i===e?"paggination__current-page":"",">").concat(i,"</li>")}else n.innerHTML+="<li>1</li>",n.innerHTML+='<li class="paggination__hellip">&hellip;</li>',n.innerHTML+="<li>".concat(e-1,"</li>"),n.innerHTML+='<li class="paggination__current-page">'.concat(e,"</li>"),n.innerHTML+="<li>".concat(e+1,"</li>"),n.innerHTML+='<li class="paggination__hellip">&hellip;</li>',n.innerHTML+="<li>".concat(t,"</li>")}(),function(e){n.innerHTML="";var t,r=function(e,n){var t;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=function(e,n){if(e){if("string"==typeof e)return hn(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?hn(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return a=e.done,e},e:function(e){l=!0,i=e},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}(A.slice(16*(e-1),16*(e-1)+16));try{for(r.s();!(t=r.n()).done;){var o=t.value;n.innerHTML+='\n              <li class="col-6 col-md-3">\n                <div class="card" data-cocktail-id='.concat(o.id,'>\n                  <div class="card__image">\n                    <img src="').concat(o.imgURL,'" alt=""/>\n                  </div>\n                  <div class="card__name">').concat(o.name,"</div>\n                </div>\n              </li>")}}catch(e){r.e(e)}finally{r.f()}}(e)}function d(){a.classList.remove("dimmer_active"),l.classList.remove("popup_active"),document.body.classList.remove("scroll-blocked")}ue.getAllCocktails().then((function(e){A=s=e,t.classList.remove("paggination_hidden"),u()})),t.addEventListener("click",(function(n){if(n.target.closest(".paggination__pages")&&"LI"===n.target.tagName){var t=parseInt(n.target.innerText);if(isNaN(t))return;e=t,u()}})),r.addEventListener("click",(function(n){1!==e&&(e--,u())})),o.addEventListener("click",(function(n){e!==Math.ceil(A.length/16)&&(e++,u())})),i.addEventListener("input",(function(n){A=s.filter((function(e){var t=e.name.toLowerCase(),r=n.target.value.toLowerCase();return t.startsWith(r)})),e=1,u()})),n.addEventListener("click",(function(e){var n=e.target.closest(".card");n&&(n.dataset.cocktailId,l.classList.add("popup_active"),a.classList.add("dimmer_active"),document.body.classList.add("scroll-blocked"))})),a.addEventListener("click",(function(e){d()})),c.addEventListener("click",(function(e){d()}))},xn=t(8569);function In(e){return(In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Bn(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function kn(e,n){return(kn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Sn(e,n){return!n||"object"!==In(n)&&"function"!=typeof n?_n(e):n}function _n(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Dn(e){return(Dn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}pe()(xn.Z,{insert:"head",singleton:!1}),xn.Z.locals;var En=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&kn(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=Dn(o);if(i){var t=Dn(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Sn(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={isActive:!1},n.handleClick=n.handleClick.bind(_n(n)),n}return t=l,(r=[{key:"handleClick",value:function(){this.setState((function(e){return{isActive:!e.isActive}}))}},{key:"render",value:function(){var n=this.state.isActive;return e.createElement("nav",null,e.createElement("div",{className:"burger-menu ".concat(n?"active":""),onClick:this.handleClick},e.createElement("span",null)),e.createElement("ul",{className:"menu ".concat(n?"active":"")},e.createElement("li",null,e.createElement(G,{to:"/quiz/",className:"menu__link"},"QUIZ")),e.createElement("li",null,e.createElement(G,{to:"/wiki/",className:"menu__link"},"WIKI"))))}}])&&Bn(t.prototype,r),l}(e.Component),Jn=t(1249);function On(){return e.createElement("header",{className:"header"},e.createElement("div",{className:"header__logo"},e.createElement("div",{className:"header__icon"},e.createElement("i",{className:"fas fa-cocktail"})),e.createElement("h1",{className:"header__text"},"Bootlegger")),e.createElement(En,null))}pe()(Jn.Z,{insert:"head",singleton:!1}),Jn.Z.locals;var $n=t(4861);function Pn(e){return(Pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Rn(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function zn(e,n){return(zn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Nn(e,n){return!n||"object"!==Pn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Mn(e){return(Mn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}pe()($n.Z,{insert:"head",singleton:!1}),$n.Z.locals;var Tn=function(n){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&zn(e,n)}(l,n);var t,r,o,i,a=(o=l,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=Mn(o);if(i){var t=Mn(this).constructor;e=Reflect.construct(n,arguments,t)}else e=n.apply(this,arguments);return Nn(this,e)});function l(e){var n;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,e)).state={ingredientsCatalog:[]},n}return t=l,(r=[{key:"componentDidMount",value:function(){var e=this;(function(){return le.apply(this,arguments)})().then((function(n){e.setState({ingredientsCatalog:n})}))}},{key:"render",value:function(){var n=this.state.ingredientsCatalog;return e.createElement("div",{className:"app"},e.createElement(j,{basename:"/"},e.createElement(On,null),e.createElement(T,null,e.createElement(M,{exact:!0,path:["/","/quiz"]},0!=n.length&&e.createElement(dn,{ingredientsCatalog:n})),e.createElement(M,{path:"/wiki"},e.createElement(bn,null)))))}}])&&Rn(t.prototype,r),l}(e.Component);n.render(e.createElement(Tn,null),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,